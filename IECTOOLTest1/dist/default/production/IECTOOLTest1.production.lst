

Microchip Technology PIC LITE Macro Assembler V1.37 build -260352376 
                                                                                               Sun Sep 18 15:24:36 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	16F18344
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	swtext1,local,class=CONST,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	swtext2,local,class=CONST,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2
    45                           	psect	text28,local,class=CODE,merge=1,delta=2
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	psect	text30,local,class=CODE,merge=1,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2
    49                           	psect	text32,local,class=CODE,merge=1,delta=2
    50                           	psect	text33,local,class=CODE,merge=1,delta=2
    51                           	psect	text34,local,class=CODE,merge=1,delta=2
    52                           	psect	text35,local,class=CODE,merge=1,delta=2
    53                           	psect	intentry,global,class=CODE,delta=2
    54                           	psect	text37,local,class=CODE,merge=1,delta=2
    55                           	psect	text38,local,class=CODE,merge=1,delta=2
    56                           	psect	text39,local,class=CODE,merge=1,delta=2
    57                           	psect	text40,local,class=CODE,merge=1,delta=2
    58                           	psect	text41,local,class=CODE,merge=1,delta=2
    59                           	psect	text42,local,class=CODE,merge=1,delta=2
    60                           	psect	text43,local,class=CODE,merge=1,delta=2
    61                           	psect	text44,local,class=CODE,merge=1,delta=2
    62                           	psect	text45,local,class=CODE,merge=1,delta=2
    63                           	psect	text46,local,class=CODE,merge=1,delta=2
    64                           	dabs	1,0x7E,2
    65  0000                     	;# 
    66  0001                     	;# 
    67  0002                     	;# 
    68  0003                     	;# 
    69  0004                     	;# 
    70  0005                     	;# 
    71  0006                     	;# 
    72  0007                     	;# 
    73  0008                     	;# 
    74  0009                     	;# 
    75  000A                     	;# 
    76  000B                     	;# 
    77  000C                     	;# 
    78  000D                     	;# 
    79  000E                     	;# 
    80  0010                     	;# 
    81  0011                     	;# 
    82  0012                     	;# 
    83  0013                     	;# 
    84  0014                     	;# 
    85  0015                     	;# 
    86  0016                     	;# 
    87  0017                     	;# 
    88  0018                     	;# 
    89  0019                     	;# 
    90  0019                     	;# 
    91  001A                     	;# 
    92  001B                     	;# 
    93  001C                     	;# 
    94  001D                     	;# 
    95  001E                     	;# 
    96  001F                     	;# 
    97  008C                     	;# 
    98  008D                     	;# 
    99  008E                     	;# 
   100  0090                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0097                     	;# 
   106  009B                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  009F                     	;# 
   112  010C                     	;# 
   113  010D                     	;# 
   114  010E                     	;# 
   115  0111                     	;# 
   116  0112                     	;# 
   117  0113                     	;# 
   118  0114                     	;# 
   119  0115                     	;# 
   120  0116                     	;# 
   121  0117                     	;# 
   122  0118                     	;# 
   123  0119                     	;# 
   124  018C                     	;# 
   125  018D                     	;# 
   126  018E                     	;# 
   127  0197                     	;# 
   128  0199                     	;# 
   129  0199                     	;# 
   130  0199                     	;# 
   131  019A                     	;# 
   132  019A                     	;# 
   133  019A                     	;# 
   134  019B                     	;# 
   135  019B                     	;# 
   136  019B                     	;# 
   137  019B                     	;# 
   138  019B                     	;# 
   139  019C                     	;# 
   140  019C                     	;# 
   141  019C                     	;# 
   142  019D                     	;# 
   143  019D                     	;# 
   144  019D                     	;# 
   145  019E                     	;# 
   146  019E                     	;# 
   147  019E                     	;# 
   148  019F                     	;# 
   149  019F                     	;# 
   150  019F                     	;# 
   151  019F                     	;# 
   152  019F                     	;# 
   153  020C                     	;# 
   154  020D                     	;# 
   155  020E                     	;# 
   156  0211                     	;# 
   157  0211                     	;# 
   158  0212                     	;# 
   159  0212                     	;# 
   160  0213                     	;# 
   161  0213                     	;# 
   162  0214                     	;# 
   163  0214                     	;# 
   164  0215                     	;# 
   165  0215                     	;# 
   166  0215                     	;# 
   167  0215                     	;# 
   168  0216                     	;# 
   169  0216                     	;# 
   170  0217                     	;# 
   171  0217                     	;# 
   172  028C                     	;# 
   173  028D                     	;# 
   174  028E                     	;# 
   175  0291                     	;# 
   176  0291                     	;# 
   177  0292                     	;# 
   178  0293                     	;# 
   179  0294                     	;# 
   180  0295                     	;# 
   181  0295                     	;# 
   182  0296                     	;# 
   183  0297                     	;# 
   184  0298                     	;# 
   185  029F                     	;# 
   186  030C                     	;# 
   187  030D                     	;# 
   188  030E                     	;# 
   189  0311                     	;# 
   190  0311                     	;# 
   191  0312                     	;# 
   192  0313                     	;# 
   193  0314                     	;# 
   194  0315                     	;# 
   195  0315                     	;# 
   196  0316                     	;# 
   197  0317                     	;# 
   198  0318                     	;# 
   199  038C                     	;# 
   200  038D                     	;# 
   201  038E                     	;# 
   202  0391                     	;# 
   203  0392                     	;# 
   204  0393                     	;# 
   205  0394                     	;# 
   206  0395                     	;# 
   207  0396                     	;# 
   208  0397                     	;# 
   209  0398                     	;# 
   210  0399                     	;# 
   211  039A                     	;# 
   212  039C                     	;# 
   213  039D                     	;# 
   214  039E                     	;# 
   215  039F                     	;# 
   216  040C                     	;# 
   217  040D                     	;# 
   218  040E                     	;# 
   219  0411                     	;# 
   220  0411                     	;# 
   221  0412                     	;# 
   222  0413                     	;# 
   223  0414                     	;# 
   224  0415                     	;# 
   225  0416                     	;# 
   226  0417                     	;# 
   227  0418                     	;# 
   228  0418                     	;# 
   229  0419                     	;# 
   230  041A                     	;# 
   231  041B                     	;# 
   232  041C                     	;# 
   233  041D                     	;# 
   234  041E                     	;# 
   235  041F                     	;# 
   236  048C                     	;# 
   237  048D                     	;# 
   238  048E                     	;# 
   239  0498                     	;# 
   240  0498                     	;# 
   241  0499                     	;# 
   242  049A                     	;# 
   243  049B                     	;# 
   244  049B                     	;# 
   245  049C                     	;# 
   246  049D                     	;# 
   247  049E                     	;# 
   248  049F                     	;# 
   249  0617                     	;# 
   250  0618                     	;# 
   251  0619                     	;# 
   252  0619                     	;# 
   253  061A                     	;# 
   254  061B                     	;# 
   255  061C                     	;# 
   256  061C                     	;# 
   257  061F                     	;# 
   258  0691                     	;# 
   259  0692                     	;# 
   260  0693                     	;# 
   261  0694                     	;# 
   262  0695                     	;# 
   263  0696                     	;# 
   264  0697                     	;# 
   265  0698                     	;# 
   266  0699                     	;# 
   267  0711                     	;# 
   268  0712                     	;# 
   269  0713                     	;# 
   270  0714                     	;# 
   271  0715                     	;# 
   272  0716                     	;# 
   273  0717                     	;# 
   274  0718                     	;# 
   275  0719                     	;# 
   276  0891                     	;# 
   277  0891                     	;# 
   278  0892                     	;# 
   279  0893                     	;# 
   280  0893                     	;# 
   281  0894                     	;# 
   282  0895                     	;# 
   283  0896                     	;# 
   284  089B                     	;# 
   285  0911                     	;# 
   286  0912                     	;# 
   287  0913                     	;# 
   288  0914                     	;# 
   289  0915                     	;# 
   290  0916                     	;# 
   291  0918                     	;# 
   292  0919                     	;# 
   293  091A                     	;# 
   294  091B                     	;# 
   295  091C                     	;# 
   296  091D                     	;# 
   297  091E                     	;# 
   298  091F                     	;# 
   299  0E0F                     	;# 
   300  0E10                     	;# 
   301  0E11                     	;# 
   302  0E12                     	;# 
   303  0E13                     	;# 
   304  0E14                     	;# 
   305  0E15                     	;# 
   306  0E16                     	;# 
   307  0E17                     	;# 
   308  0E18                     	;# 
   309  0E19                     	;# 
   310  0E1A                     	;# 
   311  0E1B                     	;# 
   312  0E1C                     	;# 
   313  0E20                     	;# 
   314  0E21                     	;# 
   315  0E22                     	;# 
   316  0E24                     	;# 
   317  0E25                     	;# 
   318  0E28                     	;# 
   319  0E29                     	;# 
   320  0E2A                     	;# 
   321  0E2B                     	;# 
   322  0E2C                     	;# 
   323  0E2D                     	;# 
   324  0E2E                     	;# 
   325  0E2F                     	;# 
   326  0E90                     	;# 
   327  0E91                     	;# 
   328  0E92                     	;# 
   329  0E94                     	;# 
   330  0E95                     	;# 
   331  0E9C                     	;# 
   332  0E9D                     	;# 
   333  0E9E                     	;# 
   334  0E9F                     	;# 
   335  0EA0                     	;# 
   336  0EA1                     	;# 
   337  0EA2                     	;# 
   338  0EA3                     	;# 
   339  0EA4                     	;# 
   340  0EA5                     	;# 
   341  0EA6                     	;# 
   342  0EA7                     	;# 
   343  0F0F                     	;# 
   344  0F10                     	;# 
   345  0F11                     	;# 
   346  0F12                     	;# 
   347  0F13                     	;# 
   348  0F14                     	;# 
   349  0F15                     	;# 
   350  0F16                     	;# 
   351  0F17                     	;# 
   352  0F18                     	;# 
   353  0F19                     	;# 
   354  0F1A                     	;# 
   355  0F1B                     	;# 
   356  0F1C                     	;# 
   357  0F1D                     	;# 
   358  0F1E                     	;# 
   359  0F1F                     	;# 
   360  0F20                     	;# 
   361  0F21                     	;# 
   362  0F22                     	;# 
   363  0F23                     	;# 
   364  0F24                     	;# 
   365  0F25                     	;# 
   366  0F26                     	;# 
   367  0F27                     	;# 
   368  0F28                     	;# 
   369  0F29                     	;# 
   370  0F2A                     	;# 
   371  0F2B                     	;# 
   372  0F2C                     	;# 
   373  0F2D                     	;# 
   374  0F2E                     	;# 
   375  0F2F                     	;# 
   376  0F30                     	;# 
   377  0F31                     	;# 
   378  0F32                     	;# 
   379  0F33                     	;# 
   380  0F34                     	;# 
   381  0F35                     	;# 
   382  0F36                     	;# 
   383  0F37                     	;# 
   384  0FE4                     	;# 
   385  0FE5                     	;# 
   386  0FE6                     	;# 
   387  0FE7                     	;# 
   388  0FE8                     	;# 
   389  0FE9                     	;# 
   390  0FEA                     	;# 
   391  0FEB                     	;# 
   392  0FED                     	;# 
   393  0FEE                     	;# 
   394  0FEF                     	;# 
   395  0000                     	;# 
   396  0001                     	;# 
   397  0002                     	;# 
   398  0003                     	;# 
   399  0004                     	;# 
   400  0005                     	;# 
   401  0006                     	;# 
   402  0007                     	;# 
   403  0008                     	;# 
   404  0009                     	;# 
   405  000A                     	;# 
   406  000B                     	;# 
   407  000C                     	;# 
   408  000D                     	;# 
   409  000E                     	;# 
   410  0010                     	;# 
   411  0011                     	;# 
   412  0012                     	;# 
   413  0013                     	;# 
   414  0014                     	;# 
   415  0015                     	;# 
   416  0016                     	;# 
   417  0017                     	;# 
   418  0018                     	;# 
   419  0019                     	;# 
   420  0019                     	;# 
   421  001A                     	;# 
   422  001B                     	;# 
   423  001C                     	;# 
   424  001D                     	;# 
   425  001E                     	;# 
   426  001F                     	;# 
   427  008C                     	;# 
   428  008D                     	;# 
   429  008E                     	;# 
   430  0090                     	;# 
   431  0091                     	;# 
   432  0092                     	;# 
   433  0093                     	;# 
   434  0094                     	;# 
   435  0097                     	;# 
   436  009B                     	;# 
   437  009B                     	;# 
   438  009C                     	;# 
   439  009D                     	;# 
   440  009E                     	;# 
   441  009F                     	;# 
   442  010C                     	;# 
   443  010D                     	;# 
   444  010E                     	;# 
   445  0111                     	;# 
   446  0112                     	;# 
   447  0113                     	;# 
   448  0114                     	;# 
   449  0115                     	;# 
   450  0116                     	;# 
   451  0117                     	;# 
   452  0118                     	;# 
   453  0119                     	;# 
   454  018C                     	;# 
   455  018D                     	;# 
   456  018E                     	;# 
   457  0197                     	;# 
   458  0199                     	;# 
   459  0199                     	;# 
   460  0199                     	;# 
   461  019A                     	;# 
   462  019A                     	;# 
   463  019A                     	;# 
   464  019B                     	;# 
   465  019B                     	;# 
   466  019B                     	;# 
   467  019B                     	;# 
   468  019B                     	;# 
   469  019C                     	;# 
   470  019C                     	;# 
   471  019C                     	;# 
   472  019D                     	;# 
   473  019D                     	;# 
   474  019D                     	;# 
   475  019E                     	;# 
   476  019E                     	;# 
   477  019E                     	;# 
   478  019F                     	;# 
   479  019F                     	;# 
   480  019F                     	;# 
   481  019F                     	;# 
   482  019F                     	;# 
   483  020C                     	;# 
   484  020D                     	;# 
   485  020E                     	;# 
   486  0211                     	;# 
   487  0211                     	;# 
   488  0212                     	;# 
   489  0212                     	;# 
   490  0213                     	;# 
   491  0213                     	;# 
   492  0214                     	;# 
   493  0214                     	;# 
   494  0215                     	;# 
   495  0215                     	;# 
   496  0215                     	;# 
   497  0215                     	;# 
   498  0216                     	;# 
   499  0216                     	;# 
   500  0217                     	;# 
   501  0217                     	;# 
   502  028C                     	;# 
   503  028D                     	;# 
   504  028E                     	;# 
   505  0291                     	;# 
   506  0291                     	;# 
   507  0292                     	;# 
   508  0293                     	;# 
   509  0294                     	;# 
   510  0295                     	;# 
   511  0295                     	;# 
   512  0296                     	;# 
   513  0297                     	;# 
   514  0298                     	;# 
   515  029F                     	;# 
   516  030C                     	;# 
   517  030D                     	;# 
   518  030E                     	;# 
   519  0311                     	;# 
   520  0311                     	;# 
   521  0312                     	;# 
   522  0313                     	;# 
   523  0314                     	;# 
   524  0315                     	;# 
   525  0315                     	;# 
   526  0316                     	;# 
   527  0317                     	;# 
   528  0318                     	;# 
   529  038C                     	;# 
   530  038D                     	;# 
   531  038E                     	;# 
   532  0391                     	;# 
   533  0392                     	;# 
   534  0393                     	;# 
   535  0394                     	;# 
   536  0395                     	;# 
   537  0396                     	;# 
   538  0397                     	;# 
   539  0398                     	;# 
   540  0399                     	;# 
   541  039A                     	;# 
   542  039C                     	;# 
   543  039D                     	;# 
   544  039E                     	;# 
   545  039F                     	;# 
   546  040C                     	;# 
   547  040D                     	;# 
   548  040E                     	;# 
   549  0411                     	;# 
   550  0411                     	;# 
   551  0412                     	;# 
   552  0413                     	;# 
   553  0414                     	;# 
   554  0415                     	;# 
   555  0416                     	;# 
   556  0417                     	;# 
   557  0418                     	;# 
   558  0418                     	;# 
   559  0419                     	;# 
   560  041A                     	;# 
   561  041B                     	;# 
   562  041C                     	;# 
   563  041D                     	;# 
   564  041E                     	;# 
   565  041F                     	;# 
   566  048C                     	;# 
   567  048D                     	;# 
   568  048E                     	;# 
   569  0498                     	;# 
   570  0498                     	;# 
   571  0499                     	;# 
   572  049A                     	;# 
   573  049B                     	;# 
   574  049B                     	;# 
   575  049C                     	;# 
   576  049D                     	;# 
   577  049E                     	;# 
   578  049F                     	;# 
   579  0617                     	;# 
   580  0618                     	;# 
   581  0619                     	;# 
   582  0619                     	;# 
   583  061A                     	;# 
   584  061B                     	;# 
   585  061C                     	;# 
   586  061C                     	;# 
   587  061F                     	;# 
   588  0691                     	;# 
   589  0692                     	;# 
   590  0693                     	;# 
   591  0694                     	;# 
   592  0695                     	;# 
   593  0696                     	;# 
   594  0697                     	;# 
   595  0698                     	;# 
   596  0699                     	;# 
   597  0711                     	;# 
   598  0712                     	;# 
   599  0713                     	;# 
   600  0714                     	;# 
   601  0715                     	;# 
   602  0716                     	;# 
   603  0717                     	;# 
   604  0718                     	;# 
   605  0719                     	;# 
   606  0891                     	;# 
   607  0891                     	;# 
   608  0892                     	;# 
   609  0893                     	;# 
   610  0893                     	;# 
   611  0894                     	;# 
   612  0895                     	;# 
   613  0896                     	;# 
   614  089B                     	;# 
   615  0911                     	;# 
   616  0912                     	;# 
   617  0913                     	;# 
   618  0914                     	;# 
   619  0915                     	;# 
   620  0916                     	;# 
   621  0918                     	;# 
   622  0919                     	;# 
   623  091A                     	;# 
   624  091B                     	;# 
   625  091C                     	;# 
   626  091D                     	;# 
   627  091E                     	;# 
   628  091F                     	;# 
   629  0E0F                     	;# 
   630  0E10                     	;# 
   631  0E11                     	;# 
   632  0E12                     	;# 
   633  0E13                     	;# 
   634  0E14                     	;# 
   635  0E15                     	;# 
   636  0E16                     	;# 
   637  0E17                     	;# 
   638  0E18                     	;# 
   639  0E19                     	;# 
   640  0E1A                     	;# 
   641  0E1B                     	;# 
   642  0E1C                     	;# 
   643  0E20                     	;# 
   644  0E21                     	;# 
   645  0E22                     	;# 
   646  0E24                     	;# 
   647  0E25                     	;# 
   648  0E28                     	;# 
   649  0E29                     	;# 
   650  0E2A                     	;# 
   651  0E2B                     	;# 
   652  0E2C                     	;# 
   653  0E2D                     	;# 
   654  0E2E                     	;# 
   655  0E2F                     	;# 
   656  0E90                     	;# 
   657  0E91                     	;# 
   658  0E92                     	;# 
   659  0E94                     	;# 
   660  0E95                     	;# 
   661  0E9C                     	;# 
   662  0E9D                     	;# 
   663  0E9E                     	;# 
   664  0E9F                     	;# 
   665  0EA0                     	;# 
   666  0EA1                     	;# 
   667  0EA2                     	;# 
   668  0EA3                     	;# 
   669  0EA4                     	;# 
   670  0EA5                     	;# 
   671  0EA6                     	;# 
   672  0EA7                     	;# 
   673  0F0F                     	;# 
   674  0F10                     	;# 
   675  0F11                     	;# 
   676  0F12                     	;# 
   677  0F13                     	;# 
   678  0F14                     	;# 
   679  0F15                     	;# 
   680  0F16                     	;# 
   681  0F17                     	;# 
   682  0F18                     	;# 
   683  0F19                     	;# 
   684  0F1A                     	;# 
   685  0F1B                     	;# 
   686  0F1C                     	;# 
   687  0F1D                     	;# 
   688  0F1E                     	;# 
   689  0F1F                     	;# 
   690  0F20                     	;# 
   691  0F21                     	;# 
   692  0F22                     	;# 
   693  0F23                     	;# 
   694  0F24                     	;# 
   695  0F25                     	;# 
   696  0F26                     	;# 
   697  0F27                     	;# 
   698  0F28                     	;# 
   699  0F29                     	;# 
   700  0F2A                     	;# 
   701  0F2B                     	;# 
   702  0F2C                     	;# 
   703  0F2D                     	;# 
   704  0F2E                     	;# 
   705  0F2F                     	;# 
   706  0F30                     	;# 
   707  0F31                     	;# 
   708  0F32                     	;# 
   709  0F33                     	;# 
   710  0F34                     	;# 
   711  0F35                     	;# 
   712  0F36                     	;# 
   713  0F37                     	;# 
   714  0FE4                     	;# 
   715  0FE5                     	;# 
   716  0FE6                     	;# 
   717  0FE7                     	;# 
   718  0FE8                     	;# 
   719  0FE9                     	;# 
   720  0FEA                     	;# 
   721  0FEB                     	;# 
   722  0FED                     	;# 
   723  0FEE                     	;# 
   724  0FEF                     	;# 
   725  0000                     	;# 
   726  0001                     	;# 
   727  0002                     	;# 
   728  0003                     	;# 
   729  0004                     	;# 
   730  0005                     	;# 
   731  0006                     	;# 
   732  0007                     	;# 
   733  0008                     	;# 
   734  0009                     	;# 
   735  000A                     	;# 
   736  000B                     	;# 
   737  000C                     	;# 
   738  000D                     	;# 
   739  000E                     	;# 
   740  0010                     	;# 
   741  0011                     	;# 
   742  0012                     	;# 
   743  0013                     	;# 
   744  0014                     	;# 
   745  0015                     	;# 
   746  0016                     	;# 
   747  0017                     	;# 
   748  0018                     	;# 
   749  0019                     	;# 
   750  0019                     	;# 
   751  001A                     	;# 
   752  001B                     	;# 
   753  001C                     	;# 
   754  001D                     	;# 
   755  001E                     	;# 
   756  001F                     	;# 
   757  008C                     	;# 
   758  008D                     	;# 
   759  008E                     	;# 
   760  0090                     	;# 
   761  0091                     	;# 
   762  0092                     	;# 
   763  0093                     	;# 
   764  0094                     	;# 
   765  0097                     	;# 
   766  009B                     	;# 
   767  009B                     	;# 
   768  009C                     	;# 
   769  009D                     	;# 
   770  009E                     	;# 
   771  009F                     	;# 
   772  010C                     	;# 
   773  010D                     	;# 
   774  010E                     	;# 
   775  0111                     	;# 
   776  0112                     	;# 
   777  0113                     	;# 
   778  0114                     	;# 
   779  0115                     	;# 
   780  0116                     	;# 
   781  0117                     	;# 
   782  0118                     	;# 
   783  0119                     	;# 
   784  018C                     	;# 
   785  018D                     	;# 
   786  018E                     	;# 
   787  0197                     	;# 
   788  0199                     	;# 
   789  0199                     	;# 
   790  0199                     	;# 
   791  019A                     	;# 
   792  019A                     	;# 
   793  019A                     	;# 
   794  019B                     	;# 
   795  019B                     	;# 
   796  019B                     	;# 
   797  019B                     	;# 
   798  019B                     	;# 
   799  019C                     	;# 
   800  019C                     	;# 
   801  019C                     	;# 
   802  019D                     	;# 
   803  019D                     	;# 
   804  019D                     	;# 
   805  019E                     	;# 
   806  019E                     	;# 
   807  019E                     	;# 
   808  019F                     	;# 
   809  019F                     	;# 
   810  019F                     	;# 
   811  019F                     	;# 
   812  019F                     	;# 
   813  020C                     	;# 
   814  020D                     	;# 
   815  020E                     	;# 
   816  0211                     	;# 
   817  0211                     	;# 
   818  0212                     	;# 
   819  0212                     	;# 
   820  0213                     	;# 
   821  0213                     	;# 
   822  0214                     	;# 
   823  0214                     	;# 
   824  0215                     	;# 
   825  0215                     	;# 
   826  0215                     	;# 
   827  0215                     	;# 
   828  0216                     	;# 
   829  0216                     	;# 
   830  0217                     	;# 
   831  0217                     	;# 
   832  028C                     	;# 
   833  028D                     	;# 
   834  028E                     	;# 
   835  0291                     	;# 
   836  0291                     	;# 
   837  0292                     	;# 
   838  0293                     	;# 
   839  0294                     	;# 
   840  0295                     	;# 
   841  0295                     	;# 
   842  0296                     	;# 
   843  0297                     	;# 
   844  0298                     	;# 
   845  029F                     	;# 
   846  030C                     	;# 
   847  030D                     	;# 
   848  030E                     	;# 
   849  0311                     	;# 
   850  0311                     	;# 
   851  0312                     	;# 
   852  0313                     	;# 
   853  0314                     	;# 
   854  0315                     	;# 
   855  0315                     	;# 
   856  0316                     	;# 
   857  0317                     	;# 
   858  0318                     	;# 
   859  038C                     	;# 
   860  038D                     	;# 
   861  038E                     	;# 
   862  0391                     	;# 
   863  0392                     	;# 
   864  0393                     	;# 
   865  0394                     	;# 
   866  0395                     	;# 
   867  0396                     	;# 
   868  0397                     	;# 
   869  0398                     	;# 
   870  0399                     	;# 
   871  039A                     	;# 
   872  039C                     	;# 
   873  039D                     	;# 
   874  039E                     	;# 
   875  039F                     	;# 
   876  040C                     	;# 
   877  040D                     	;# 
   878  040E                     	;# 
   879  0411                     	;# 
   880  0411                     	;# 
   881  0412                     	;# 
   882  0413                     	;# 
   883  0414                     	;# 
   884  0415                     	;# 
   885  0416                     	;# 
   886  0417                     	;# 
   887  0418                     	;# 
   888  0418                     	;# 
   889  0419                     	;# 
   890  041A                     	;# 
   891  041B                     	;# 
   892  041C                     	;# 
   893  041D                     	;# 
   894  041E                     	;# 
   895  041F                     	;# 
   896  048C                     	;# 
   897  048D                     	;# 
   898  048E                     	;# 
   899  0498                     	;# 
   900  0498                     	;# 
   901  0499                     	;# 
   902  049A                     	;# 
   903  049B                     	;# 
   904  049B                     	;# 
   905  049C                     	;# 
   906  049D                     	;# 
   907  049E                     	;# 
   908  049F                     	;# 
   909  0617                     	;# 
   910  0618                     	;# 
   911  0619                     	;# 
   912  0619                     	;# 
   913  061A                     	;# 
   914  061B                     	;# 
   915  061C                     	;# 
   916  061C                     	;# 
   917  061F                     	;# 
   918  0691                     	;# 
   919  0692                     	;# 
   920  0693                     	;# 
   921  0694                     	;# 
   922  0695                     	;# 
   923  0696                     	;# 
   924  0697                     	;# 
   925  0698                     	;# 
   926  0699                     	;# 
   927  0711                     	;# 
   928  0712                     	;# 
   929  0713                     	;# 
   930  0714                     	;# 
   931  0715                     	;# 
   932  0716                     	;# 
   933  0717                     	;# 
   934  0718                     	;# 
   935  0719                     	;# 
   936  0891                     	;# 
   937  0891                     	;# 
   938  0892                     	;# 
   939  0893                     	;# 
   940  0893                     	;# 
   941  0894                     	;# 
   942  0895                     	;# 
   943  0896                     	;# 
   944  089B                     	;# 
   945  0911                     	;# 
   946  0912                     	;# 
   947  0913                     	;# 
   948  0914                     	;# 
   949  0915                     	;# 
   950  0916                     	;# 
   951  0918                     	;# 
   952  0919                     	;# 
   953  091A                     	;# 
   954  091B                     	;# 
   955  091C                     	;# 
   956  091D                     	;# 
   957  091E                     	;# 
   958  091F                     	;# 
   959  0E0F                     	;# 
   960  0E10                     	;# 
   961  0E11                     	;# 
   962  0E12                     	;# 
   963  0E13                     	;# 
   964  0E14                     	;# 
   965  0E15                     	;# 
   966  0E16                     	;# 
   967  0E17                     	;# 
   968  0E18                     	;# 
   969  0E19                     	;# 
   970  0E1A                     	;# 
   971  0E1B                     	;# 
   972  0E1C                     	;# 
   973  0E20                     	;# 
   974  0E21                     	;# 
   975  0E22                     	;# 
   976  0E24                     	;# 
   977  0E25                     	;# 
   978  0E28                     	;# 
   979  0E29                     	;# 
   980  0E2A                     	;# 
   981  0E2B                     	;# 
   982  0E2C                     	;# 
   983  0E2D                     	;# 
   984  0E2E                     	;# 
   985  0E2F                     	;# 
   986  0E90                     	;# 
   987  0E91                     	;# 
   988  0E92                     	;# 
   989  0E94                     	;# 
   990  0E95                     	;# 
   991  0E9C                     	;# 
   992  0E9D                     	;# 
   993  0E9E                     	;# 
   994  0E9F                     	;# 
   995  0EA0                     	;# 
   996  0EA1                     	;# 
   997  0EA2                     	;# 
   998  0EA3                     	;# 
   999  0EA4                     	;# 
  1000  0EA5                     	;# 
  1001  0EA6                     	;# 
  1002  0EA7                     	;# 
  1003  0F0F                     	;# 
  1004  0F10                     	;# 
  1005  0F11                     	;# 
  1006  0F12                     	;# 
  1007  0F13                     	;# 
  1008  0F14                     	;# 
  1009  0F15                     	;# 
  1010  0F16                     	;# 
  1011  0F17                     	;# 
  1012  0F18                     	;# 
  1013  0F19                     	;# 
  1014  0F1A                     	;# 
  1015  0F1B                     	;# 
  1016  0F1C                     	;# 
  1017  0F1D                     	;# 
  1018  0F1E                     	;# 
  1019  0F1F                     	;# 
  1020  0F20                     	;# 
  1021  0F21                     	;# 
  1022  0F22                     	;# 
  1023  0F23                     	;# 
  1024  0F24                     	;# 
  1025  0F25                     	;# 
  1026  0F26                     	;# 
  1027  0F27                     	;# 
  1028  0F28                     	;# 
  1029  0F29                     	;# 
  1030  0F2A                     	;# 
  1031  0F2B                     	;# 
  1032  0F2C                     	;# 
  1033  0F2D                     	;# 
  1034  0F2E                     	;# 
  1035  0F2F                     	;# 
  1036  0F30                     	;# 
  1037  0F31                     	;# 
  1038  0F32                     	;# 
  1039  0F33                     	;# 
  1040  0F34                     	;# 
  1041  0F35                     	;# 
  1042  0F36                     	;# 
  1043  0F37                     	;# 
  1044  0FE4                     	;# 
  1045  0FE5                     	;# 
  1046  0FE6                     	;# 
  1047  0FE7                     	;# 
  1048  0FE8                     	;# 
  1049  0FE9                     	;# 
  1050  0FEA                     	;# 
  1051  0FEB                     	;# 
  1052  0FED                     	;# 
  1053  0FEE                     	;# 
  1054  0FEF                     	;# 
  1055  0000                     	;# 
  1056  0001                     	;# 
  1057  0002                     	;# 
  1058  0003                     	;# 
  1059  0004                     	;# 
  1060  0005                     	;# 
  1061  0006                     	;# 
  1062  0007                     	;# 
  1063  0008                     	;# 
  1064  0009                     	;# 
  1065  000A                     	;# 
  1066  000B                     	;# 
  1067  000C                     	;# 
  1068  000D                     	;# 
  1069  000E                     	;# 
  1070  0010                     	;# 
  1071  0011                     	;# 
  1072  0012                     	;# 
  1073  0013                     	;# 
  1074  0014                     	;# 
  1075  0015                     	;# 
  1076  0016                     	;# 
  1077  0017                     	;# 
  1078  0018                     	;# 
  1079  0019                     	;# 
  1080  0019                     	;# 
  1081  001A                     	;# 
  1082  001B                     	;# 
  1083  001C                     	;# 
  1084  001D                     	;# 
  1085  001E                     	;# 
  1086  001F                     	;# 
  1087  008C                     	;# 
  1088  008D                     	;# 
  1089  008E                     	;# 
  1090  0090                     	;# 
  1091  0091                     	;# 
  1092  0092                     	;# 
  1093  0093                     	;# 
  1094  0094                     	;# 
  1095  0097                     	;# 
  1096  009B                     	;# 
  1097  009B                     	;# 
  1098  009C                     	;# 
  1099  009D                     	;# 
  1100  009E                     	;# 
  1101  009F                     	;# 
  1102  010C                     	;# 
  1103  010D                     	;# 
  1104  010E                     	;# 
  1105  0111                     	;# 
  1106  0112                     	;# 
  1107  0113                     	;# 
  1108  0114                     	;# 
  1109  0115                     	;# 
  1110  0116                     	;# 
  1111  0117                     	;# 
  1112  0118                     	;# 
  1113  0119                     	;# 
  1114  018C                     	;# 
  1115  018D                     	;# 
  1116  018E                     	;# 
  1117  0197                     	;# 
  1118  0199                     	;# 
  1119  0199                     	;# 
  1120  0199                     	;# 
  1121  019A                     	;# 
  1122  019A                     	;# 
  1123  019A                     	;# 
  1124  019B                     	;# 
  1125  019B                     	;# 
  1126  019B                     	;# 
  1127  019B                     	;# 
  1128  019B                     	;# 
  1129  019C                     	;# 
  1130  019C                     	;# 
  1131  019C                     	;# 
  1132  019D                     	;# 
  1133  019D                     	;# 
  1134  019D                     	;# 
  1135  019E                     	;# 
  1136  019E                     	;# 
  1137  019E                     	;# 
  1138  019F                     	;# 
  1139  019F                     	;# 
  1140  019F                     	;# 
  1141  019F                     	;# 
  1142  019F                     	;# 
  1143  020C                     	;# 
  1144  020D                     	;# 
  1145  020E                     	;# 
  1146  0211                     	;# 
  1147  0211                     	;# 
  1148  0212                     	;# 
  1149  0212                     	;# 
  1150  0213                     	;# 
  1151  0213                     	;# 
  1152  0214                     	;# 
  1153  0214                     	;# 
  1154  0215                     	;# 
  1155  0215                     	;# 
  1156  0215                     	;# 
  1157  0215                     	;# 
  1158  0216                     	;# 
  1159  0216                     	;# 
  1160  0217                     	;# 
  1161  0217                     	;# 
  1162  028C                     	;# 
  1163  028D                     	;# 
  1164  028E                     	;# 
  1165  0291                     	;# 
  1166  0291                     	;# 
  1167  0292                     	;# 
  1168  0293                     	;# 
  1169  0294                     	;# 
  1170  0295                     	;# 
  1171  0295                     	;# 
  1172  0296                     	;# 
  1173  0297                     	;# 
  1174  0298                     	;# 
  1175  029F                     	;# 
  1176  030C                     	;# 
  1177  030D                     	;# 
  1178  030E                     	;# 
  1179  0311                     	;# 
  1180  0311                     	;# 
  1181  0312                     	;# 
  1182  0313                     	;# 
  1183  0314                     	;# 
  1184  0315                     	;# 
  1185  0315                     	;# 
  1186  0316                     	;# 
  1187  0317                     	;# 
  1188  0318                     	;# 
  1189  038C                     	;# 
  1190  038D                     	;# 
  1191  038E                     	;# 
  1192  0391                     	;# 
  1193  0392                     	;# 
  1194  0393                     	;# 
  1195  0394                     	;# 
  1196  0395                     	;# 
  1197  0396                     	;# 
  1198  0397                     	;# 
  1199  0398                     	;# 
  1200  0399                     	;# 
  1201  039A                     	;# 
  1202  039C                     	;# 
  1203  039D                     	;# 
  1204  039E                     	;# 
  1205  039F                     	;# 
  1206  040C                     	;# 
  1207  040D                     	;# 
  1208  040E                     	;# 
  1209  0411                     	;# 
  1210  0411                     	;# 
  1211  0412                     	;# 
  1212  0413                     	;# 
  1213  0414                     	;# 
  1214  0415                     	;# 
  1215  0416                     	;# 
  1216  0417                     	;# 
  1217  0418                     	;# 
  1218  0418                     	;# 
  1219  0419                     	;# 
  1220  041A                     	;# 
  1221  041B                     	;# 
  1222  041C                     	;# 
  1223  041D                     	;# 
  1224  041E                     	;# 
  1225  041F                     	;# 
  1226  048C                     	;# 
  1227  048D                     	;# 
  1228  048E                     	;# 
  1229  0498                     	;# 
  1230  0498                     	;# 
  1231  0499                     	;# 
  1232  049A                     	;# 
  1233  049B                     	;# 
  1234  049B                     	;# 
  1235  049C                     	;# 
  1236  049D                     	;# 
  1237  049E                     	;# 
  1238  049F                     	;# 
  1239  0617                     	;# 
  1240  0618                     	;# 
  1241  0619                     	;# 
  1242  0619                     	;# 
  1243  061A                     	;# 
  1244  061B                     	;# 
  1245  061C                     	;# 
  1246  061C                     	;# 
  1247  061F                     	;# 
  1248  0691                     	;# 
  1249  0692                     	;# 
  1250  0693                     	;# 
  1251  0694                     	;# 
  1252  0695                     	;# 
  1253  0696                     	;# 
  1254  0697                     	;# 
  1255  0698                     	;# 
  1256  0699                     	;# 
  1257  0711                     	;# 
  1258  0712                     	;# 
  1259  0713                     	;# 
  1260  0714                     	;# 
  1261  0715                     	;# 
  1262  0716                     	;# 
  1263  0717                     	;# 
  1264  0718                     	;# 
  1265  0719                     	;# 
  1266  0891                     	;# 
  1267  0891                     	;# 
  1268  0892                     	;# 
  1269  0893                     	;# 
  1270  0893                     	;# 
  1271  0894                     	;# 
  1272  0895                     	;# 
  1273  0896                     	;# 
  1274  089B                     	;# 
  1275  0911                     	;# 
  1276  0912                     	;# 
  1277  0913                     	;# 
  1278  0914                     	;# 
  1279  0915                     	;# 
  1280  0916                     	;# 
  1281  0918                     	;# 
  1282  0919                     	;# 
  1283  091A                     	;# 
  1284  091B                     	;# 
  1285  091C                     	;# 
  1286  091D                     	;# 
  1287  091E                     	;# 
  1288  091F                     	;# 
  1289  0E0F                     	;# 
  1290  0E10                     	;# 
  1291  0E11                     	;# 
  1292  0E12                     	;# 
  1293  0E13                     	;# 
  1294  0E14                     	;# 
  1295  0E15                     	;# 
  1296  0E16                     	;# 
  1297  0E17                     	;# 
  1298  0E18                     	;# 
  1299  0E19                     	;# 
  1300  0E1A                     	;# 
  1301  0E1B                     	;# 
  1302  0E1C                     	;# 
  1303  0E20                     	;# 
  1304  0E21                     	;# 
  1305  0E22                     	;# 
  1306  0E24                     	;# 
  1307  0E25                     	;# 
  1308  0E28                     	;# 
  1309  0E29                     	;# 
  1310  0E2A                     	;# 
  1311  0E2B                     	;# 
  1312  0E2C                     	;# 
  1313  0E2D                     	;# 
  1314  0E2E                     	;# 
  1315  0E2F                     	;# 
  1316  0E90                     	;# 
  1317  0E91                     	;# 
  1318  0E92                     	;# 
  1319  0E94                     	;# 
  1320  0E95                     	;# 
  1321  0E9C                     	;# 
  1322  0E9D                     	;# 
  1323  0E9E                     	;# 
  1324  0E9F                     	;# 
  1325  0EA0                     	;# 
  1326  0EA1                     	;# 
  1327  0EA2                     	;# 
  1328  0EA3                     	;# 
  1329  0EA4                     	;# 
  1330  0EA5                     	;# 
  1331  0EA6                     	;# 
  1332  0EA7                     	;# 
  1333  0F0F                     	;# 
  1334  0F10                     	;# 
  1335  0F11                     	;# 
  1336  0F12                     	;# 
  1337  0F13                     	;# 
  1338  0F14                     	;# 
  1339  0F15                     	;# 
  1340  0F16                     	;# 
  1341  0F17                     	;# 
  1342  0F18                     	;# 
  1343  0F19                     	;# 
  1344  0F1A                     	;# 
  1345  0F1B                     	;# 
  1346  0F1C                     	;# 
  1347  0F1D                     	;# 
  1348  0F1E                     	;# 
  1349  0F1F                     	;# 
  1350  0F20                     	;# 
  1351  0F21                     	;# 
  1352  0F22                     	;# 
  1353  0F23                     	;# 
  1354  0F24                     	;# 
  1355  0F25                     	;# 
  1356  0F26                     	;# 
  1357  0F27                     	;# 
  1358  0F28                     	;# 
  1359  0F29                     	;# 
  1360  0F2A                     	;# 
  1361  0F2B                     	;# 
  1362  0F2C                     	;# 
  1363  0F2D                     	;# 
  1364  0F2E                     	;# 
  1365  0F2F                     	;# 
  1366  0F30                     	;# 
  1367  0F31                     	;# 
  1368  0F32                     	;# 
  1369  0F33                     	;# 
  1370  0F34                     	;# 
  1371  0F35                     	;# 
  1372  0F36                     	;# 
  1373  0F37                     	;# 
  1374  0FE4                     	;# 
  1375  0FE5                     	;# 
  1376  0FE6                     	;# 
  1377  0FE7                     	;# 
  1378  0FE8                     	;# 
  1379  0FE9                     	;# 
  1380  0FEA                     	;# 
  1381  0FEB                     	;# 
  1382  0FED                     	;# 
  1383  0FEE                     	;# 
  1384  0FEF                     	;# 
  1385  0000                     	;# 
  1386  0001                     	;# 
  1387  0002                     	;# 
  1388  0003                     	;# 
  1389  0004                     	;# 
  1390  0005                     	;# 
  1391  0006                     	;# 
  1392  0007                     	;# 
  1393  0008                     	;# 
  1394  0009                     	;# 
  1395  000A                     	;# 
  1396  000B                     	;# 
  1397  000C                     	;# 
  1398  000D                     	;# 
  1399  000E                     	;# 
  1400  0010                     	;# 
  1401  0011                     	;# 
  1402  0012                     	;# 
  1403  0013                     	;# 
  1404  0014                     	;# 
  1405  0015                     	;# 
  1406  0016                     	;# 
  1407  0017                     	;# 
  1408  0018                     	;# 
  1409  0019                     	;# 
  1410  0019                     	;# 
  1411  001A                     	;# 
  1412  001B                     	;# 
  1413  001C                     	;# 
  1414  001D                     	;# 
  1415  001E                     	;# 
  1416  001F                     	;# 
  1417  008C                     	;# 
  1418  008D                     	;# 
  1419  008E                     	;# 
  1420  0090                     	;# 
  1421  0091                     	;# 
  1422  0092                     	;# 
  1423  0093                     	;# 
  1424  0094                     	;# 
  1425  0097                     	;# 
  1426  009B                     	;# 
  1427  009B                     	;# 
  1428  009C                     	;# 
  1429  009D                     	;# 
  1430  009E                     	;# 
  1431  009F                     	;# 
  1432  010C                     	;# 
  1433  010D                     	;# 
  1434  010E                     	;# 
  1435  0111                     	;# 
  1436  0112                     	;# 
  1437  0113                     	;# 
  1438  0114                     	;# 
  1439  0115                     	;# 
  1440  0116                     	;# 
  1441  0117                     	;# 
  1442  0118                     	;# 
  1443  0119                     	;# 
  1444  018C                     	;# 
  1445  018D                     	;# 
  1446  018E                     	;# 
  1447  0197                     	;# 
  1448  0199                     	;# 
  1449  0199                     	;# 
  1450  0199                     	;# 
  1451  019A                     	;# 
  1452  019A                     	;# 
  1453  019A                     	;# 
  1454  019B                     	;# 
  1455  019B                     	;# 
  1456  019B                     	;# 
  1457  019B                     	;# 
  1458  019B                     	;# 
  1459  019C                     	;# 
  1460  019C                     	;# 
  1461  019C                     	;# 
  1462  019D                     	;# 
  1463  019D                     	;# 
  1464  019D                     	;# 
  1465  019E                     	;# 
  1466  019E                     	;# 
  1467  019E                     	;# 
  1468  019F                     	;# 
  1469  019F                     	;# 
  1470  019F                     	;# 
  1471  019F                     	;# 
  1472  019F                     	;# 
  1473  020C                     	;# 
  1474  020D                     	;# 
  1475  020E                     	;# 
  1476  0211                     	;# 
  1477  0211                     	;# 
  1478  0212                     	;# 
  1479  0212                     	;# 
  1480  0213                     	;# 
  1481  0213                     	;# 
  1482  0214                     	;# 
  1483  0214                     	;# 
  1484  0215                     	;# 
  1485  0215                     	;# 
  1486  0215                     	;# 
  1487  0215                     	;# 
  1488  0216                     	;# 
  1489  0216                     	;# 
  1490  0217                     	;# 
  1491  0217                     	;# 
  1492  028C                     	;# 
  1493  028D                     	;# 
  1494  028E                     	;# 
  1495  0291                     	;# 
  1496  0291                     	;# 
  1497  0292                     	;# 
  1498  0293                     	;# 
  1499  0294                     	;# 
  1500  0295                     	;# 
  1501  0295                     	;# 
  1502  0296                     	;# 
  1503  0297                     	;# 
  1504  0298                     	;# 
  1505  029F                     	;# 
  1506  030C                     	;# 
  1507  030D                     	;# 
  1508  030E                     	;# 
  1509  0311                     	;# 
  1510  0311                     	;# 
  1511  0312                     	;# 
  1512  0313                     	;# 
  1513  0314                     	;# 
  1514  0315                     	;# 
  1515  0315                     	;# 
  1516  0316                     	;# 
  1517  0317                     	;# 
  1518  0318                     	;# 
  1519  038C                     	;# 
  1520  038D                     	;# 
  1521  038E                     	;# 
  1522  0391                     	;# 
  1523  0392                     	;# 
  1524  0393                     	;# 
  1525  0394                     	;# 
  1526  0395                     	;# 
  1527  0396                     	;# 
  1528  0397                     	;# 
  1529  0398                     	;# 
  1530  0399                     	;# 
  1531  039A                     	;# 
  1532  039C                     	;# 
  1533  039D                     	;# 
  1534  039E                     	;# 
  1535  039F                     	;# 
  1536  040C                     	;# 
  1537  040D                     	;# 
  1538  040E                     	;# 
  1539  0411                     	;# 
  1540  0411                     	;# 
  1541  0412                     	;# 
  1542  0413                     	;# 
  1543  0414                     	;# 
  1544  0415                     	;# 
  1545  0416                     	;# 
  1546  0417                     	;# 
  1547  0418                     	;# 
  1548  0418                     	;# 
  1549  0419                     	;# 
  1550  041A                     	;# 
  1551  041B                     	;# 
  1552  041C                     	;# 
  1553  041D                     	;# 
  1554  041E                     	;# 
  1555  041F                     	;# 
  1556  048C                     	;# 
  1557  048D                     	;# 
  1558  048E                     	;# 
  1559  0498                     	;# 
  1560  0498                     	;# 
  1561  0499                     	;# 
  1562  049A                     	;# 
  1563  049B                     	;# 
  1564  049B                     	;# 
  1565  049C                     	;# 
  1566  049D                     	;# 
  1567  049E                     	;# 
  1568  049F                     	;# 
  1569  0617                     	;# 
  1570  0618                     	;# 
  1571  0619                     	;# 
  1572  0619                     	;# 
  1573  061A                     	;# 
  1574  061B                     	;# 
  1575  061C                     	;# 
  1576  061C                     	;# 
  1577  061F                     	;# 
  1578  0691                     	;# 
  1579  0692                     	;# 
  1580  0693                     	;# 
  1581  0694                     	;# 
  1582  0695                     	;# 
  1583  0696                     	;# 
  1584  0697                     	;# 
  1585  0698                     	;# 
  1586  0699                     	;# 
  1587  0711                     	;# 
  1588  0712                     	;# 
  1589  0713                     	;# 
  1590  0714                     	;# 
  1591  0715                     	;# 
  1592  0716                     	;# 
  1593  0717                     	;# 
  1594  0718                     	;# 
  1595  0719                     	;# 
  1596  0891                     	;# 
  1597  0891                     	;# 
  1598  0892                     	;# 
  1599  0893                     	;# 
  1600  0893                     	;# 
  1601  0894                     	;# 
  1602  0895                     	;# 
  1603  0896                     	;# 
  1604  089B                     	;# 
  1605  0911                     	;# 
  1606  0912                     	;# 
  1607  0913                     	;# 
  1608  0914                     	;# 
  1609  0915                     	;# 
  1610  0916                     	;# 
  1611  0918                     	;# 
  1612  0919                     	;# 
  1613  091A                     	;# 
  1614  091B                     	;# 
  1615  091C                     	;# 
  1616  091D                     	;# 
  1617  091E                     	;# 
  1618  091F                     	;# 
  1619  0E0F                     	;# 
  1620  0E10                     	;# 
  1621  0E11                     	;# 
  1622  0E12                     	;# 
  1623  0E13                     	;# 
  1624  0E14                     	;# 
  1625  0E15                     	;# 
  1626  0E16                     	;# 
  1627  0E17                     	;# 
  1628  0E18                     	;# 
  1629  0E19                     	;# 
  1630  0E1A                     	;# 
  1631  0E1B                     	;# 
  1632  0E1C                     	;# 
  1633  0E20                     	;# 
  1634  0E21                     	;# 
  1635  0E22                     	;# 
  1636  0E24                     	;# 
  1637  0E25                     	;# 
  1638  0E28                     	;# 
  1639  0E29                     	;# 
  1640  0E2A                     	;# 
  1641  0E2B                     	;# 
  1642  0E2C                     	;# 
  1643  0E2D                     	;# 
  1644  0E2E                     	;# 
  1645  0E2F                     	;# 
  1646  0E90                     	;# 
  1647  0E91                     	;# 
  1648  0E92                     	;# 
  1649  0E94                     	;# 
  1650  0E95                     	;# 
  1651  0E9C                     	;# 
  1652  0E9D                     	;# 
  1653  0E9E                     	;# 
  1654  0E9F                     	;# 
  1655  0EA0                     	;# 
  1656  0EA1                     	;# 
  1657  0EA2                     	;# 
  1658  0EA3                     	;# 
  1659  0EA4                     	;# 
  1660  0EA5                     	;# 
  1661  0EA6                     	;# 
  1662  0EA7                     	;# 
  1663  0F0F                     	;# 
  1664  0F10                     	;# 
  1665  0F11                     	;# 
  1666  0F12                     	;# 
  1667  0F13                     	;# 
  1668  0F14                     	;# 
  1669  0F15                     	;# 
  1670  0F16                     	;# 
  1671  0F17                     	;# 
  1672  0F18                     	;# 
  1673  0F19                     	;# 
  1674  0F1A                     	;# 
  1675  0F1B                     	;# 
  1676  0F1C                     	;# 
  1677  0F1D                     	;# 
  1678  0F1E                     	;# 
  1679  0F1F                     	;# 
  1680  0F20                     	;# 
  1681  0F21                     	;# 
  1682  0F22                     	;# 
  1683  0F23                     	;# 
  1684  0F24                     	;# 
  1685  0F25                     	;# 
  1686  0F26                     	;# 
  1687  0F27                     	;# 
  1688  0F28                     	;# 
  1689  0F29                     	;# 
  1690  0F2A                     	;# 
  1691  0F2B                     	;# 
  1692  0F2C                     	;# 
  1693  0F2D                     	;# 
  1694  0F2E                     	;# 
  1695  0F2F                     	;# 
  1696  0F30                     	;# 
  1697  0F31                     	;# 
  1698  0F32                     	;# 
  1699  0F33                     	;# 
  1700  0F34                     	;# 
  1701  0F35                     	;# 
  1702  0F36                     	;# 
  1703  0F37                     	;# 
  1704  0FE4                     	;# 
  1705  0FE5                     	;# 
  1706  0FE6                     	;# 
  1707  0FE7                     	;# 
  1708  0FE8                     	;# 
  1709  0FE9                     	;# 
  1710  0FEA                     	;# 
  1711  0FEB                     	;# 
  1712  0FED                     	;# 
  1713  0FEE                     	;# 
  1714  0FEF                     	;# 
  1715  0000                     	;# 
  1716  0001                     	;# 
  1717  0002                     	;# 
  1718  0003                     	;# 
  1719  0004                     	;# 
  1720  0005                     	;# 
  1721  0006                     	;# 
  1722  0007                     	;# 
  1723  0008                     	;# 
  1724  0009                     	;# 
  1725  000A                     	;# 
  1726  000B                     	;# 
  1727  000C                     	;# 
  1728  000D                     	;# 
  1729  000E                     	;# 
  1730  0010                     	;# 
  1731  0011                     	;# 
  1732  0012                     	;# 
  1733  0013                     	;# 
  1734  0014                     	;# 
  1735  0015                     	;# 
  1736  0016                     	;# 
  1737  0017                     	;# 
  1738  0018                     	;# 
  1739  0019                     	;# 
  1740  0019                     	;# 
  1741  001A                     	;# 
  1742  001B                     	;# 
  1743  001C                     	;# 
  1744  001D                     	;# 
  1745  001E                     	;# 
  1746  001F                     	;# 
  1747  008C                     	;# 
  1748  008D                     	;# 
  1749  008E                     	;# 
  1750  0090                     	;# 
  1751  0091                     	;# 
  1752  0092                     	;# 
  1753  0093                     	;# 
  1754  0094                     	;# 
  1755  0097                     	;# 
  1756  009B                     	;# 
  1757  009B                     	;# 
  1758  009C                     	;# 
  1759  009D                     	;# 
  1760  009E                     	;# 
  1761  009F                     	;# 
  1762  010C                     	;# 
  1763  010D                     	;# 
  1764  010E                     	;# 
  1765  0111                     	;# 
  1766  0112                     	;# 
  1767  0113                     	;# 
  1768  0114                     	;# 
  1769  0115                     	;# 
  1770  0116                     	;# 
  1771  0117                     	;# 
  1772  0118                     	;# 
  1773  0119                     	;# 
  1774  018C                     	;# 
  1775  018D                     	;# 
  1776  018E                     	;# 
  1777  0197                     	;# 
  1778  0199                     	;# 
  1779  0199                     	;# 
  1780  0199                     	;# 
  1781  019A                     	;# 
  1782  019A                     	;# 
  1783  019A                     	;# 
  1784  019B                     	;# 
  1785  019B                     	;# 
  1786  019B                     	;# 
  1787  019B                     	;# 
  1788  019B                     	;# 
  1789  019C                     	;# 
  1790  019C                     	;# 
  1791  019C                     	;# 
  1792  019D                     	;# 
  1793  019D                     	;# 
  1794  019D                     	;# 
  1795  019E                     	;# 
  1796  019E                     	;# 
  1797  019E                     	;# 
  1798  019F                     	;# 
  1799  019F                     	;# 
  1800  019F                     	;# 
  1801  019F                     	;# 
  1802  019F                     	;# 
  1803  020C                     	;# 
  1804  020D                     	;# 
  1805  020E                     	;# 
  1806  0211                     	;# 
  1807  0211                     	;# 
  1808  0212                     	;# 
  1809  0212                     	;# 
  1810  0213                     	;# 
  1811  0213                     	;# 
  1812  0214                     	;# 
  1813  0214                     	;# 
  1814  0215                     	;# 
  1815  0215                     	;# 
  1816  0215                     	;# 
  1817  0215                     	;# 
  1818  0216                     	;# 
  1819  0216                     	;# 
  1820  0217                     	;# 
  1821  0217                     	;# 
  1822  028C                     	;# 
  1823  028D                     	;# 
  1824  028E                     	;# 
  1825  0291                     	;# 
  1826  0291                     	;# 
  1827  0292                     	;# 
  1828  0293                     	;# 
  1829  0294                     	;# 
  1830  0295                     	;# 
  1831  0295                     	;# 
  1832  0296                     	;# 
  1833  0297                     	;# 
  1834  0298                     	;# 
  1835  029F                     	;# 
  1836  030C                     	;# 
  1837  030D                     	;# 
  1838  030E                     	;# 
  1839  0311                     	;# 
  1840  0311                     	;# 
  1841  0312                     	;# 
  1842  0313                     	;# 
  1843  0314                     	;# 
  1844  0315                     	;# 
  1845  0315                     	;# 
  1846  0316                     	;# 
  1847  0317                     	;# 
  1848  0318                     	;# 
  1849  038C                     	;# 
  1850  038D                     	;# 
  1851  038E                     	;# 
  1852  0391                     	;# 
  1853  0392                     	;# 
  1854  0393                     	;# 
  1855  0394                     	;# 
  1856  0395                     	;# 
  1857  0396                     	;# 
  1858  0397                     	;# 
  1859  0398                     	;# 
  1860  0399                     	;# 
  1861  039A                     	;# 
  1862  039C                     	;# 
  1863  039D                     	;# 
  1864  039E                     	;# 
  1865  039F                     	;# 
  1866  040C                     	;# 
  1867  040D                     	;# 
  1868  040E                     	;# 
  1869  0411                     	;# 
  1870  0411                     	;# 
  1871  0412                     	;# 
  1872  0413                     	;# 
  1873  0414                     	;# 
  1874  0415                     	;# 
  1875  0416                     	;# 
  1876  0417                     	;# 
  1877  0418                     	;# 
  1878  0418                     	;# 
  1879  0419                     	;# 
  1880  041A                     	;# 
  1881  041B                     	;# 
  1882  041C                     	;# 
  1883  041D                     	;# 
  1884  041E                     	;# 
  1885  041F                     	;# 
  1886  048C                     	;# 
  1887  048D                     	;# 
  1888  048E                     	;# 
  1889  0498                     	;# 
  1890  0498                     	;# 
  1891  0499                     	;# 
  1892  049A                     	;# 
  1893  049B                     	;# 
  1894  049B                     	;# 
  1895  049C                     	;# 
  1896  049D                     	;# 
  1897  049E                     	;# 
  1898  049F                     	;# 
  1899  0617                     	;# 
  1900  0618                     	;# 
  1901  0619                     	;# 
  1902  0619                     	;# 
  1903  061A                     	;# 
  1904  061B                     	;# 
  1905  061C                     	;# 
  1906  061C                     	;# 
  1907  061F                     	;# 
  1908  0691                     	;# 
  1909  0692                     	;# 
  1910  0693                     	;# 
  1911  0694                     	;# 
  1912  0695                     	;# 
  1913  0696                     	;# 
  1914  0697                     	;# 
  1915  0698                     	;# 
  1916  0699                     	;# 
  1917  0711                     	;# 
  1918  0712                     	;# 
  1919  0713                     	;# 
  1920  0714                     	;# 
  1921  0715                     	;# 
  1922  0716                     	;# 
  1923  0717                     	;# 
  1924  0718                     	;# 
  1925  0719                     	;# 
  1926  0891                     	;# 
  1927  0891                     	;# 
  1928  0892                     	;# 
  1929  0893                     	;# 
  1930  0893                     	;# 
  1931  0894                     	;# 
  1932  0895                     	;# 
  1933  0896                     	;# 
  1934  089B                     	;# 
  1935  0911                     	;# 
  1936  0912                     	;# 
  1937  0913                     	;# 
  1938  0914                     	;# 
  1939  0915                     	;# 
  1940  0916                     	;# 
  1941  0918                     	;# 
  1942  0919                     	;# 
  1943  091A                     	;# 
  1944  091B                     	;# 
  1945  091C                     	;# 
  1946  091D                     	;# 
  1947  091E                     	;# 
  1948  091F                     	;# 
  1949  0E0F                     	;# 
  1950  0E10                     	;# 
  1951  0E11                     	;# 
  1952  0E12                     	;# 
  1953  0E13                     	;# 
  1954  0E14                     	;# 
  1955  0E15                     	;# 
  1956  0E16                     	;# 
  1957  0E17                     	;# 
  1958  0E18                     	;# 
  1959  0E19                     	;# 
  1960  0E1A                     	;# 
  1961  0E1B                     	;# 
  1962  0E1C                     	;# 
  1963  0E20                     	;# 
  1964  0E21                     	;# 
  1965  0E22                     	;# 
  1966  0E24                     	;# 
  1967  0E25                     	;# 
  1968  0E28                     	;# 
  1969  0E29                     	;# 
  1970  0E2A                     	;# 
  1971  0E2B                     	;# 
  1972  0E2C                     	;# 
  1973  0E2D                     	;# 
  1974  0E2E                     	;# 
  1975  0E2F                     	;# 
  1976  0E90                     	;# 
  1977  0E91                     	;# 
  1978  0E92                     	;# 
  1979  0E94                     	;# 
  1980  0E95                     	;# 
  1981  0E9C                     	;# 
  1982  0E9D                     	;# 
  1983  0E9E                     	;# 
  1984  0E9F                     	;# 
  1985  0EA0                     	;# 
  1986  0EA1                     	;# 
  1987  0EA2                     	;# 
  1988  0EA3                     	;# 
  1989  0EA4                     	;# 
  1990  0EA5                     	;# 
  1991  0EA6                     	;# 
  1992  0EA7                     	;# 
  1993  0F0F                     	;# 
  1994  0F10                     	;# 
  1995  0F11                     	;# 
  1996  0F12                     	;# 
  1997  0F13                     	;# 
  1998  0F14                     	;# 
  1999  0F15                     	;# 
  2000  0F16                     	;# 
  2001  0F17                     	;# 
  2002  0F18                     	;# 
  2003  0F19                     	;# 
  2004  0F1A                     	;# 
  2005  0F1B                     	;# 
  2006  0F1C                     	;# 
  2007  0F1D                     	;# 
  2008  0F1E                     	;# 
  2009  0F1F                     	;# 
  2010  0F20                     	;# 
  2011  0F21                     	;# 
  2012  0F22                     	;# 
  2013  0F23                     	;# 
  2014  0F24                     	;# 
  2015  0F25                     	;# 
  2016  0F26                     	;# 
  2017  0F27                     	;# 
  2018  0F28                     	;# 
  2019  0F29                     	;# 
  2020  0F2A                     	;# 
  2021  0F2B                     	;# 
  2022  0F2C                     	;# 
  2023  0F2D                     	;# 
  2024  0F2E                     	;# 
  2025  0F2F                     	;# 
  2026  0F30                     	;# 
  2027  0F31                     	;# 
  2028  0F32                     	;# 
  2029  0F33                     	;# 
  2030  0F34                     	;# 
  2031  0F35                     	;# 
  2032  0F36                     	;# 
  2033  0F37                     	;# 
  2034  0FE4                     	;# 
  2035  0FE5                     	;# 
  2036  0FE6                     	;# 
  2037  0FE7                     	;# 
  2038  0FE8                     	;# 
  2039  0FE9                     	;# 
  2040  0FEA                     	;# 
  2041  0FEB                     	;# 
  2042  0FED                     	;# 
  2043  0FEE                     	;# 
  2044  0FEF                     	;# 
  2045  0000                     	;# 
  2046  0001                     	;# 
  2047  0002                     	;# 
  2048  0003                     	;# 
  2049  0004                     	;# 
  2050  0005                     	;# 
  2051  0006                     	;# 
  2052  0007                     	;# 
  2053  0008                     	;# 
  2054  0009                     	;# 
  2055  000A                     	;# 
  2056  000B                     	;# 
  2057  000C                     	;# 
  2058  000D                     	;# 
  2059  000E                     	;# 
  2060  0010                     	;# 
  2061  0011                     	;# 
  2062  0012                     	;# 
  2063  0013                     	;# 
  2064  0014                     	;# 
  2065  0015                     	;# 
  2066  0016                     	;# 
  2067  0017                     	;# 
  2068  0018                     	;# 
  2069  0019                     	;# 
  2070  0019                     	;# 
  2071  001A                     	;# 
  2072  001B                     	;# 
  2073  001C                     	;# 
  2074  001D                     	;# 
  2075  001E                     	;# 
  2076  001F                     	;# 
  2077  008C                     	;# 
  2078  008D                     	;# 
  2079  008E                     	;# 
  2080  0090                     	;# 
  2081  0091                     	;# 
  2082  0092                     	;# 
  2083  0093                     	;# 
  2084  0094                     	;# 
  2085  0097                     	;# 
  2086  009B                     	;# 
  2087  009B                     	;# 
  2088  009C                     	;# 
  2089  009D                     	;# 
  2090  009E                     	;# 
  2091  009F                     	;# 
  2092  010C                     	;# 
  2093  010D                     	;# 
  2094  010E                     	;# 
  2095  0111                     	;# 
  2096  0112                     	;# 
  2097  0113                     	;# 
  2098  0114                     	;# 
  2099  0115                     	;# 
  2100  0116                     	;# 
  2101  0117                     	;# 
  2102  0118                     	;# 
  2103  0119                     	;# 
  2104  018C                     	;# 
  2105  018D                     	;# 
  2106  018E                     	;# 
  2107  0197                     	;# 
  2108  0199                     	;# 
  2109  0199                     	;# 
  2110  0199                     	;# 
  2111  019A                     	;# 
  2112  019A                     	;# 
  2113  019A                     	;# 
  2114  019B                     	;# 
  2115  019B                     	;# 
  2116  019B                     	;# 
  2117  019B                     	;# 
  2118  019B                     	;# 
  2119  019C                     	;# 
  2120  019C                     	;# 
  2121  019C                     	;# 
  2122  019D                     	;# 
  2123  019D                     	;# 
  2124  019D                     	;# 
  2125  019E                     	;# 
  2126  019E                     	;# 
  2127  019E                     	;# 
  2128  019F                     	;# 
  2129  019F                     	;# 
  2130  019F                     	;# 
  2131  019F                     	;# 
  2132  019F                     	;# 
  2133  020C                     	;# 
  2134  020D                     	;# 
  2135  020E                     	;# 
  2136  0211                     	;# 
  2137  0211                     	;# 
  2138  0212                     	;# 
  2139  0212                     	;# 
  2140  0213                     	;# 
  2141  0213                     	;# 
  2142  0214                     	;# 
  2143  0214                     	;# 
  2144  0215                     	;# 
  2145  0215                     	;# 
  2146  0215                     	;# 
  2147  0215                     	;# 
  2148  0216                     	;# 
  2149  0216                     	;# 
  2150  0217                     	;# 
  2151  0217                     	;# 
  2152  028C                     	;# 
  2153  028D                     	;# 
  2154  028E                     	;# 
  2155  0291                     	;# 
  2156  0291                     	;# 
  2157  0292                     	;# 
  2158  0293                     	;# 
  2159  0294                     	;# 
  2160  0295                     	;# 
  2161  0295                     	;# 
  2162  0296                     	;# 
  2163  0297                     	;# 
  2164  0298                     	;# 
  2165  029F                     	;# 
  2166  030C                     	;# 
  2167  030D                     	;# 
  2168  030E                     	;# 
  2169  0311                     	;# 
  2170  0311                     	;# 
  2171  0312                     	;# 
  2172  0313                     	;# 
  2173  0314                     	;# 
  2174  0315                     	;# 
  2175  0315                     	;# 
  2176  0316                     	;# 
  2177  0317                     	;# 
  2178  0318                     	;# 
  2179  038C                     	;# 
  2180  038D                     	;# 
  2181  038E                     	;# 
  2182  0391                     	;# 
  2183  0392                     	;# 
  2184  0393                     	;# 
  2185  0394                     	;# 
  2186  0395                     	;# 
  2187  0396                     	;# 
  2188  0397                     	;# 
  2189  0398                     	;# 
  2190  0399                     	;# 
  2191  039A                     	;# 
  2192  039C                     	;# 
  2193  039D                     	;# 
  2194  039E                     	;# 
  2195  039F                     	;# 
  2196  040C                     	;# 
  2197  040D                     	;# 
  2198  040E                     	;# 
  2199  0411                     	;# 
  2200  0411                     	;# 
  2201  0412                     	;# 
  2202  0413                     	;# 
  2203  0414                     	;# 
  2204  0415                     	;# 
  2205  0416                     	;# 
  2206  0417                     	;# 
  2207  0418                     	;# 
  2208  0418                     	;# 
  2209  0419                     	;# 
  2210  041A                     	;# 
  2211  041B                     	;# 
  2212  041C                     	;# 
  2213  041D                     	;# 
  2214  041E                     	;# 
  2215  041F                     	;# 
  2216  048C                     	;# 
  2217  048D                     	;# 
  2218  048E                     	;# 
  2219  0498                     	;# 
  2220  0498                     	;# 
  2221  0499                     	;# 
  2222  049A                     	;# 
  2223  049B                     	;# 
  2224  049B                     	;# 
  2225  049C                     	;# 
  2226  049D                     	;# 
  2227  049E                     	;# 
  2228  049F                     	;# 
  2229  0617                     	;# 
  2230  0618                     	;# 
  2231  0619                     	;# 
  2232  0619                     	;# 
  2233  061A                     	;# 
  2234  061B                     	;# 
  2235  061C                     	;# 
  2236  061C                     	;# 
  2237  061F                     	;# 
  2238  0691                     	;# 
  2239  0692                     	;# 
  2240  0693                     	;# 
  2241  0694                     	;# 
  2242  0695                     	;# 
  2243  0696                     	;# 
  2244  0697                     	;# 
  2245  0698                     	;# 
  2246  0699                     	;# 
  2247  0711                     	;# 
  2248  0712                     	;# 
  2249  0713                     	;# 
  2250  0714                     	;# 
  2251  0715                     	;# 
  2252  0716                     	;# 
  2253  0717                     	;# 
  2254  0718                     	;# 
  2255  0719                     	;# 
  2256  0891                     	;# 
  2257  0891                     	;# 
  2258  0892                     	;# 
  2259  0893                     	;# 
  2260  0893                     	;# 
  2261  0894                     	;# 
  2262  0895                     	;# 
  2263  0896                     	;# 
  2264  089B                     	;# 
  2265  0911                     	;# 
  2266  0912                     	;# 
  2267  0913                     	;# 
  2268  0914                     	;# 
  2269  0915                     	;# 
  2270  0916                     	;# 
  2271  0918                     	;# 
  2272  0919                     	;# 
  2273  091A                     	;# 
  2274  091B                     	;# 
  2275  091C                     	;# 
  2276  091D                     	;# 
  2277  091E                     	;# 
  2278  091F                     	;# 
  2279  0E0F                     	;# 
  2280  0E10                     	;# 
  2281  0E11                     	;# 
  2282  0E12                     	;# 
  2283  0E13                     	;# 
  2284  0E14                     	;# 
  2285  0E15                     	;# 
  2286  0E16                     	;# 
  2287  0E17                     	;# 
  2288  0E18                     	;# 
  2289  0E19                     	;# 
  2290  0E1A                     	;# 
  2291  0E1B                     	;# 
  2292  0E1C                     	;# 
  2293  0E20                     	;# 
  2294  0E21                     	;# 
  2295  0E22                     	;# 
  2296  0E24                     	;# 
  2297  0E25                     	;# 
  2298  0E28                     	;# 
  2299  0E29                     	;# 
  2300  0E2A                     	;# 
  2301  0E2B                     	;# 
  2302  0E2C                     	;# 
  2303  0E2D                     	;# 
  2304  0E2E                     	;# 
  2305  0E2F                     	;# 
  2306  0E90                     	;# 
  2307  0E91                     	;# 
  2308  0E92                     	;# 
  2309  0E94                     	;# 
  2310  0E95                     	;# 
  2311  0E9C                     	;# 
  2312  0E9D                     	;# 
  2313  0E9E                     	;# 
  2314  0E9F                     	;# 
  2315  0EA0                     	;# 
  2316  0EA1                     	;# 
  2317  0EA2                     	;# 
  2318  0EA3                     	;# 
  2319  0EA4                     	;# 
  2320  0EA5                     	;# 
  2321  0EA6                     	;# 
  2322  0EA7                     	;# 
  2323  0F0F                     	;# 
  2324  0F10                     	;# 
  2325  0F11                     	;# 
  2326  0F12                     	;# 
  2327  0F13                     	;# 
  2328  0F14                     	;# 
  2329  0F15                     	;# 
  2330  0F16                     	;# 
  2331  0F17                     	;# 
  2332  0F18                     	;# 
  2333  0F19                     	;# 
  2334  0F1A                     	;# 
  2335  0F1B                     	;# 
  2336  0F1C                     	;# 
  2337  0F1D                     	;# 
  2338  0F1E                     	;# 
  2339  0F1F                     	;# 
  2340  0F20                     	;# 
  2341  0F21                     	;# 
  2342  0F22                     	;# 
  2343  0F23                     	;# 
  2344  0F24                     	;# 
  2345  0F25                     	;# 
  2346  0F26                     	;# 
  2347  0F27                     	;# 
  2348  0F28                     	;# 
  2349  0F29                     	;# 
  2350  0F2A                     	;# 
  2351  0F2B                     	;# 
  2352  0F2C                     	;# 
  2353  0F2D                     	;# 
  2354  0F2E                     	;# 
  2355  0F2F                     	;# 
  2356  0F30                     	;# 
  2357  0F31                     	;# 
  2358  0F32                     	;# 
  2359  0F33                     	;# 
  2360  0F34                     	;# 
  2361  0F35                     	;# 
  2362  0F36                     	;# 
  2363  0F37                     	;# 
  2364  0FE4                     	;# 
  2365  0FE5                     	;# 
  2366  0FE6                     	;# 
  2367  0FE7                     	;# 
  2368  0FE8                     	;# 
  2369  0FE9                     	;# 
  2370  0FEA                     	;# 
  2371  0FEB                     	;# 
  2372  0FED                     	;# 
  2373  0FEE                     	;# 
  2374  0FEF                     	;# 
  2375  0000                     	;# 
  2376  0001                     	;# 
  2377  0002                     	;# 
  2378  0003                     	;# 
  2379  0004                     	;# 
  2380  0005                     	;# 
  2381  0006                     	;# 
  2382  0007                     	;# 
  2383  0008                     	;# 
  2384  0009                     	;# 
  2385  000A                     	;# 
  2386  000B                     	;# 
  2387  000C                     	;# 
  2388  000D                     	;# 
  2389  000E                     	;# 
  2390  0010                     	;# 
  2391  0011                     	;# 
  2392  0012                     	;# 
  2393  0013                     	;# 
  2394  0014                     	;# 
  2395  0015                     	;# 
  2396  0016                     	;# 
  2397  0017                     	;# 
  2398  0018                     	;# 
  2399  0019                     	;# 
  2400  0019                     	;# 
  2401  001A                     	;# 
  2402  001B                     	;# 
  2403  001C                     	;# 
  2404  001D                     	;# 
  2405  001E                     	;# 
  2406  001F                     	;# 
  2407  008C                     	;# 
  2408  008D                     	;# 
  2409  008E                     	;# 
  2410  0090                     	;# 
  2411  0091                     	;# 
  2412  0092                     	;# 
  2413  0093                     	;# 
  2414  0094                     	;# 
  2415  0097                     	;# 
  2416  009B                     	;# 
  2417  009B                     	;# 
  2418  009C                     	;# 
  2419  009D                     	;# 
  2420  009E                     	;# 
  2421  009F                     	;# 
  2422  010C                     	;# 
  2423  010D                     	;# 
  2424  010E                     	;# 
  2425  0111                     	;# 
  2426  0112                     	;# 
  2427  0113                     	;# 
  2428  0114                     	;# 
  2429  0115                     	;# 
  2430  0116                     	;# 
  2431  0117                     	;# 
  2432  0118                     	;# 
  2433  0119                     	;# 
  2434  018C                     	;# 
  2435  018D                     	;# 
  2436  018E                     	;# 
  2437  0197                     	;# 
  2438  0199                     	;# 
  2439  0199                     	;# 
  2440  0199                     	;# 
  2441  019A                     	;# 
  2442  019A                     	;# 
  2443  019A                     	;# 
  2444  019B                     	;# 
  2445  019B                     	;# 
  2446  019B                     	;# 
  2447  019B                     	;# 
  2448  019B                     	;# 
  2449  019C                     	;# 
  2450  019C                     	;# 
  2451  019C                     	;# 
  2452  019D                     	;# 
  2453  019D                     	;# 
  2454  019D                     	;# 
  2455  019E                     	;# 
  2456  019E                     	;# 
  2457  019E                     	;# 
  2458  019F                     	;# 
  2459  019F                     	;# 
  2460  019F                     	;# 
  2461  019F                     	;# 
  2462  019F                     	;# 
  2463  020C                     	;# 
  2464  020D                     	;# 
  2465  020E                     	;# 
  2466  0211                     	;# 
  2467  0211                     	;# 
  2468  0212                     	;# 
  2469  0212                     	;# 
  2470  0213                     	;# 
  2471  0213                     	;# 
  2472  0214                     	;# 
  2473  0214                     	;# 
  2474  0215                     	;# 
  2475  0215                     	;# 
  2476  0215                     	;# 
  2477  0215                     	;# 
  2478  0216                     	;# 
  2479  0216                     	;# 
  2480  0217                     	;# 
  2481  0217                     	;# 
  2482  028C                     	;# 
  2483  028D                     	;# 
  2484  028E                     	;# 
  2485  0291                     	;# 
  2486  0291                     	;# 
  2487  0292                     	;# 
  2488  0293                     	;# 
  2489  0294                     	;# 
  2490  0295                     	;# 
  2491  0295                     	;# 
  2492  0296                     	;# 
  2493  0297                     	;# 
  2494  0298                     	;# 
  2495  029F                     	;# 
  2496  030C                     	;# 
  2497  030D                     	;# 
  2498  030E                     	;# 
  2499  0311                     	;# 
  2500  0311                     	;# 
  2501  0312                     	;# 
  2502  0313                     	;# 
  2503  0314                     	;# 
  2504  0315                     	;# 
  2505  0315                     	;# 
  2506  0316                     	;# 
  2507  0317                     	;# 
  2508  0318                     	;# 
  2509  038C                     	;# 
  2510  038D                     	;# 
  2511  038E                     	;# 
  2512  0391                     	;# 
  2513  0392                     	;# 
  2514  0393                     	;# 
  2515  0394                     	;# 
  2516  0395                     	;# 
  2517  0396                     	;# 
  2518  0397                     	;# 
  2519  0398                     	;# 
  2520  0399                     	;# 
  2521  039A                     	;# 
  2522  039C                     	;# 
  2523  039D                     	;# 
  2524  039E                     	;# 
  2525  039F                     	;# 
  2526  040C                     	;# 
  2527  040D                     	;# 
  2528  040E                     	;# 
  2529  0411                     	;# 
  2530  0411                     	;# 
  2531  0412                     	;# 
  2532  0413                     	;# 
  2533  0414                     	;# 
  2534  0415                     	;# 
  2535  0416                     	;# 
  2536  0417                     	;# 
  2537  0418                     	;# 
  2538  0418                     	;# 
  2539  0419                     	;# 
  2540  041A                     	;# 
  2541  041B                     	;# 
  2542  041C                     	;# 
  2543  041D                     	;# 
  2544  041E                     	;# 
  2545  041F                     	;# 
  2546  048C                     	;# 
  2547  048D                     	;# 
  2548  048E                     	;# 
  2549  0498                     	;# 
  2550  0498                     	;# 
  2551  0499                     	;# 
  2552  049A                     	;# 
  2553  049B                     	;# 
  2554  049B                     	;# 
  2555  049C                     	;# 
  2556  049D                     	;# 
  2557  049E                     	;# 
  2558  049F                     	;# 
  2559  0617                     	;# 
  2560  0618                     	;# 
  2561  0619                     	;# 
  2562  0619                     	;# 
  2563  061A                     	;# 
  2564  061B                     	;# 
  2565  061C                     	;# 
  2566  061C                     	;# 
  2567  061F                     	;# 
  2568  0691                     	;# 
  2569  0692                     	;# 
  2570  0693                     	;# 
  2571  0694                     	;# 
  2572  0695                     	;# 
  2573  0696                     	;# 
  2574  0697                     	;# 
  2575  0698                     	;# 
  2576  0699                     	;# 
  2577  0711                     	;# 
  2578  0712                     	;# 
  2579  0713                     	;# 
  2580  0714                     	;# 
  2581  0715                     	;# 
  2582  0716                     	;# 
  2583  0717                     	;# 
  2584  0718                     	;# 
  2585  0719                     	;# 
  2586  0891                     	;# 
  2587  0891                     	;# 
  2588  0892                     	;# 
  2589  0893                     	;# 
  2590  0893                     	;# 
  2591  0894                     	;# 
  2592  0895                     	;# 
  2593  0896                     	;# 
  2594  089B                     	;# 
  2595  0911                     	;# 
  2596  0912                     	;# 
  2597  0913                     	;# 
  2598  0914                     	;# 
  2599  0915                     	;# 
  2600  0916                     	;# 
  2601  0918                     	;# 
  2602  0919                     	;# 
  2603  091A                     	;# 
  2604  091B                     	;# 
  2605  091C                     	;# 
  2606  091D                     	;# 
  2607  091E                     	;# 
  2608  091F                     	;# 
  2609  0E0F                     	;# 
  2610  0E10                     	;# 
  2611  0E11                     	;# 
  2612  0E12                     	;# 
  2613  0E13                     	;# 
  2614  0E14                     	;# 
  2615  0E15                     	;# 
  2616  0E16                     	;# 
  2617  0E17                     	;# 
  2618  0E18                     	;# 
  2619  0E19                     	;# 
  2620  0E1A                     	;# 
  2621  0E1B                     	;# 
  2622  0E1C                     	;# 
  2623  0E20                     	;# 
  2624  0E21                     	;# 
  2625  0E22                     	;# 
  2626  0E24                     	;# 
  2627  0E25                     	;# 
  2628  0E28                     	;# 
  2629  0E29                     	;# 
  2630  0E2A                     	;# 
  2631  0E2B                     	;# 
  2632  0E2C                     	;# 
  2633  0E2D                     	;# 
  2634  0E2E                     	;# 
  2635  0E2F                     	;# 
  2636  0E90                     	;# 
  2637  0E91                     	;# 
  2638  0E92                     	;# 
  2639  0E94                     	;# 
  2640  0E95                     	;# 
  2641  0E9C                     	;# 
  2642  0E9D                     	;# 
  2643  0E9E                     	;# 
  2644  0E9F                     	;# 
  2645  0EA0                     	;# 
  2646  0EA1                     	;# 
  2647  0EA2                     	;# 
  2648  0EA3                     	;# 
  2649  0EA4                     	;# 
  2650  0EA5                     	;# 
  2651  0EA6                     	;# 
  2652  0EA7                     	;# 
  2653  0F0F                     	;# 
  2654  0F10                     	;# 
  2655  0F11                     	;# 
  2656  0F12                     	;# 
  2657  0F13                     	;# 
  2658  0F14                     	;# 
  2659  0F15                     	;# 
  2660  0F16                     	;# 
  2661  0F17                     	;# 
  2662  0F18                     	;# 
  2663  0F19                     	;# 
  2664  0F1A                     	;# 
  2665  0F1B                     	;# 
  2666  0F1C                     	;# 
  2667  0F1D                     	;# 
  2668  0F1E                     	;# 
  2669  0F1F                     	;# 
  2670  0F20                     	;# 
  2671  0F21                     	;# 
  2672  0F22                     	;# 
  2673  0F23                     	;# 
  2674  0F24                     	;# 
  2675  0F25                     	;# 
  2676  0F26                     	;# 
  2677  0F27                     	;# 
  2678  0F28                     	;# 
  2679  0F29                     	;# 
  2680  0F2A                     	;# 
  2681  0F2B                     	;# 
  2682  0F2C                     	;# 
  2683  0F2D                     	;# 
  2684  0F2E                     	;# 
  2685  0F2F                     	;# 
  2686  0F30                     	;# 
  2687  0F31                     	;# 
  2688  0F32                     	;# 
  2689  0F33                     	;# 
  2690  0F34                     	;# 
  2691  0F35                     	;# 
  2692  0F36                     	;# 
  2693  0F37                     	;# 
  2694  0FE4                     	;# 
  2695  0FE5                     	;# 
  2696  0FE6                     	;# 
  2697  0FE7                     	;# 
  2698  0FE8                     	;# 
  2699  0FE9                     	;# 
  2700  0FEA                     	;# 
  2701  0FEB                     	;# 
  2702  0FED                     	;# 
  2703  0FEE                     	;# 
  2704  0FEF                     	;# 
  2705  0000                     	;# 
  2706  0001                     	;# 
  2707  0002                     	;# 
  2708  0003                     	;# 
  2709  0004                     	;# 
  2710  0005                     	;# 
  2711  0006                     	;# 
  2712  0007                     	;# 
  2713  0008                     	;# 
  2714  0009                     	;# 
  2715  000A                     	;# 
  2716  000B                     	;# 
  2717  000C                     	;# 
  2718  000D                     	;# 
  2719  000E                     	;# 
  2720  0010                     	;# 
  2721  0011                     	;# 
  2722  0012                     	;# 
  2723  0013                     	;# 
  2724  0014                     	;# 
  2725  0015                     	;# 
  2726  0016                     	;# 
  2727  0017                     	;# 
  2728  0018                     	;# 
  2729  0019                     	;# 
  2730  0019                     	;# 
  2731  001A                     	;# 
  2732  001B                     	;# 
  2733  001C                     	;# 
  2734  001D                     	;# 
  2735  001E                     	;# 
  2736  001F                     	;# 
  2737  008C                     	;# 
  2738  008D                     	;# 
  2739  008E                     	;# 
  2740  0090                     	;# 
  2741  0091                     	;# 
  2742  0092                     	;# 
  2743  0093                     	;# 
  2744  0094                     	;# 
  2745  0097                     	;# 
  2746  009B                     	;# 
  2747  009B                     	;# 
  2748  009C                     	;# 
  2749  009D                     	;# 
  2750  009E                     	;# 
  2751  009F                     	;# 
  2752  010C                     	;# 
  2753  010D                     	;# 
  2754  010E                     	;# 
  2755  0111                     	;# 
  2756  0112                     	;# 
  2757  0113                     	;# 
  2758  0114                     	;# 
  2759  0115                     	;# 
  2760  0116                     	;# 
  2761  0117                     	;# 
  2762  0118                     	;# 
  2763  0119                     	;# 
  2764  018C                     	;# 
  2765  018D                     	;# 
  2766  018E                     	;# 
  2767  0197                     	;# 
  2768  0199                     	;# 
  2769  0199                     	;# 
  2770  0199                     	;# 
  2771  019A                     	;# 
  2772  019A                     	;# 
  2773  019A                     	;# 
  2774  019B                     	;# 
  2775  019B                     	;# 
  2776  019B                     	;# 
  2777  019B                     	;# 
  2778  019B                     	;# 
  2779  019C                     	;# 
  2780  019C                     	;# 
  2781  019C                     	;# 
  2782  019D                     	;# 
  2783  019D                     	;# 
  2784  019D                     	;# 
  2785  019E                     	;# 
  2786  019E                     	;# 
  2787  019E                     	;# 
  2788  019F                     	;# 
  2789  019F                     	;# 
  2790  019F                     	;# 
  2791  019F                     	;# 
  2792  019F                     	;# 
  2793  020C                     	;# 
  2794  020D                     	;# 
  2795  020E                     	;# 
  2796  0211                     	;# 
  2797  0211                     	;# 
  2798  0212                     	;# 
  2799  0212                     	;# 
  2800  0213                     	;# 
  2801  0213                     	;# 
  2802  0214                     	;# 
  2803  0214                     	;# 
  2804  0215                     	;# 
  2805  0215                     	;# 
  2806  0215                     	;# 
  2807  0215                     	;# 
  2808  0216                     	;# 
  2809  0216                     	;# 
  2810  0217                     	;# 
  2811  0217                     	;# 
  2812  028C                     	;# 
  2813  028D                     	;# 
  2814  028E                     	;# 
  2815  0291                     	;# 
  2816  0291                     	;# 
  2817  0292                     	;# 
  2818  0293                     	;# 
  2819  0294                     	;# 
  2820  0295                     	;# 
  2821  0295                     	;# 
  2822  0296                     	;# 
  2823  0297                     	;# 
  2824  0298                     	;# 
  2825  029F                     	;# 
  2826  030C                     	;# 
  2827  030D                     	;# 
  2828  030E                     	;# 
  2829  0311                     	;# 
  2830  0311                     	;# 
  2831  0312                     	;# 
  2832  0313                     	;# 
  2833  0314                     	;# 
  2834  0315                     	;# 
  2835  0315                     	;# 
  2836  0316                     	;# 
  2837  0317                     	;# 
  2838  0318                     	;# 
  2839  038C                     	;# 
  2840  038D                     	;# 
  2841  038E                     	;# 
  2842  0391                     	;# 
  2843  0392                     	;# 
  2844  0393                     	;# 
  2845  0394                     	;# 
  2846  0395                     	;# 
  2847  0396                     	;# 
  2848  0397                     	;# 
  2849  0398                     	;# 
  2850  0399                     	;# 
  2851  039A                     	;# 
  2852  039C                     	;# 
  2853  039D                     	;# 
  2854  039E                     	;# 
  2855  039F                     	;# 
  2856  040C                     	;# 
  2857  040D                     	;# 
  2858  040E                     	;# 
  2859  0411                     	;# 
  2860  0411                     	;# 
  2861  0412                     	;# 
  2862  0413                     	;# 
  2863  0414                     	;# 
  2864  0415                     	;# 
  2865  0416                     	;# 
  2866  0417                     	;# 
  2867  0418                     	;# 
  2868  0418                     	;# 
  2869  0419                     	;# 
  2870  041A                     	;# 
  2871  041B                     	;# 
  2872  041C                     	;# 
  2873  041D                     	;# 
  2874  041E                     	;# 
  2875  041F                     	;# 
  2876  048C                     	;# 
  2877  048D                     	;# 
  2878  048E                     	;# 
  2879  0498                     	;# 
  2880  0498                     	;# 
  2881  0499                     	;# 
  2882  049A                     	;# 
  2883  049B                     	;# 
  2884  049B                     	;# 
  2885  049C                     	;# 
  2886  049D                     	;# 
  2887  049E                     	;# 
  2888  049F                     	;# 
  2889  0617                     	;# 
  2890  0618                     	;# 
  2891  0619                     	;# 
  2892  0619                     	;# 
  2893  061A                     	;# 
  2894  061B                     	;# 
  2895  061C                     	;# 
  2896  061C                     	;# 
  2897  061F                     	;# 
  2898  0691                     	;# 
  2899  0692                     	;# 
  2900  0693                     	;# 
  2901  0694                     	;# 
  2902  0695                     	;# 
  2903  0696                     	;# 
  2904  0697                     	;# 
  2905  0698                     	;# 
  2906  0699                     	;# 
  2907  0711                     	;# 
  2908  0712                     	;# 
  2909  0713                     	;# 
  2910  0714                     	;# 
  2911  0715                     	;# 
  2912  0716                     	;# 
  2913  0717                     	;# 
  2914  0718                     	;# 
  2915  0719                     	;# 
  2916  0891                     	;# 
  2917  0891                     	;# 
  2918  0892                     	;# 
  2919  0893                     	;# 
  2920  0893                     	;# 
  2921  0894                     	;# 
  2922  0895                     	;# 
  2923  0896                     	;# 
  2924  089B                     	;# 
  2925  0911                     	;# 
  2926  0912                     	;# 
  2927  0913                     	;# 
  2928  0914                     	;# 
  2929  0915                     	;# 
  2930  0916                     	;# 
  2931  0918                     	;# 
  2932  0919                     	;# 
  2933  091A                     	;# 
  2934  091B                     	;# 
  2935  091C                     	;# 
  2936  091D                     	;# 
  2937  091E                     	;# 
  2938  091F                     	;# 
  2939  0E0F                     	;# 
  2940  0E10                     	;# 
  2941  0E11                     	;# 
  2942  0E12                     	;# 
  2943  0E13                     	;# 
  2944  0E14                     	;# 
  2945  0E15                     	;# 
  2946  0E16                     	;# 
  2947  0E17                     	;# 
  2948  0E18                     	;# 
  2949  0E19                     	;# 
  2950  0E1A                     	;# 
  2951  0E1B                     	;# 
  2952  0E1C                     	;# 
  2953  0E20                     	;# 
  2954  0E21                     	;# 
  2955  0E22                     	;# 
  2956  0E24                     	;# 
  2957  0E25                     	;# 
  2958  0E28                     	;# 
  2959  0E29                     	;# 
  2960  0E2A                     	;# 
  2961  0E2B                     	;# 
  2962  0E2C                     	;# 
  2963  0E2D                     	;# 
  2964  0E2E                     	;# 
  2965  0E2F                     	;# 
  2966  0E90                     	;# 
  2967  0E91                     	;# 
  2968  0E92                     	;# 
  2969  0E94                     	;# 
  2970  0E95                     	;# 
  2971  0E9C                     	;# 
  2972  0E9D                     	;# 
  2973  0E9E                     	;# 
  2974  0E9F                     	;# 
  2975  0EA0                     	;# 
  2976  0EA1                     	;# 
  2977  0EA2                     	;# 
  2978  0EA3                     	;# 
  2979  0EA4                     	;# 
  2980  0EA5                     	;# 
  2981  0EA6                     	;# 
  2982  0EA7                     	;# 
  2983  0F0F                     	;# 
  2984  0F10                     	;# 
  2985  0F11                     	;# 
  2986  0F12                     	;# 
  2987  0F13                     	;# 
  2988  0F14                     	;# 
  2989  0F15                     	;# 
  2990  0F16                     	;# 
  2991  0F17                     	;# 
  2992  0F18                     	;# 
  2993  0F19                     	;# 
  2994  0F1A                     	;# 
  2995  0F1B                     	;# 
  2996  0F1C                     	;# 
  2997  0F1D                     	;# 
  2998  0F1E                     	;# 
  2999  0F1F                     	;# 
  3000  0F20                     	;# 
  3001  0F21                     	;# 
  3002  0F22                     	;# 
  3003  0F23                     	;# 
  3004  0F24                     	;# 
  3005  0F25                     	;# 
  3006  0F26                     	;# 
  3007  0F27                     	;# 
  3008  0F28                     	;# 
  3009  0F29                     	;# 
  3010  0F2A                     	;# 
  3011  0F2B                     	;# 
  3012  0F2C                     	;# 
  3013  0F2D                     	;# 
  3014  0F2E                     	;# 
  3015  0F2F                     	;# 
  3016  0F30                     	;# 
  3017  0F31                     	;# 
  3018  0F32                     	;# 
  3019  0F33                     	;# 
  3020  0F34                     	;# 
  3021  0F35                     	;# 
  3022  0F36                     	;# 
  3023  0F37                     	;# 
  3024  0FE4                     	;# 
  3025  0FE5                     	;# 
  3026  0FE6                     	;# 
  3027  0FE7                     	;# 
  3028  0FE8                     	;# 
  3029  0FE9                     	;# 
  3030  0FEA                     	;# 
  3031  0FEB                     	;# 
  3032  0FED                     	;# 
  3033  0FEE                     	;# 
  3034  0FEF                     	;# 
  3035  0000                     	;# 
  3036  0001                     	;# 
  3037  0002                     	;# 
  3038  0003                     	;# 
  3039  0004                     	;# 
  3040  0005                     	;# 
  3041  0006                     	;# 
  3042  0007                     	;# 
  3043  0008                     	;# 
  3044  0009                     	;# 
  3045  000A                     	;# 
  3046  000B                     	;# 
  3047  000C                     	;# 
  3048  000D                     	;# 
  3049  000E                     	;# 
  3050  0010                     	;# 
  3051  0011                     	;# 
  3052  0012                     	;# 
  3053  0013                     	;# 
  3054  0014                     	;# 
  3055  0015                     	;# 
  3056  0016                     	;# 
  3057  0017                     	;# 
  3058  0018                     	;# 
  3059  0019                     	;# 
  3060  0019                     	;# 
  3061  001A                     	;# 
  3062  001B                     	;# 
  3063  001C                     	;# 
  3064  001D                     	;# 
  3065  001E                     	;# 
  3066  001F                     	;# 
  3067  008C                     	;# 
  3068  008D                     	;# 
  3069  008E                     	;# 
  3070  0090                     	;# 
  3071  0091                     	;# 
  3072  0092                     	;# 
  3073  0093                     	;# 
  3074  0094                     	;# 
  3075  0097                     	;# 
  3076  009B                     	;# 
  3077  009B                     	;# 
  3078  009C                     	;# 
  3079  009D                     	;# 
  3080  009E                     	;# 
  3081  009F                     	;# 
  3082  010C                     	;# 
  3083  010D                     	;# 
  3084  010E                     	;# 
  3085  0111                     	;# 
  3086  0112                     	;# 
  3087  0113                     	;# 
  3088  0114                     	;# 
  3089  0115                     	;# 
  3090  0116                     	;# 
  3091  0117                     	;# 
  3092  0118                     	;# 
  3093  0119                     	;# 
  3094  018C                     	;# 
  3095  018D                     	;# 
  3096  018E                     	;# 
  3097  0197                     	;# 
  3098  0199                     	;# 
  3099  0199                     	;# 
  3100  0199                     	;# 
  3101  019A                     	;# 
  3102  019A                     	;# 
  3103  019A                     	;# 
  3104  019B                     	;# 
  3105  019B                     	;# 
  3106  019B                     	;# 
  3107  019B                     	;# 
  3108  019B                     	;# 
  3109  019C                     	;# 
  3110  019C                     	;# 
  3111  019C                     	;# 
  3112  019D                     	;# 
  3113  019D                     	;# 
  3114  019D                     	;# 
  3115  019E                     	;# 
  3116  019E                     	;# 
  3117  019E                     	;# 
  3118  019F                     	;# 
  3119  019F                     	;# 
  3120  019F                     	;# 
  3121  019F                     	;# 
  3122  019F                     	;# 
  3123  020C                     	;# 
  3124  020D                     	;# 
  3125  020E                     	;# 
  3126  0211                     	;# 
  3127  0211                     	;# 
  3128  0212                     	;# 
  3129  0212                     	;# 
  3130  0213                     	;# 
  3131  0213                     	;# 
  3132  0214                     	;# 
  3133  0214                     	;# 
  3134  0215                     	;# 
  3135  0215                     	;# 
  3136  0215                     	;# 
  3137  0215                     	;# 
  3138  0216                     	;# 
  3139  0216                     	;# 
  3140  0217                     	;# 
  3141  0217                     	;# 
  3142  028C                     	;# 
  3143  028D                     	;# 
  3144  028E                     	;# 
  3145  0291                     	;# 
  3146  0291                     	;# 
  3147  0292                     	;# 
  3148  0293                     	;# 
  3149  0294                     	;# 
  3150  0295                     	;# 
  3151  0295                     	;# 
  3152  0296                     	;# 
  3153  0297                     	;# 
  3154  0298                     	;# 
  3155  029F                     	;# 
  3156  030C                     	;# 
  3157  030D                     	;# 
  3158  030E                     	;# 
  3159  0311                     	;# 
  3160  0311                     	;# 
  3161  0312                     	;# 
  3162  0313                     	;# 
  3163  0314                     	;# 
  3164  0315                     	;# 
  3165  0315                     	;# 
  3166  0316                     	;# 
  3167  0317                     	;# 
  3168  0318                     	;# 
  3169  038C                     	;# 
  3170  038D                     	;# 
  3171  038E                     	;# 
  3172  0391                     	;# 
  3173  0392                     	;# 
  3174  0393                     	;# 
  3175  0394                     	;# 
  3176  0395                     	;# 
  3177  0396                     	;# 
  3178  0397                     	;# 
  3179  0398                     	;# 
  3180  0399                     	;# 
  3181  039A                     	;# 
  3182  039C                     	;# 
  3183  039D                     	;# 
  3184  039E                     	;# 
  3185  039F                     	;# 
  3186  040C                     	;# 
  3187  040D                     	;# 
  3188  040E                     	;# 
  3189  0411                     	;# 
  3190  0411                     	;# 
  3191  0412                     	;# 
  3192  0413                     	;# 
  3193  0414                     	;# 
  3194  0415                     	;# 
  3195  0416                     	;# 
  3196  0417                     	;# 
  3197  0418                     	;# 
  3198  0418                     	;# 
  3199  0419                     	;# 
  3200  041A                     	;# 
  3201  041B                     	;# 
  3202  041C                     	;# 
  3203  041D                     	;# 
  3204  041E                     	;# 
  3205  041F                     	;# 
  3206  048C                     	;# 
  3207  048D                     	;# 
  3208  048E                     	;# 
  3209  0498                     	;# 
  3210  0498                     	;# 
  3211  0499                     	;# 
  3212  049A                     	;# 
  3213  049B                     	;# 
  3214  049B                     	;# 
  3215  049C                     	;# 
  3216  049D                     	;# 
  3217  049E                     	;# 
  3218  049F                     	;# 
  3219  0617                     	;# 
  3220  0618                     	;# 
  3221  0619                     	;# 
  3222  0619                     	;# 
  3223  061A                     	;# 
  3224  061B                     	;# 
  3225  061C                     	;# 
  3226  061C                     	;# 
  3227  061F                     	;# 
  3228  0691                     	;# 
  3229  0692                     	;# 
  3230  0693                     	;# 
  3231  0694                     	;# 
  3232  0695                     	;# 
  3233  0696                     	;# 
  3234  0697                     	;# 
  3235  0698                     	;# 
  3236  0699                     	;# 
  3237  0711                     	;# 
  3238  0712                     	;# 
  3239  0713                     	;# 
  3240  0714                     	;# 
  3241  0715                     	;# 
  3242  0716                     	;# 
  3243  0717                     	;# 
  3244  0718                     	;# 
  3245  0719                     	;# 
  3246  0891                     	;# 
  3247  0891                     	;# 
  3248  0892                     	;# 
  3249  0893                     	;# 
  3250  0893                     	;# 
  3251  0894                     	;# 
  3252  0895                     	;# 
  3253  0896                     	;# 
  3254  089B                     	;# 
  3255  0911                     	;# 
  3256  0912                     	;# 
  3257  0913                     	;# 
  3258  0914                     	;# 
  3259  0915                     	;# 
  3260  0916                     	;# 
  3261  0918                     	;# 
  3262  0919                     	;# 
  3263  091A                     	;# 
  3264  091B                     	;# 
  3265  091C                     	;# 
  3266  091D                     	;# 
  3267  091E                     	;# 
  3268  091F                     	;# 
  3269  0E0F                     	;# 
  3270  0E10                     	;# 
  3271  0E11                     	;# 
  3272  0E12                     	;# 
  3273  0E13                     	;# 
  3274  0E14                     	;# 
  3275  0E15                     	;# 
  3276  0E16                     	;# 
  3277  0E17                     	;# 
  3278  0E18                     	;# 
  3279  0E19                     	;# 
  3280  0E1A                     	;# 
  3281  0E1B                     	;# 
  3282  0E1C                     	;# 
  3283  0E20                     	;# 
  3284  0E21                     	;# 
  3285  0E22                     	;# 
  3286  0E24                     	;# 
  3287  0E25                     	;# 
  3288  0E28                     	;# 
  3289  0E29                     	;# 
  3290  0E2A                     	;# 
  3291  0E2B                     	;# 
  3292  0E2C                     	;# 
  3293  0E2D                     	;# 
  3294  0E2E                     	;# 
  3295  0E2F                     	;# 
  3296  0E90                     	;# 
  3297  0E91                     	;# 
  3298  0E92                     	;# 
  3299  0E94                     	;# 
  3300  0E95                     	;# 
  3301  0E9C                     	;# 
  3302  0E9D                     	;# 
  3303  0E9E                     	;# 
  3304  0E9F                     	;# 
  3305  0EA0                     	;# 
  3306  0EA1                     	;# 
  3307  0EA2                     	;# 
  3308  0EA3                     	;# 
  3309  0EA4                     	;# 
  3310  0EA5                     	;# 
  3311  0EA6                     	;# 
  3312  0EA7                     	;# 
  3313  0F0F                     	;# 
  3314  0F10                     	;# 
  3315  0F11                     	;# 
  3316  0F12                     	;# 
  3317  0F13                     	;# 
  3318  0F14                     	;# 
  3319  0F15                     	;# 
  3320  0F16                     	;# 
  3321  0F17                     	;# 
  3322  0F18                     	;# 
  3323  0F19                     	;# 
  3324  0F1A                     	;# 
  3325  0F1B                     	;# 
  3326  0F1C                     	;# 
  3327  0F1D                     	;# 
  3328  0F1E                     	;# 
  3329  0F1F                     	;# 
  3330  0F20                     	;# 
  3331  0F21                     	;# 
  3332  0F22                     	;# 
  3333  0F23                     	;# 
  3334  0F24                     	;# 
  3335  0F25                     	;# 
  3336  0F26                     	;# 
  3337  0F27                     	;# 
  3338  0F28                     	;# 
  3339  0F29                     	;# 
  3340  0F2A                     	;# 
  3341  0F2B                     	;# 
  3342  0F2C                     	;# 
  3343  0F2D                     	;# 
  3344  0F2E                     	;# 
  3345  0F2F                     	;# 
  3346  0F30                     	;# 
  3347  0F31                     	;# 
  3348  0F32                     	;# 
  3349  0F33                     	;# 
  3350  0F34                     	;# 
  3351  0F35                     	;# 
  3352  0F36                     	;# 
  3353  0F37                     	;# 
  3354  0FE4                     	;# 
  3355  0FE5                     	;# 
  3356  0FE6                     	;# 
  3357  0FE7                     	;# 
  3358  0FE8                     	;# 
  3359  0FE9                     	;# 
  3360  0FEA                     	;# 
  3361  0FEB                     	;# 
  3362  0FED                     	;# 
  3363  0FEE                     	;# 
  3364  0FEF                     	;# 
  3365  0000                     	;# 
  3366  0001                     	;# 
  3367  0002                     	;# 
  3368  0003                     	;# 
  3369  0004                     	;# 
  3370  0005                     	;# 
  3371  0006                     	;# 
  3372  0007                     	;# 
  3373  0008                     	;# 
  3374  0009                     	;# 
  3375  000A                     	;# 
  3376  000B                     	;# 
  3377  000C                     	;# 
  3378  000D                     	;# 
  3379  000E                     	;# 
  3380  0010                     	;# 
  3381  0011                     	;# 
  3382  0012                     	;# 
  3383  0013                     	;# 
  3384  0014                     	;# 
  3385  0015                     	;# 
  3386  0016                     	;# 
  3387  0017                     	;# 
  3388  0018                     	;# 
  3389  0019                     	;# 
  3390  0019                     	;# 
  3391  001A                     	;# 
  3392  001B                     	;# 
  3393  001C                     	;# 
  3394  001D                     	;# 
  3395  001E                     	;# 
  3396  001F                     	;# 
  3397  008C                     	;# 
  3398  008D                     	;# 
  3399  008E                     	;# 
  3400  0090                     	;# 
  3401  0091                     	;# 
  3402  0092                     	;# 
  3403  0093                     	;# 
  3404  0094                     	;# 
  3405  0097                     	;# 
  3406  009B                     	;# 
  3407  009B                     	;# 
  3408  009C                     	;# 
  3409  009D                     	;# 
  3410  009E                     	;# 
  3411  009F                     	;# 
  3412  010C                     	;# 
  3413  010D                     	;# 
  3414  010E                     	;# 
  3415  0111                     	;# 
  3416  0112                     	;# 
  3417  0113                     	;# 
  3418  0114                     	;# 
  3419  0115                     	;# 
  3420  0116                     	;# 
  3421  0117                     	;# 
  3422  0118                     	;# 
  3423  0119                     	;# 
  3424  018C                     	;# 
  3425  018D                     	;# 
  3426  018E                     	;# 
  3427  0197                     	;# 
  3428  0199                     	;# 
  3429  0199                     	;# 
  3430  0199                     	;# 
  3431  019A                     	;# 
  3432  019A                     	;# 
  3433  019A                     	;# 
  3434  019B                     	;# 
  3435  019B                     	;# 
  3436  019B                     	;# 
  3437  019B                     	;# 
  3438  019B                     	;# 
  3439  019C                     	;# 
  3440  019C                     	;# 
  3441  019C                     	;# 
  3442  019D                     	;# 
  3443  019D                     	;# 
  3444  019D                     	;# 
  3445  019E                     	;# 
  3446  019E                     	;# 
  3447  019E                     	;# 
  3448  019F                     	;# 
  3449  019F                     	;# 
  3450  019F                     	;# 
  3451  019F                     	;# 
  3452  019F                     	;# 
  3453  020C                     	;# 
  3454  020D                     	;# 
  3455  020E                     	;# 
  3456  0211                     	;# 
  3457  0211                     	;# 
  3458  0212                     	;# 
  3459  0212                     	;# 
  3460  0213                     	;# 
  3461  0213                     	;# 
  3462  0214                     	;# 
  3463  0214                     	;# 
  3464  0215                     	;# 
  3465  0215                     	;# 
  3466  0215                     	;# 
  3467  0215                     	;# 
  3468  0216                     	;# 
  3469  0216                     	;# 
  3470  0217                     	;# 
  3471  0217                     	;# 
  3472  028C                     	;# 
  3473  028D                     	;# 
  3474  028E                     	;# 
  3475  0291                     	;# 
  3476  0291                     	;# 
  3477  0292                     	;# 
  3478  0293                     	;# 
  3479  0294                     	;# 
  3480  0295                     	;# 
  3481  0295                     	;# 
  3482  0296                     	;# 
  3483  0297                     	;# 
  3484  0298                     	;# 
  3485  029F                     	;# 
  3486  030C                     	;# 
  3487  030D                     	;# 
  3488  030E                     	;# 
  3489  0311                     	;# 
  3490  0311                     	;# 
  3491  0312                     	;# 
  3492  0313                     	;# 
  3493  0314                     	;# 
  3494  0315                     	;# 
  3495  0315                     	;# 
  3496  0316                     	;# 
  3497  0317                     	;# 
  3498  0318                     	;# 
  3499  038C                     	;# 
  3500  038D                     	;# 
  3501  038E                     	;# 
  3502  0391                     	;# 
  3503  0392                     	;# 
  3504  0393                     	;# 
  3505  0394                     	;# 
  3506  0395                     	;# 
  3507  0396                     	;# 
  3508  0397                     	;# 
  3509  0398                     	;# 
  3510  0399                     	;# 
  3511  039A                     	;# 
  3512  039C                     	;# 
  3513  039D                     	;# 
  3514  039E                     	;# 
  3515  039F                     	;# 
  3516  040C                     	;# 
  3517  040D                     	;# 
  3518  040E                     	;# 
  3519  0411                     	;# 
  3520  0411                     	;# 
  3521  0412                     	;# 
  3522  0413                     	;# 
  3523  0414                     	;# 
  3524  0415                     	;# 
  3525  0416                     	;# 
  3526  0417                     	;# 
  3527  0418                     	;# 
  3528  0418                     	;# 
  3529  0419                     	;# 
  3530  041A                     	;# 
  3531  041B                     	;# 
  3532  041C                     	;# 
  3533  041D                     	;# 
  3534  041E                     	;# 
  3535  041F                     	;# 
  3536  048C                     	;# 
  3537  048D                     	;# 
  3538  048E                     	;# 
  3539  0498                     	;# 
  3540  0498                     	;# 
  3541  0499                     	;# 
  3542  049A                     	;# 
  3543  049B                     	;# 
  3544  049B                     	;# 
  3545  049C                     	;# 
  3546  049D                     	;# 
  3547  049E                     	;# 
  3548  049F                     	;# 
  3549  0617                     	;# 
  3550  0618                     	;# 
  3551  0619                     	;# 
  3552  0619                     	;# 
  3553  061A                     	;# 
  3554  061B                     	;# 
  3555  061C                     	;# 
  3556  061C                     	;# 
  3557  061F                     	;# 
  3558  0691                     	;# 
  3559  0692                     	;# 
  3560  0693                     	;# 
  3561  0694                     	;# 
  3562  0695                     	;# 
  3563  0696                     	;# 
  3564  0697                     	;# 
  3565  0698                     	;# 
  3566  0699                     	;# 
  3567  0711                     	;# 
  3568  0712                     	;# 
  3569  0713                     	;# 
  3570  0714                     	;# 
  3571  0715                     	;# 
  3572  0716                     	;# 
  3573  0717                     	;# 
  3574  0718                     	;# 
  3575  0719                     	;# 
  3576  0891                     	;# 
  3577  0891                     	;# 
  3578  0892                     	;# 
  3579  0893                     	;# 
  3580  0893                     	;# 
  3581  0894                     	;# 
  3582  0895                     	;# 
  3583  0896                     	;# 
  3584  089B                     	;# 
  3585  0911                     	;# 
  3586  0912                     	;# 
  3587  0913                     	;# 
  3588  0914                     	;# 
  3589  0915                     	;# 
  3590  0916                     	;# 
  3591  0918                     	;# 
  3592  0919                     	;# 
  3593  091A                     	;# 
  3594  091B                     	;# 
  3595  091C                     	;# 
  3596  091D                     	;# 
  3597  091E                     	;# 
  3598  091F                     	;# 
  3599  0E0F                     	;# 
  3600  0E10                     	;# 
  3601  0E11                     	;# 
  3602  0E12                     	;# 
  3603  0E13                     	;# 
  3604  0E14                     	;# 
  3605  0E15                     	;# 
  3606  0E16                     	;# 
  3607  0E17                     	;# 
  3608  0E18                     	;# 
  3609  0E19                     	;# 
  3610  0E1A                     	;# 
  3611  0E1B                     	;# 
  3612  0E1C                     	;# 
  3613  0E20                     	;# 
  3614  0E21                     	;# 
  3615  0E22                     	;# 
  3616  0E24                     	;# 
  3617  0E25                     	;# 
  3618  0E28                     	;# 
  3619  0E29                     	;# 
  3620  0E2A                     	;# 
  3621  0E2B                     	;# 
  3622  0E2C                     	;# 
  3623  0E2D                     	;# 
  3624  0E2E                     	;# 
  3625  0E2F                     	;# 
  3626  0E90                     	;# 
  3627  0E91                     	;# 
  3628  0E92                     	;# 
  3629  0E94                     	;# 
  3630  0E95                     	;# 
  3631  0E9C                     	;# 
  3632  0E9D                     	;# 
  3633  0E9E                     	;# 
  3634  0E9F                     	;# 
  3635  0EA0                     	;# 
  3636  0EA1                     	;# 
  3637  0EA2                     	;# 
  3638  0EA3                     	;# 
  3639  0EA4                     	;# 
  3640  0EA5                     	;# 
  3641  0EA6                     	;# 
  3642  0EA7                     	;# 
  3643  0F0F                     	;# 
  3644  0F10                     	;# 
  3645  0F11                     	;# 
  3646  0F12                     	;# 
  3647  0F13                     	;# 
  3648  0F14                     	;# 
  3649  0F15                     	;# 
  3650  0F16                     	;# 
  3651  0F17                     	;# 
  3652  0F18                     	;# 
  3653  0F19                     	;# 
  3654  0F1A                     	;# 
  3655  0F1B                     	;# 
  3656  0F1C                     	;# 
  3657  0F1D                     	;# 
  3658  0F1E                     	;# 
  3659  0F1F                     	;# 
  3660  0F20                     	;# 
  3661  0F21                     	;# 
  3662  0F22                     	;# 
  3663  0F23                     	;# 
  3664  0F24                     	;# 
  3665  0F25                     	;# 
  3666  0F26                     	;# 
  3667  0F27                     	;# 
  3668  0F28                     	;# 
  3669  0F29                     	;# 
  3670  0F2A                     	;# 
  3671  0F2B                     	;# 
  3672  0F2C                     	;# 
  3673  0F2D                     	;# 
  3674  0F2E                     	;# 
  3675  0F2F                     	;# 
  3676  0F30                     	;# 
  3677  0F31                     	;# 
  3678  0F32                     	;# 
  3679  0F33                     	;# 
  3680  0F34                     	;# 
  3681  0F35                     	;# 
  3682  0F36                     	;# 
  3683  0F37                     	;# 
  3684  0FE4                     	;# 
  3685  0FE5                     	;# 
  3686  0FE6                     	;# 
  3687  0FE7                     	;# 
  3688  0FE8                     	;# 
  3689  0FE9                     	;# 
  3690  0FEA                     	;# 
  3691  0FEB                     	;# 
  3692  0FED                     	;# 
  3693  0FEE                     	;# 
  3694  0FEF                     	;# 
  3695  0000                     	;# 
  3696  0001                     	;# 
  3697  0002                     	;# 
  3698  0003                     	;# 
  3699  0004                     	;# 
  3700  0005                     	;# 
  3701  0006                     	;# 
  3702  0007                     	;# 
  3703  0008                     	;# 
  3704  0009                     	;# 
  3705  000A                     	;# 
  3706  000B                     	;# 
  3707  000C                     	;# 
  3708  000D                     	;# 
  3709  000E                     	;# 
  3710  0010                     	;# 
  3711  0011                     	;# 
  3712  0012                     	;# 
  3713  0013                     	;# 
  3714  0014                     	;# 
  3715  0015                     	;# 
  3716  0016                     	;# 
  3717  0017                     	;# 
  3718  0018                     	;# 
  3719  0019                     	;# 
  3720  0019                     	;# 
  3721  001A                     	;# 
  3722  001B                     	;# 
  3723  001C                     	;# 
  3724  001D                     	;# 
  3725  001E                     	;# 
  3726  001F                     	;# 
  3727  008C                     	;# 
  3728  008D                     	;# 
  3729  008E                     	;# 
  3730  0090                     	;# 
  3731  0091                     	;# 
  3732  0092                     	;# 
  3733  0093                     	;# 
  3734  0094                     	;# 
  3735  0097                     	;# 
  3736  009B                     	;# 
  3737  009B                     	;# 
  3738  009C                     	;# 
  3739  009D                     	;# 
  3740  009E                     	;# 
  3741  009F                     	;# 
  3742  010C                     	;# 
  3743  010D                     	;# 
  3744  010E                     	;# 
  3745  0111                     	;# 
  3746  0112                     	;# 
  3747  0113                     	;# 
  3748  0114                     	;# 
  3749  0115                     	;# 
  3750  0116                     	;# 
  3751  0117                     	;# 
  3752  0118                     	;# 
  3753  0119                     	;# 
  3754  018C                     	;# 
  3755  018D                     	;# 
  3756  018E                     	;# 
  3757  0197                     	;# 
  3758  0199                     	;# 
  3759  0199                     	;# 
  3760  0199                     	;# 
  3761  019A                     	;# 
  3762  019A                     	;# 
  3763  019A                     	;# 
  3764  019B                     	;# 
  3765  019B                     	;# 
  3766  019B                     	;# 
  3767  019B                     	;# 
  3768  019B                     	;# 
  3769  019C                     	;# 
  3770  019C                     	;# 
  3771  019C                     	;# 
  3772  019D                     	;# 
  3773  019D                     	;# 
  3774  019D                     	;# 
  3775  019E                     	;# 
  3776  019E                     	;# 
  3777  019E                     	;# 
  3778  019F                     	;# 
  3779  019F                     	;# 
  3780  019F                     	;# 
  3781  019F                     	;# 
  3782  019F                     	;# 
  3783  020C                     	;# 
  3784  020D                     	;# 
  3785  020E                     	;# 
  3786  0211                     	;# 
  3787  0211                     	;# 
  3788  0212                     	;# 
  3789  0212                     	;# 
  3790  0213                     	;# 
  3791  0213                     	;# 
  3792  0214                     	;# 
  3793  0214                     	;# 
  3794  0215                     	;# 
  3795  0215                     	;# 
  3796  0215                     	;# 
  3797  0215                     	;# 
  3798  0216                     	;# 
  3799  0216                     	;# 
  3800  0217                     	;# 
  3801  0217                     	;# 
  3802  028C                     	;# 
  3803  028D                     	;# 
  3804  028E                     	;# 
  3805  0291                     	;# 
  3806  0291                     	;# 
  3807  0292                     	;# 
  3808  0293                     	;# 
  3809  0294                     	;# 
  3810  0295                     	;# 
  3811  0295                     	;# 
  3812  0296                     	;# 
  3813  0297                     	;# 
  3814  0298                     	;# 
  3815  029F                     	;# 
  3816  030C                     	;# 
  3817  030D                     	;# 
  3818  030E                     	;# 
  3819  0311                     	;# 
  3820  0311                     	;# 
  3821  0312                     	;# 
  3822  0313                     	;# 
  3823  0314                     	;# 
  3824  0315                     	;# 
  3825  0315                     	;# 
  3826  0316                     	;# 
  3827  0317                     	;# 
  3828  0318                     	;# 
  3829  038C                     	;# 
  3830  038D                     	;# 
  3831  038E                     	;# 
  3832  0391                     	;# 
  3833  0392                     	;# 
  3834  0393                     	;# 
  3835  0394                     	;# 
  3836  0395                     	;# 
  3837  0396                     	;# 
  3838  0397                     	;# 
  3839  0398                     	;# 
  3840  0399                     	;# 
  3841  039A                     	;# 
  3842  039C                     	;# 
  3843  039D                     	;# 
  3844  039E                     	;# 
  3845  039F                     	;# 
  3846  040C                     	;# 
  3847  040D                     	;# 
  3848  040E                     	;# 
  3849  0411                     	;# 
  3850  0411                     	;# 
  3851  0412                     	;# 
  3852  0413                     	;# 
  3853  0414                     	;# 
  3854  0415                     	;# 
  3855  0416                     	;# 
  3856  0417                     	;# 
  3857  0418                     	;# 
  3858  0418                     	;# 
  3859  0419                     	;# 
  3860  041A                     	;# 
  3861  041B                     	;# 
  3862  041C                     	;# 
  3863  041D                     	;# 
  3864  041E                     	;# 
  3865  041F                     	;# 
  3866  048C                     	;# 
  3867  048D                     	;# 
  3868  048E                     	;# 
  3869  0498                     	;# 
  3870  0498                     	;# 
  3871  0499                     	;# 
  3872  049A                     	;# 
  3873  049B                     	;# 
  3874  049B                     	;# 
  3875  049C                     	;# 
  3876  049D                     	;# 
  3877  049E                     	;# 
  3878  049F                     	;# 
  3879  0617                     	;# 
  3880  0618                     	;# 
  3881  0619                     	;# 
  3882  0619                     	;# 
  3883  061A                     	;# 
  3884  061B                     	;# 
  3885  061C                     	;# 
  3886  061C                     	;# 
  3887  061F                     	;# 
  3888  0691                     	;# 
  3889  0692                     	;# 
  3890  0693                     	;# 
  3891  0694                     	;# 
  3892  0695                     	;# 
  3893  0696                     	;# 
  3894  0697                     	;# 
  3895  0698                     	;# 
  3896  0699                     	;# 
  3897  0711                     	;# 
  3898  0712                     	;# 
  3899  0713                     	;# 
  3900  0714                     	;# 
  3901  0715                     	;# 
  3902  0716                     	;# 
  3903  0717                     	;# 
  3904  0718                     	;# 
  3905  0719                     	;# 
  3906  0891                     	;# 
  3907  0891                     	;# 
  3908  0892                     	;# 
  3909  0893                     	;# 
  3910  0893                     	;# 
  3911  0894                     	;# 
  3912  0895                     	;# 
  3913  0896                     	;# 
  3914  089B                     	;# 
  3915  0911                     	;# 
  3916  0912                     	;# 
  3917  0913                     	;# 
  3918  0914                     	;# 
  3919  0915                     	;# 
  3920  0916                     	;# 
  3921  0918                     	;# 
  3922  0919                     	;# 
  3923  091A                     	;# 
  3924  091B                     	;# 
  3925  091C                     	;# 
  3926  091D                     	;# 
  3927  091E                     	;# 
  3928  091F                     	;# 
  3929  0E0F                     	;# 
  3930  0E10                     	;# 
  3931  0E11                     	;# 
  3932  0E12                     	;# 
  3933  0E13                     	;# 
  3934  0E14                     	;# 
  3935  0E15                     	;# 
  3936  0E16                     	;# 
  3937  0E17                     	;# 
  3938  0E18                     	;# 
  3939  0E19                     	;# 
  3940  0E1A                     	;# 
  3941  0E1B                     	;# 
  3942  0E1C                     	;# 
  3943  0E20                     	;# 
  3944  0E21                     	;# 
  3945  0E22                     	;# 
  3946  0E24                     	;# 
  3947  0E25                     	;# 
  3948  0E28                     	;# 
  3949  0E29                     	;# 
  3950  0E2A                     	;# 
  3951  0E2B                     	;# 
  3952  0E2C                     	;# 
  3953  0E2D                     	;# 
  3954  0E2E                     	;# 
  3955  0E2F                     	;# 
  3956  0E90                     	;# 
  3957  0E91                     	;# 
  3958  0E92                     	;# 
  3959  0E94                     	;# 
  3960  0E95                     	;# 
  3961  0E9C                     	;# 
  3962  0E9D                     	;# 
  3963  0E9E                     	;# 
  3964  0E9F                     	;# 
  3965  0EA0                     	;# 
  3966  0EA1                     	;# 
  3967  0EA2                     	;# 
  3968  0EA3                     	;# 
  3969  0EA4                     	;# 
  3970  0EA5                     	;# 
  3971  0EA6                     	;# 
  3972  0EA7                     	;# 
  3973  0F0F                     	;# 
  3974  0F10                     	;# 
  3975  0F11                     	;# 
  3976  0F12                     	;# 
  3977  0F13                     	;# 
  3978  0F14                     	;# 
  3979  0F15                     	;# 
  3980  0F16                     	;# 
  3981  0F17                     	;# 
  3982  0F18                     	;# 
  3983  0F19                     	;# 
  3984  0F1A                     	;# 
  3985  0F1B                     	;# 
  3986  0F1C                     	;# 
  3987  0F1D                     	;# 
  3988  0F1E                     	;# 
  3989  0F1F                     	;# 
  3990  0F20                     	;# 
  3991  0F21                     	;# 
  3992  0F22                     	;# 
  3993  0F23                     	;# 
  3994  0F24                     	;# 
  3995  0F25                     	;# 
  3996  0F26                     	;# 
  3997  0F27                     	;# 
  3998  0F28                     	;# 
  3999  0F29                     	;# 
  4000  0F2A                     	;# 
  4001  0F2B                     	;# 
  4002  0F2C                     	;# 
  4003  0F2D                     	;# 
  4004  0F2E                     	;# 
  4005  0F2F                     	;# 
  4006  0F30                     	;# 
  4007  0F31                     	;# 
  4008  0F32                     	;# 
  4009  0F33                     	;# 
  4010  0F34                     	;# 
  4011  0F35                     	;# 
  4012  0F36                     	;# 
  4013  0F37                     	;# 
  4014  0FE4                     	;# 
  4015  0FE5                     	;# 
  4016  0FE6                     	;# 
  4017  0FE7                     	;# 
  4018  0FE8                     	;# 
  4019  0FE9                     	;# 
  4020  0FEA                     	;# 
  4021  0FEB                     	;# 
  4022  0FED                     	;# 
  4023  0FEE                     	;# 
  4024  0FEF                     	;# 
  4025  0000                     	;# 
  4026  0001                     	;# 
  4027  0002                     	;# 
  4028  0003                     	;# 
  4029  0004                     	;# 
  4030  0005                     	;# 
  4031  0006                     	;# 
  4032  0007                     	;# 
  4033  0008                     	;# 
  4034  0009                     	;# 
  4035  000A                     	;# 
  4036  000B                     	;# 
  4037  000C                     	;# 
  4038  000D                     	;# 
  4039  000E                     	;# 
  4040  0010                     	;# 
  4041  0011                     	;# 
  4042  0012                     	;# 
  4043  0013                     	;# 
  4044  0014                     	;# 
  4045  0015                     	;# 
  4046  0016                     	;# 
  4047  0017                     	;# 
  4048  0018                     	;# 
  4049  0019                     	;# 
  4050  0019                     	;# 
  4051  001A                     	;# 
  4052  001B                     	;# 
  4053  001C                     	;# 
  4054  001D                     	;# 
  4055  001E                     	;# 
  4056  001F                     	;# 
  4057  008C                     	;# 
  4058  008D                     	;# 
  4059  008E                     	;# 
  4060  0090                     	;# 
  4061  0091                     	;# 
  4062  0092                     	;# 
  4063  0093                     	;# 
  4064  0094                     	;# 
  4065  0097                     	;# 
  4066  009B                     	;# 
  4067  009B                     	;# 
  4068  009C                     	;# 
  4069  009D                     	;# 
  4070  009E                     	;# 
  4071  009F                     	;# 
  4072  010C                     	;# 
  4073  010D                     	;# 
  4074  010E                     	;# 
  4075  0111                     	;# 
  4076  0112                     	;# 
  4077  0113                     	;# 
  4078  0114                     	;# 
  4079  0115                     	;# 
  4080  0116                     	;# 
  4081  0117                     	;# 
  4082  0118                     	;# 
  4083  0119                     	;# 
  4084  018C                     	;# 
  4085  018D                     	;# 
  4086  018E                     	;# 
  4087  0197                     	;# 
  4088  0199                     	;# 
  4089  0199                     	;# 
  4090  0199                     	;# 
  4091  019A                     	;# 
  4092  019A                     	;# 
  4093  019A                     	;# 
  4094  019B                     	;# 
  4095  019B                     	;# 
  4096  019B                     	;# 
  4097  019B                     	;# 
  4098  019B                     	;# 
  4099  019C                     	;# 
  4100  019C                     	;# 
  4101  019C                     	;# 
  4102  019D                     	;# 
  4103  019D                     	;# 
  4104  019D                     	;# 
  4105  019E                     	;# 
  4106  019E                     	;# 
  4107  019E                     	;# 
  4108  019F                     	;# 
  4109  019F                     	;# 
  4110  019F                     	;# 
  4111  019F                     	;# 
  4112  019F                     	;# 
  4113  020C                     	;# 
  4114  020D                     	;# 
  4115  020E                     	;# 
  4116  0211                     	;# 
  4117  0211                     	;# 
  4118  0212                     	;# 
  4119  0212                     	;# 
  4120  0213                     	;# 
  4121  0213                     	;# 
  4122  0214                     	;# 
  4123  0214                     	;# 
  4124  0215                     	;# 
  4125  0215                     	;# 
  4126  0215                     	;# 
  4127  0215                     	;# 
  4128  0216                     	;# 
  4129  0216                     	;# 
  4130  0217                     	;# 
  4131  0217                     	;# 
  4132  028C                     	;# 
  4133  028D                     	;# 
  4134  028E                     	;# 
  4135  0291                     	;# 
  4136  0291                     	;# 
  4137  0292                     	;# 
  4138  0293                     	;# 
  4139  0294                     	;# 
  4140  0295                     	;# 
  4141  0295                     	;# 
  4142  0296                     	;# 
  4143  0297                     	;# 
  4144  0298                     	;# 
  4145  029F                     	;# 
  4146  030C                     	;# 
  4147  030D                     	;# 
  4148  030E                     	;# 
  4149  0311                     	;# 
  4150  0311                     	;# 
  4151  0312                     	;# 
  4152  0313                     	;# 
  4153  0314                     	;# 
  4154  0315                     	;# 
  4155  0315                     	;# 
  4156  0316                     	;# 
  4157  0317                     	;# 
  4158  0318                     	;# 
  4159  038C                     	;# 
  4160  038D                     	;# 
  4161  038E                     	;# 
  4162  0391                     	;# 
  4163  0392                     	;# 
  4164  0393                     	;# 
  4165  0394                     	;# 
  4166  0395                     	;# 
  4167  0396                     	;# 
  4168  0397                     	;# 
  4169  0398                     	;# 
  4170  0399                     	;# 
  4171  039A                     	;# 
  4172  039C                     	;# 
  4173  039D                     	;# 
  4174  039E                     	;# 
  4175  039F                     	;# 
  4176  040C                     	;# 
  4177  040D                     	;# 
  4178  040E                     	;# 
  4179  0411                     	;# 
  4180  0411                     	;# 
  4181  0412                     	;# 
  4182  0413                     	;# 
  4183  0414                     	;# 
  4184  0415                     	;# 
  4185  0416                     	;# 
  4186  0417                     	;# 
  4187  0418                     	;# 
  4188  0418                     	;# 
  4189  0419                     	;# 
  4190  041A                     	;# 
  4191  041B                     	;# 
  4192  041C                     	;# 
  4193  041D                     	;# 
  4194  041E                     	;# 
  4195  041F                     	;# 
  4196  048C                     	;# 
  4197  048D                     	;# 
  4198  048E                     	;# 
  4199  0498                     	;# 
  4200  0498                     	;# 
  4201  0499                     	;# 
  4202  049A                     	;# 
  4203  049B                     	;# 
  4204  049B                     	;# 
  4205  049C                     	;# 
  4206  049D                     	;# 
  4207  049E                     	;# 
  4208  049F                     	;# 
  4209  0617                     	;# 
  4210  0618                     	;# 
  4211  0619                     	;# 
  4212  0619                     	;# 
  4213  061A                     	;# 
  4214  061B                     	;# 
  4215  061C                     	;# 
  4216  061C                     	;# 
  4217  061F                     	;# 
  4218  0691                     	;# 
  4219  0692                     	;# 
  4220  0693                     	;# 
  4221  0694                     	;# 
  4222  0695                     	;# 
  4223  0696                     	;# 
  4224  0697                     	;# 
  4225  0698                     	;# 
  4226  0699                     	;# 
  4227  0711                     	;# 
  4228  0712                     	;# 
  4229  0713                     	;# 
  4230  0714                     	;# 
  4231  0715                     	;# 
  4232  0716                     	;# 
  4233  0717                     	;# 
  4234  0718                     	;# 
  4235  0719                     	;# 
  4236  0891                     	;# 
  4237  0891                     	;# 
  4238  0892                     	;# 
  4239  0893                     	;# 
  4240  0893                     	;# 
  4241  0894                     	;# 
  4242  0895                     	;# 
  4243  0896                     	;# 
  4244  089B                     	;# 
  4245  0911                     	;# 
  4246  0912                     	;# 
  4247  0913                     	;# 
  4248  0914                     	;# 
  4249  0915                     	;# 
  4250  0916                     	;# 
  4251  0918                     	;# 
  4252  0919                     	;# 
  4253  091A                     	;# 
  4254  091B                     	;# 
  4255  091C                     	;# 
  4256  091D                     	;# 
  4257  091E                     	;# 
  4258  091F                     	;# 
  4259  0E0F                     	;# 
  4260  0E10                     	;# 
  4261  0E11                     	;# 
  4262  0E12                     	;# 
  4263  0E13                     	;# 
  4264  0E14                     	;# 
  4265  0E15                     	;# 
  4266  0E16                     	;# 
  4267  0E17                     	;# 
  4268  0E18                     	;# 
  4269  0E19                     	;# 
  4270  0E1A                     	;# 
  4271  0E1B                     	;# 
  4272  0E1C                     	;# 
  4273  0E20                     	;# 
  4274  0E21                     	;# 
  4275  0E22                     	;# 
  4276  0E24                     	;# 
  4277  0E25                     	;# 
  4278  0E28                     	;# 
  4279  0E29                     	;# 
  4280  0E2A                     	;# 
  4281  0E2B                     	;# 
  4282  0E2C                     	;# 
  4283  0E2D                     	;# 
  4284  0E2E                     	;# 
  4285  0E2F                     	;# 
  4286  0E90                     	;# 
  4287  0E91                     	;# 
  4288  0E92                     	;# 
  4289  0E94                     	;# 
  4290  0E95                     	;# 
  4291  0E9C                     	;# 
  4292  0E9D                     	;# 
  4293  0E9E                     	;# 
  4294  0E9F                     	;# 
  4295  0EA0                     	;# 
  4296  0EA1                     	;# 
  4297  0EA2                     	;# 
  4298  0EA3                     	;# 
  4299  0EA4                     	;# 
  4300  0EA5                     	;# 
  4301  0EA6                     	;# 
  4302  0EA7                     	;# 
  4303  0F0F                     	;# 
  4304  0F10                     	;# 
  4305  0F11                     	;# 
  4306  0F12                     	;# 
  4307  0F13                     	;# 
  4308  0F14                     	;# 
  4309  0F15                     	;# 
  4310  0F16                     	;# 
  4311  0F17                     	;# 
  4312  0F18                     	;# 
  4313  0F19                     	;# 
  4314  0F1A                     	;# 
  4315  0F1B                     	;# 
  4316  0F1C                     	;# 
  4317  0F1D                     	;# 
  4318  0F1E                     	;# 
  4319  0F1F                     	;# 
  4320  0F20                     	;# 
  4321  0F21                     	;# 
  4322  0F22                     	;# 
  4323  0F23                     	;# 
  4324  0F24                     	;# 
  4325  0F25                     	;# 
  4326  0F26                     	;# 
  4327  0F27                     	;# 
  4328  0F28                     	;# 
  4329  0F29                     	;# 
  4330  0F2A                     	;# 
  4331  0F2B                     	;# 
  4332  0F2C                     	;# 
  4333  0F2D                     	;# 
  4334  0F2E                     	;# 
  4335  0F2F                     	;# 
  4336  0F30                     	;# 
  4337  0F31                     	;# 
  4338  0F32                     	;# 
  4339  0F33                     	;# 
  4340  0F34                     	;# 
  4341  0F35                     	;# 
  4342  0F36                     	;# 
  4343  0F37                     	;# 
  4344  0FE4                     	;# 
  4345  0FE5                     	;# 
  4346  0FE6                     	;# 
  4347  0FE7                     	;# 
  4348  0FE8                     	;# 
  4349  0FE9                     	;# 
  4350  0FEA                     	;# 
  4351  0FEB                     	;# 
  4352  0FED                     	;# 
  4353  0FEE                     	;# 
  4354  0FEF                     	;# 
  4355  0000                     	;# 
  4356  0001                     	;# 
  4357  0002                     	;# 
  4358  0003                     	;# 
  4359  0004                     	;# 
  4360  0005                     	;# 
  4361  0006                     	;# 
  4362  0007                     	;# 
  4363  0008                     	;# 
  4364  0009                     	;# 
  4365  000A                     	;# 
  4366  000B                     	;# 
  4367  000C                     	;# 
  4368  000D                     	;# 
  4369  000E                     	;# 
  4370  0010                     	;# 
  4371  0011                     	;# 
  4372  0012                     	;# 
  4373  0013                     	;# 
  4374  0014                     	;# 
  4375  0015                     	;# 
  4376  0016                     	;# 
  4377  0017                     	;# 
  4378  0018                     	;# 
  4379  0019                     	;# 
  4380  0019                     	;# 
  4381  001A                     	;# 
  4382  001B                     	;# 
  4383  001C                     	;# 
  4384  001D                     	;# 
  4385  001E                     	;# 
  4386  001F                     	;# 
  4387  008C                     	;# 
  4388  008D                     	;# 
  4389  008E                     	;# 
  4390  0090                     	;# 
  4391  0091                     	;# 
  4392  0092                     	;# 
  4393  0093                     	;# 
  4394  0094                     	;# 
  4395  0097                     	;# 
  4396  009B                     	;# 
  4397  009B                     	;# 
  4398  009C                     	;# 
  4399  009D                     	;# 
  4400  009E                     	;# 
  4401  009F                     	;# 
  4402  010C                     	;# 
  4403  010D                     	;# 
  4404  010E                     	;# 
  4405  0111                     	;# 
  4406  0112                     	;# 
  4407  0113                     	;# 
  4408  0114                     	;# 
  4409  0115                     	;# 
  4410  0116                     	;# 
  4411  0117                     	;# 
  4412  0118                     	;# 
  4413  0119                     	;# 
  4414  018C                     	;# 
  4415  018D                     	;# 
  4416  018E                     	;# 
  4417  0197                     	;# 
  4418  0199                     	;# 
  4419  0199                     	;# 
  4420  0199                     	;# 
  4421  019A                     	;# 
  4422  019A                     	;# 
  4423  019A                     	;# 
  4424  019B                     	;# 
  4425  019B                     	;# 
  4426  019B                     	;# 
  4427  019B                     	;# 
  4428  019B                     	;# 
  4429  019C                     	;# 
  4430  019C                     	;# 
  4431  019C                     	;# 
  4432  019D                     	;# 
  4433  019D                     	;# 
  4434  019D                     	;# 
  4435  019E                     	;# 
  4436  019E                     	;# 
  4437  019E                     	;# 
  4438  019F                     	;# 
  4439  019F                     	;# 
  4440  019F                     	;# 
  4441  019F                     	;# 
  4442  019F                     	;# 
  4443  020C                     	;# 
  4444  020D                     	;# 
  4445  020E                     	;# 
  4446  0211                     	;# 
  4447  0211                     	;# 
  4448  0212                     	;# 
  4449  0212                     	;# 
  4450  0213                     	;# 
  4451  0213                     	;# 
  4452  0214                     	;# 
  4453  0214                     	;# 
  4454  0215                     	;# 
  4455  0215                     	;# 
  4456  0215                     	;# 
  4457  0215                     	;# 
  4458  0216                     	;# 
  4459  0216                     	;# 
  4460  0217                     	;# 
  4461  0217                     	;# 
  4462  028C                     	;# 
  4463  028D                     	;# 
  4464  028E                     	;# 
  4465  0291                     	;# 
  4466  0291                     	;# 
  4467  0292                     	;# 
  4468  0293                     	;# 
  4469  0294                     	;# 
  4470  0295                     	;# 
  4471  0295                     	;# 
  4472  0296                     	;# 
  4473  0297                     	;# 
  4474  0298                     	;# 
  4475  029F                     	;# 
  4476  030C                     	;# 
  4477  030D                     	;# 
  4478  030E                     	;# 
  4479  0311                     	;# 
  4480  0311                     	;# 
  4481  0312                     	;# 
  4482  0313                     	;# 
  4483  0314                     	;# 
  4484  0315                     	;# 
  4485  0315                     	;# 
  4486  0316                     	;# 
  4487  0317                     	;# 
  4488  0318                     	;# 
  4489  038C                     	;# 
  4490  038D                     	;# 
  4491  038E                     	;# 
  4492  0391                     	;# 
  4493  0392                     	;# 
  4494  0393                     	;# 
  4495  0394                     	;# 
  4496  0395                     	;# 
  4497  0396                     	;# 
  4498  0397                     	;# 
  4499  0398                     	;# 
  4500  0399                     	;# 
  4501  039A                     	;# 
  4502  039C                     	;# 
  4503  039D                     	;# 
  4504  039E                     	;# 
  4505  039F                     	;# 
  4506  040C                     	;# 
  4507  040D                     	;# 
  4508  040E                     	;# 
  4509  0411                     	;# 
  4510  0411                     	;# 
  4511  0412                     	;# 
  4512  0413                     	;# 
  4513  0414                     	;# 
  4514  0415                     	;# 
  4515  0416                     	;# 
  4516  0417                     	;# 
  4517  0418                     	;# 
  4518  0418                     	;# 
  4519  0419                     	;# 
  4520  041A                     	;# 
  4521  041B                     	;# 
  4522  041C                     	;# 
  4523  041D                     	;# 
  4524  041E                     	;# 
  4525  041F                     	;# 
  4526  048C                     	;# 
  4527  048D                     	;# 
  4528  048E                     	;# 
  4529  0498                     	;# 
  4530  0498                     	;# 
  4531  0499                     	;# 
  4532  049A                     	;# 
  4533  049B                     	;# 
  4534  049B                     	;# 
  4535  049C                     	;# 
  4536  049D                     	;# 
  4537  049E                     	;# 
  4538  049F                     	;# 
  4539  0617                     	;# 
  4540  0618                     	;# 
  4541  0619                     	;# 
  4542  0619                     	;# 
  4543  061A                     	;# 
  4544  061B                     	;# 
  4545  061C                     	;# 
  4546  061C                     	;# 
  4547  061F                     	;# 
  4548  0691                     	;# 
  4549  0692                     	;# 
  4550  0693                     	;# 
  4551  0694                     	;# 
  4552  0695                     	;# 
  4553  0696                     	;# 
  4554  0697                     	;# 
  4555  0698                     	;# 
  4556  0699                     	;# 
  4557  0711                     	;# 
  4558  0712                     	;# 
  4559  0713                     	;# 
  4560  0714                     	;# 
  4561  0715                     	;# 
  4562  0716                     	;# 
  4563  0717                     	;# 
  4564  0718                     	;# 
  4565  0719                     	;# 
  4566  0891                     	;# 
  4567  0891                     	;# 
  4568  0892                     	;# 
  4569  0893                     	;# 
  4570  0893                     	;# 
  4571  0894                     	;# 
  4572  0895                     	;# 
  4573  0896                     	;# 
  4574  089B                     	;# 
  4575  0911                     	;# 
  4576  0912                     	;# 
  4577  0913                     	;# 
  4578  0914                     	;# 
  4579  0915                     	;# 
  4580  0916                     	;# 
  4581  0918                     	;# 
  4582  0919                     	;# 
  4583  091A                     	;# 
  4584  091B                     	;# 
  4585  091C                     	;# 
  4586  091D                     	;# 
  4587  091E                     	;# 
  4588  091F                     	;# 
  4589  0E0F                     	;# 
  4590  0E10                     	;# 
  4591  0E11                     	;# 
  4592  0E12                     	;# 
  4593  0E13                     	;# 
  4594  0E14                     	;# 
  4595  0E15                     	;# 
  4596  0E16                     	;# 
  4597  0E17                     	;# 
  4598  0E18                     	;# 
  4599  0E19                     	;# 
  4600  0E1A                     	;# 
  4601  0E1B                     	;# 
  4602  0E1C                     	;# 
  4603  0E20                     	;# 
  4604  0E21                     	;# 
  4605  0E22                     	;# 
  4606  0E24                     	;# 
  4607  0E25                     	;# 
  4608  0E28                     	;# 
  4609  0E29                     	;# 
  4610  0E2A                     	;# 
  4611  0E2B                     	;# 
  4612  0E2C                     	;# 
  4613  0E2D                     	;# 
  4614  0E2E                     	;# 
  4615  0E2F                     	;# 
  4616  0E90                     	;# 
  4617  0E91                     	;# 
  4618  0E92                     	;# 
  4619  0E94                     	;# 
  4620  0E95                     	;# 
  4621  0E9C                     	;# 
  4622  0E9D                     	;# 
  4623  0E9E                     	;# 
  4624  0E9F                     	;# 
  4625  0EA0                     	;# 
  4626  0EA1                     	;# 
  4627  0EA2                     	;# 
  4628  0EA3                     	;# 
  4629  0EA4                     	;# 
  4630  0EA5                     	;# 
  4631  0EA6                     	;# 
  4632  0EA7                     	;# 
  4633  0F0F                     	;# 
  4634  0F10                     	;# 
  4635  0F11                     	;# 
  4636  0F12                     	;# 
  4637  0F13                     	;# 
  4638  0F14                     	;# 
  4639  0F15                     	;# 
  4640  0F16                     	;# 
  4641  0F17                     	;# 
  4642  0F18                     	;# 
  4643  0F19                     	;# 
  4644  0F1A                     	;# 
  4645  0F1B                     	;# 
  4646  0F1C                     	;# 
  4647  0F1D                     	;# 
  4648  0F1E                     	;# 
  4649  0F1F                     	;# 
  4650  0F20                     	;# 
  4651  0F21                     	;# 
  4652  0F22                     	;# 
  4653  0F23                     	;# 
  4654  0F24                     	;# 
  4655  0F25                     	;# 
  4656  0F26                     	;# 
  4657  0F27                     	;# 
  4658  0F28                     	;# 
  4659  0F29                     	;# 
  4660  0F2A                     	;# 
  4661  0F2B                     	;# 
  4662  0F2C                     	;# 
  4663  0F2D                     	;# 
  4664  0F2E                     	;# 
  4665  0F2F                     	;# 
  4666  0F30                     	;# 
  4667  0F31                     	;# 
  4668  0F32                     	;# 
  4669  0F33                     	;# 
  4670  0F34                     	;# 
  4671  0F35                     	;# 
  4672  0F36                     	;# 
  4673  0F37                     	;# 
  4674  0FE4                     	;# 
  4675  0FE5                     	;# 
  4676  0FE6                     	;# 
  4677  0FE7                     	;# 
  4678  0FE8                     	;# 
  4679  0FE9                     	;# 
  4680  0FEA                     	;# 
  4681  0FEB                     	;# 
  4682  0FED                     	;# 
  4683  0FEE                     	;# 
  4684  0FEF                     	;# 
  4685                           
  4686                           	psect	idataCOMMON
  4687  07FF                     __pidataCOMMON:	
  4688                           
  4689                           ;initializer for _LED_Color
  4690  07FF  3401               	retlw	1
  4691                           
  4692                           	psect	idataBANK0
  4693  0D56                     __pidataBANK0:	
  4694                           
  4695                           ;initializer for _ChannelNumberChar
  4696  0D56  3478               	retlw	120
  4697                           
  4698                           ;initializer for _RxFrameType
  4699  0D57  3472               	retlw	114
  4700                           
  4701                           ;initializer for _SetLEDcolor
  4702  0D58  3452               	retlw	82
  4703  000B                     _INTCONbits	set	11
  4704  0010                     _PIR0bits	set	16
  4705  0011                     _PIR1bits	set	17
  4706  001E                     _PR2	set	30
  4707  0017                     _T0CON0	set	23
  4708  0017                     _T0CON0bits	set	23
  4709  0018                     _T0CON1	set	24
  4710  001F                     _T2CON	set	31
  4711  001F                     _T2CONbits	set	31
  4712  0016                     _TMR0H	set	22
  4713  0015                     _TMR0L	set	21
  4714  001D                     _TMR2	set	29
  4715  005F                     _GIE	set	95
  4716  009F                     _ADACT	set	159
  4717  009D                     _ADCON0	set	157
  4718  009D                     _ADCON0bits	set	157
  4719  009E                     _ADCON1	set	158
  4720  009C                     _ADRESH	set	156
  4721  009B                     _ADRESL	set	155
  4722  0090                     _PIE0bits	set	144
  4723  008C                     _TRISA	set	140
  4724  008D                     _TRISB	set	141
  4725  008E                     _TRISC	set	142
  4726  010C                     _LATA	set	268
  4727  010D                     _LATB	set	269
  4728  010E                     _LATC	set	270
  4729  086E                     _LATB6	set	2158
  4730  0870                     _LATC0	set	2160
  4731  0871                     _LATC1	set	2161
  4732  0872                     _LATC2	set	2162
  4733  0876                     _LATC6	set	2166
  4734  018C                     _ANSELA	set	396
  4735  018D                     _ANSELB	set	397
  4736  018E                     _ANSELC	set	398
  4737  019F                     _BAUD1CON	set	415
  4738  0199                     _RC1REG	set	409
  4739  019D                     _RC1STA	set	413
  4740  019D                     _RC1STAbits	set	413
  4741  019C                     _SP1BRGH	set	412
  4742  019B                     _SP1BRGL	set	411
  4743  019A                     _TX1REG	set	410
  4744  019E                     _TX1STA	set	414
  4745  020C                     _WPUA	set	524
  4746  020D                     _WPUB	set	525
  4747  020E                     _WPUC	set	526
  4748  0619                     _PWM5CON	set	1561
  4749  0618                     _PWM5DCH	set	1560
  4750  0617                     _PWM5DCL	set	1559
  4751  061F                     _PWMTMRSbits	set	1567
  4752  0892                     _NVMADRH	set	2194
  4753  0891                     _NVMADRL	set	2193
  4754  0895                     _NVMCON1bits	set	2197
  4755  0896                     _NVMCON2	set	2198
  4756  0894                     _NVMDATH	set	2196
  4757  0893                     _NVMDATL	set	2195
  4758  0919                     _OSCCON1	set	2329
  4759  091B                     _OSCCON3	set	2331
  4760  091D                     _OSCEN	set	2333
  4761  091F                     _OSCFRQ	set	2335
  4762  091E                     _OSCTUNE	set	2334
  4763  0E0F                     _PPSLOCK	set	3599
  4764  0E0F                     _PPSLOCKbits	set	3599
  4765  0E24                     _RXPPSbits	set	3620
  4766  0E9D                     _RB5PPSbits	set	3741
  4767  0EA3                     _RC3PPSbits	set	3747
  4768                           
  4769                           ; #config settings
  4770  0000                     
  4771                           	psect	cinit
  4772  0018                     start_initialization:	
  4773  0018                     __initialization:	
  4774                           
  4775                           ; Clear objects allocated to COMMON
  4776  0018  01FA               	clrf	__pbssCOMMON& (0+127)
  4777                           
  4778                           ; Clear objects allocated to BANK0
  4779  0019  3020               	movlw	low __pbssBANK0
  4780  001A  0084               	movwf	4
  4781  001B  3000               	movlw	high __pbssBANK0
  4782  001C  0085               	movwf	5
  4783  001D  3038               	movlw	56
  4784  001E  318D  256C  3180   	fcall	clear_ram0
  4785                           
  4786                           ; Clear objects allocated to BANK1
  4787  0021  30A0               	movlw	low __pbssBANK1
  4788  0022  0084               	movwf	4
  4789  0023  3000               	movlw	high __pbssBANK1
  4790  0024  0085               	movwf	5
  4791  0025  302A               	movlw	42
  4792  0026  318D  256C  3180   	fcall	clear_ram0
  4793                           
  4794                           ; Initialize objects allocated to COMMON
  4795  0029  3187  27FF  3180   	fcall	__pidataCOMMON	;fetch initializer
  4796  002C  00FB               	movwf	__pdataCOMMON& (0+127)
  4797                           
  4798                           ; Initialize objects allocated to BANK0
  4799  002D  318D  2556  3180   	fcall	__pidataBANK0	;fetch initializer
  4800  0030  00E6               	movwf	__pdataBANK0& (0+127)
  4801  0031  318D  2557  3180   	fcall	__pidataBANK0+1	;fetch initializer
  4802  0034  00E7               	movwf	(__pdataBANK0+1)& (0+127)
  4803  0035  318D  2558         	fcall	__pidataBANK0+2	;fetch initializer
  4804  0037  00E8               	movwf	(__pdataBANK0+2)& (0+127)
  4805  0038                     end_of_initialization:	
  4806                           ;End of C runtime variable initialization code
  4807                           
  4808  0038                     __end_of__initialization:	
  4809  0038  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4810  0039  0020               	movlb	0
  4811  003A  3186  2E72         	ljmp	_main	;jump to C main() function
  4812                           
  4813                           	psect	bssCOMMON
  4814  007A                     __pbssCOMMON:	
  4815  007A                     _Led_ON:	
  4816  007A                     	ds	1
  4817                           
  4818                           	psect	dataCOMMON
  4819  007B                     __pdataCOMMON:	
  4820  007B                     _LED_Color:	
  4821  007B                     	ds	1
  4822                           
  4823                           	psect	bssBANK0
  4824  0020                     __pbssBANK0:	
  4825  0020                     _AnalogSenseRaw:	
  4826  0020                     	ds	2
  4827  0022                     _Bbeep_tickPoint:	
  4828  0022                     	ds	2
  4829  0024                     _Bbeep_tickPointMsec:	
  4830  0024                     	ds	2
  4831  0026                     _Blick_tickPoint:	
  4832  0026                     	ds	2
  4833  0028                     _Blick_tickPointMsec:	
  4834  0028                     	ds	2
  4835  002A                     _Buzzer_1msec_Cnt:	
  4836  002A                     	ds	2
  4837  002C                     _Buzzer_Duration_1msec:	
  4838  002C                     	ds	2
  4839  002E                     _DelayMsecCount:	
  4840  002E                     	ds	2
  4841  0030                     _LED_msec_Cnt:	
  4842  0030                     	ds	2
  4843  0032                     _LedON_Duration_msec:	
  4844  0032                     	ds	2
  4845  0034                     _Msec10_cnt:	
  4846  0034                     	ds	2
  4847  0036                     _Msec_cnt:	
  4848  0036                     	ds	2
  4849  0038                     _ToolTemp_adc:	
  4850  0038                     	ds	2
  4851  003A                     _eepromReadAddr:	
  4852  003A                     	ds	2
  4853  003C                     _eepromWriteAddr:	
  4854  003C                     	ds	2
  4855  003E                     _Buzzer_ON:	
  4856  003E                     	ds	1
  4857  003F                     _ChannelNumber:	
  4858  003F                     	ds	1
  4859  0040                     _CommandError:	
  4860  0040                     	ds	1
  4861  0041                     _Fan_ON:	
  4862  0041                     	ds	1
  4863  0042                     _LED_Sec_Cnt:	
  4864  0042                     	ds	1
  4865  0043                     _LedON_Duration_sec:	
  4866  0043                     	ds	1
  4867  0044                     _RXChecksum:	
  4868  0044                     	ds	1
  4869  0045                     _RxFrameDataLen:	
  4870  0045                     	ds	1
  4871  0046                     _RxFrameDataLenCnt:	
  4872  0046                     	ds	1
  4873  0047                     _RxFrameDecodeState:	
  4874  0047                     	ds	1
  4875  0048                     _SetBuzzDurationSec:	
  4876  0048                     	ds	1
  4877  0049                     _SetBuzzNumBeep:	
  4878  0049                     	ds	1
  4879  004A                     _SetFANOnDurationSec:	
  4880  004A                     	ds	1
  4881  004B                     _SetLedONDurationSec:	
  4882  004B                     	ds	1
  4883  004C                     _SetLedONNumBlink:	
  4884  004C                     	ds	1
  4885  004D                     _eepromReadLen:	
  4886  004D                     	ds	1
  4887  004E                     _eepromWriteLen:	
  4888  004E                     	ds	1
  4889  004F                     _highByteChar:	
  4890  004F                     	ds	1
  4891  0050                     _i:	
  4892  0050                     	ds	1
  4893  0051                     _lowByteChar:	
  4894  0051                     	ds	1
  4895  0052                     _txPacketlength:	
  4896  0052                     	ds	1
  4897  0053                     _txRS485flag:	
  4898  0053                     	ds	1
  4899  0054                     _AnalogSenseRawByte:	
  4900  0054                     	ds	2
  4901  0056                     _Checksum:	
  4902  0056                     	ds	1
  4903  0057                     _DigitalIN:	
  4904  0057                     	ds	1
  4905                           
  4906                           	psect	dataBANK0
  4907  0066                     __pdataBANK0:	
  4908  0066                     _ChannelNumberChar:	
  4909  0066                     	ds	1
  4910  0067                     _RxFrameType:	
  4911  0067                     	ds	1
  4912  0068                     _SetLEDcolor:	
  4913  0068                     	ds	1
  4914                           
  4915                           	psect	bssBANK1
  4916  00A0                     __pbssBANK1:	
  4917  00A0                     _eepromWriteData:	
  4918  00A0                     	ds	16
  4919  00B0                     _byteIN:	
  4920  00B0                     	ds	10
  4921  00BA                     _eepromReadData:	
  4922  00BA                     	ds	16
  4923                           
  4924                           	psect	clrtext
  4925  0D6C                     clear_ram0:	
  4926                           ;	Called with FSR0 containing the base address, and
  4927                           ;	WREG with the size to clear
  4928                           
  4929  0D6C  0064               	clrwdt	;clear the watchdog before getting into this loop
  4930  0D6D                     clrloop0:	
  4931  0D6D  0180               	clrf	0	;clear RAM location pointed to by FSR
  4932  0D6E  3101               	addfsr 0,1
  4933  0D6F  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  4934  0D70  2D6D               	goto	clrloop0	;have we reached the end yet?
  4935  0D71  3400               	retlw	0	;all done for this memory range, return
  4936                           
  4937                           	psect	cstackCOMMON
  4938  0070                     __pcstackCOMMON:	
  4939  0070                     ?_TMR2_StartTimer:	
  4940  0070                     ?_PIN_MANAGER_Initialize:	
  4941                           ; 1 bytes @ 0x0
  4942                           
  4943  0070                     ?_OSCILLATOR_Initialize:	
  4944                           ; 1 bytes @ 0x0
  4945                           
  4946  0070                     ?_TMR0_Initialize:	
  4947                           ; 1 bytes @ 0x0
  4948                           
  4949  0070                     ?_EUSART_Initialize:	
  4950                           ; 1 bytes @ 0x0
  4951                           
  4952  0070                     ?_TMR0_StartTimer:	
  4953                           ; 1 bytes @ 0x0
  4954                           
  4955  0070                     ?_TMR0_CallBack:	
  4956                           ; 1 bytes @ 0x0
  4957                           
  4958  0070                     ?_One_msec_task:	
  4959                           ; 1 bytes @ 0x0
  4960                           
  4961  0070                     ?_LedONStatusBusy:	
  4962                           ; 1 bytes @ 0x0
  4963                           
  4964  0070                     ?_FanStartConfig:	
  4965                           ; 1 bytes @ 0x0
  4966                           
  4967  0070                     ?_ProtocolManager:	
  4968                           ; 1 bytes @ 0x0
  4969                           
  4970  0070                     ?_Buzzer_Control_msec:	
  4971                           ; 1 bytes @ 0x0
  4972                           
  4973  0070                     ?_LedON_Control_msec:	
  4974                           ; 1 bytes @ 0x0
  4975                           
  4976  0070                     ??_LedON_Control_msec:	
  4977                           ; 1 bytes @ 0x0
  4978                           
  4979  0070                     ?_One_sec_task:	
  4980                           ; 1 bytes @ 0x0
  4981                           
  4982  0070                     ?_Fan_Control_Sec:	
  4983                           ; 1 bytes @ 0x0
  4984                           
  4985  0070                     ??_Fan_Control_Sec:	
  4986                           ; 1 bytes @ 0x0
  4987                           
  4988  0070                     ?_PackageTxResponseNACK:	
  4989                           ; 1 bytes @ 0x0
  4990                           
  4991  0070                     ?_PackageTxResponseACK:	
  4992                           ; 1 bytes @ 0x0
  4993                           
  4994  0070                     ?_PWM5_Initialize:	
  4995                           ; 1 bytes @ 0x0
  4996                           
  4997  0070                     ?_TMR2_Initialize:	
  4998                           ; 1 bytes @ 0x0
  4999                           
  5000  0070                     ?_TMR2_ToggleTimer:	
  5001                           ; 1 bytes @ 0x0
  5002                           
  5003  0070                     ??_TMR2_ToggleTimer:	
  5004                           ; 1 bytes @ 0x0
  5005                           
  5006  0070                     ?_TMR2_StopTimer:	
  5007                           ; 1 bytes @ 0x0
  5008                           
  5009  0070                     ??_TMR2_StopTimer:	
  5010                           ; 1 bytes @ 0x0
  5011                           
  5012  0070                     ?_TMR2_WriteTimer:	
  5013                           ; 1 bytes @ 0x0
  5014                           
  5015  0070                     ?_ADC_Initialize:	
  5016                           ; 1 bytes @ 0x0
  5017                           
  5018  0070                     ?_SYSTEM_Initialize:	
  5019                           ; 1 bytes @ 0x0
  5020                           
  5021  0070                     ?_TMR0_ISR:	
  5022                           ; 1 bytes @ 0x0
  5023                           
  5024  0070                     ?_INTERRUPT_InterruptManager:	
  5025                           ; 1 bytes @ 0x0
  5026                           
  5027  0070                     ?_EUSART_Read:	
  5028                           ; 1 bytes @ 0x0
  5029                           
  5030  0070                     ?_EUSART_Write:	
  5031                           ; 1 bytes @ 0x0
  5032                           
  5033  0070                     ?_EUSART_RX_Disable:	
  5034                           ; 1 bytes @ 0x0
  5035                           
  5036  0070                     ?_EUSART_RX_Enable:	
  5037                           ; 1 bytes @ 0x0
  5038                           
  5039  0070                     ?_EUSART_TX_Completed:	
  5040                           ; 1 bytes @ 0x0
  5041                           
  5042  0070                     ?_main:	
  5043                           ; 1 bytes @ 0x0
  5044                           
  5045  0070                     ?_valtoasciichar:	
  5046                           ; 1 bytes @ 0x0
  5047                           
  5048  0070                     ?_chartovalue:	
  5049                           ; 1 bytes @ 0x0
  5050                           
  5051  0070                     ?_valuetocharHighNibble:	
  5052                           ; 1 bytes @ 0x0
  5053                           
  5054  0070                     ?_valuetocharLowNibble:	
  5055                           ; 1 bytes @ 0x0
  5056                           
  5057  0070                     ?i1_TMR2_WriteTimer:	
  5058                           ; 1 bytes @ 0x0
  5059                           
  5060  0070                     ??i1_TMR2_WriteTimer:	
  5061                           ; 1 bytes @ 0x0
  5062                           
  5063  0070                     i1TMR2_WriteTimer@timerVal:	
  5064                           ; 1 bytes @ 0x0
  5065                           
  5066                           
  5067                           ; 1 bytes @ 0x0
  5068  0070                     	ds	1
  5069  0071                     ??_TMR0_CallBack:	
  5070  0071                     ??_One_msec_task:	
  5071                           ; 1 bytes @ 0x1
  5072                           
  5073  0071                     ??_Buzzer_Control_msec:	
  5074                           ; 1 bytes @ 0x1
  5075                           
  5076  0071                     ??_One_sec_task:	
  5077                           ; 1 bytes @ 0x1
  5078                           
  5079  0071                     ??_TMR0_ISR:	
  5080                           ; 1 bytes @ 0x1
  5081                           
  5082  0071                     ??_INTERRUPT_InterruptManager:	
  5083                           ; 1 bytes @ 0x1
  5084                           
  5085                           
  5086                           ; 1 bytes @ 0x1
  5087  0071                     	ds	1
  5088  0072                     ??_TMR2_StartTimer:	
  5089  0072                     ??_PIN_MANAGER_Initialize:	
  5090                           ; 1 bytes @ 0x2
  5091                           
  5092  0072                     ??_OSCILLATOR_Initialize:	
  5093                           ; 1 bytes @ 0x2
  5094                           
  5095  0072                     ??_TMR0_Initialize:	
  5096                           ; 1 bytes @ 0x2
  5097                           
  5098  0072                     ??_EUSART_Initialize:	
  5099                           ; 1 bytes @ 0x2
  5100                           
  5101  0072                     ??_TMR0_StartTimer:	
  5102                           ; 1 bytes @ 0x2
  5103                           
  5104  0072                     ??_LedONStatusBusy:	
  5105                           ; 1 bytes @ 0x2
  5106                           
  5107  0072                     ??_FanStartConfig:	
  5108                           ; 1 bytes @ 0x2
  5109                           
  5110  0072                     ??_PWM5_Initialize:	
  5111                           ; 1 bytes @ 0x2
  5112                           
  5113  0072                     ??_TMR2_Initialize:	
  5114                           ; 1 bytes @ 0x2
  5115                           
  5116  0072                     ??_TMR2_WriteTimer:	
  5117                           ; 1 bytes @ 0x2
  5118                           
  5119  0072                     ??_ADC_Initialize:	
  5120                           ; 1 bytes @ 0x2
  5121                           
  5122  0072                     ?_DATAEE_WriteByte:	
  5123                           ; 1 bytes @ 0x2
  5124                           
  5125  0072                     ?_DATAEE_ReadByte:	
  5126                           ; 1 bytes @ 0x2
  5127                           
  5128  0072                     ??_EUSART_Read:	
  5129                           ; 1 bytes @ 0x2
  5130                           
  5131  0072                     ??_EUSART_Write:	
  5132                           ; 1 bytes @ 0x2
  5133                           
  5134  0072                     ??_EUSART_RX_Disable:	
  5135                           ; 1 bytes @ 0x2
  5136                           
  5137  0072                     ??_EUSART_RX_Enable:	
  5138                           ; 1 bytes @ 0x2
  5139                           
  5140  0072                     ??_EUSART_TX_Completed:	
  5141                           ; 1 bytes @ 0x2
  5142                           
  5143  0072                     ??_valtoasciichar:	
  5144                           ; 1 bytes @ 0x2
  5145                           
  5146  0072                     ??_chartovalue:	
  5147                           ; 1 bytes @ 0x2
  5148                           
  5149  0072                     ?_ADC_GetConversion:	
  5150                           ; 1 bytes @ 0x2
  5151                           
  5152  0072                     ?___wmul:	
  5153                           ; 2 bytes @ 0x2
  5154                           
  5155  0072                     ?___lwdiv:	
  5156                           ; 2 bytes @ 0x2
  5157                           
  5158  0072                     TMR2_WriteTimer@timerVal:	
  5159                           ; 2 bytes @ 0x2
  5160                           
  5161  0072                     PIN_MANAGER_Initialize@state:	
  5162                           ; 1 bytes @ 0x2
  5163                           
  5164  0072                     EUSART_Write@txData:	
  5165                           ; 1 bytes @ 0x2
  5166                           
  5167  0072                     DATAEE_WriteByte@bAdd:	
  5168                           ; 1 bytes @ 0x2
  5169                           
  5170  0072                     DATAEE_ReadByte@bAdd:	
  5171                           ; 2 bytes @ 0x2
  5172                           
  5173  0072                     ___wmul@multiplier:	
  5174                           ; 2 bytes @ 0x2
  5175                           
  5176  0072                     ___lwdiv@divisor:	
  5177                           ; 2 bytes @ 0x2
  5178                           
  5179                           
  5180                           ; 2 bytes @ 0x2
  5181  0072                     	ds	1
  5182  0073                     ??_SYSTEM_Initialize:	
  5183  0073                     FanStartConfig@FanONDurationSec:	
  5184                           ; 1 bytes @ 0x3
  5185                           
  5186  0073                     valtoasciichar@hexvalue1:	
  5187                           ; 1 bytes @ 0x3
  5188                           
  5189  0073                     chartovalue@charNibble:	
  5190                           ; 1 bytes @ 0x3
  5191                           
  5192                           
  5193                           ; 1 bytes @ 0x3
  5194  0073                     	ds	1
  5195  0074                     ??_ADC_GetConversion:	
  5196  0074                     ??_DATAEE_ReadByte:	
  5197                           ; 1 bytes @ 0x4
  5198                           
  5199  0074                     DATAEE_WriteByte@bData:	
  5200                           ; 1 bytes @ 0x4
  5201                           
  5202  0074                     valtoasciichar@hexval:	
  5203                           ; 1 bytes @ 0x4
  5204                           
  5205  0074                     chartovalue@hexval:	
  5206                           ; 1 bytes @ 0x4
  5207                           
  5208  0074                     ___wmul@multiplicand:	
  5209                           ; 1 bytes @ 0x4
  5210                           
  5211  0074                     ___lwdiv@dividend:	
  5212                           ; 2 bytes @ 0x4
  5213                           
  5214                           
  5215                           ; 2 bytes @ 0x4
  5216  0074                     	ds	1
  5217  0075                     ?_char2bytetovalue:	
  5218  0075                     ?_char1bytetovalue:	
  5219                           ; 1 bytes @ 0x5
  5220                           
  5221  0075                     ??_DATAEE_WriteByte:	
  5222                           ; 1 bytes @ 0x5
  5223                           
  5224  0075                     ??_valuetocharHighNibble:	
  5225                           ; 1 bytes @ 0x5
  5226                           
  5227  0075                     ??_valuetocharLowNibble:	
  5228                           ; 1 bytes @ 0x5
  5229                           
  5230  0075                     ADC_GetConversion@channel:	
  5231                           ; 1 bytes @ 0x5
  5232                           
  5233  0075                     DATAEE_WriteByte@GIEBitValue:	
  5234                           ; 1 bytes @ 0x5
  5235                           
  5236  0075                     char2bytetovalue@LowBchar:	
  5237                           ; 1 bytes @ 0x5
  5238                           
  5239  0075                     char1bytetovalue@cksum:	
  5240                           ; 1 bytes @ 0x5
  5241                           
  5242                           
  5243                           ; 1 bytes @ 0x5
  5244  0075                     	ds	1
  5245  0076                     ??_char1bytetovalue:	
  5246  0076                     ??___wmul:	
  5247                           ; 1 bytes @ 0x6
  5248                           
  5249  0076                     ??___lwdiv:	
  5250                           ; 1 bytes @ 0x6
  5251                           
  5252  0076                     char2bytetovalue@cksum:	
  5253                           ; 1 bytes @ 0x6
  5254                           
  5255  0076                     valuetocharLowNibble@hexvalue:	
  5256                           ; 1 bytes @ 0x6
  5257                           
  5258  0076                     ___wmul@product:	
  5259                           ; 1 bytes @ 0x6
  5260                           
  5261                           
  5262                           ; 2 bytes @ 0x6
  5263  0076                     	ds	1
  5264  0077                     ??_char2bytetovalue:	
  5265  0077                     char1bytetovalue@valuehex:	
  5266                           ; 1 bytes @ 0x7
  5267                           
  5268  0077                     valuetocharHighNibble@hexvalue:	
  5269                           ; 1 bytes @ 0x7
  5270                           
  5271  0077                     valuetocharLowNibble@hexval:	
  5272                           ; 1 bytes @ 0x7
  5273                           
  5274  0077                     ___lwdiv@counter:	
  5275                           ; 1 bytes @ 0x7
  5276                           
  5277                           
  5278                           ; 1 bytes @ 0x7
  5279  0077                     	ds	1
  5280  0078                     char1bytetovalue@LowBChar:	
  5281  0078                     valuetocharHighNibble@hexval:	
  5282                           ; 1 bytes @ 0x8
  5283                           
  5284  0078                     ___lwdiv@quotient:	
  5285                           ; 1 bytes @ 0x8
  5286                           
  5287                           
  5288                           ; 2 bytes @ 0x8
  5289  0078                     	ds	1
  5290  0079                     ??_PackageTxResponseNACK:	
  5291  0079                     ??_PackageTxResponseACK:	
  5292                           ; 1 bytes @ 0x9
  5293                           
  5294                           
  5295                           ; 1 bytes @ 0x9
  5296  0079                     	ds	1
  5297                           
  5298                           	psect	cstackBANK0
  5299  0058                     __pcstackBANK0:	
  5300  0058                     ?_BuzzerStartConfig:	
  5301  0058                     ?_LedONStartConfig:	
  5302                           ; 1 bytes @ 0x0
  5303                           
  5304  0058                     BuzzerStartConfig@BuzzNumBeep:	
  5305                           ; 1 bytes @ 0x0
  5306                           
  5307  0058                     LedONStartConfig@LedONDurationSec:	
  5308                           ; 1 bytes @ 0x0
  5309                           
  5310  0058                     char2bytetovalue@valuehex:	
  5311                           ; 1 bytes @ 0x0
  5312                           
  5313  0058                     PackageTxResponseACK@frameType:	
  5314                           ; 1 bytes @ 0x0
  5315                           
  5316  0058                     PackageTxResponseNACK@frameType:	
  5317                           ; 1 bytes @ 0x0
  5318                           
  5319                           
  5320                           ; 1 bytes @ 0x0
  5321  0058                     	ds	1
  5322  0059                     ??_BuzzerStartConfig:	
  5323  0059                     ?_PackageTxResponseData:	
  5324                           ; 1 bytes @ 0x1
  5325                           
  5326  0059                     LedONStartConfig@LedONNumBlink:	
  5327                           ; 1 bytes @ 0x1
  5328                           
  5329  0059                     char2bytetovalue@highBchar:	
  5330                           ; 1 bytes @ 0x1
  5331                           
  5332  0059                     PackageTxResponseData@data:	
  5333                           ; 1 bytes @ 0x1
  5334                           
  5335                           
  5336                           ; 1 bytes @ 0x1
  5337  0059                     	ds	1
  5338  005A                     ??_LedONStartConfig:	
  5339  005A                     PackageTxResponseData@dataLen:	
  5340                           ; 1 bytes @ 0x2
  5341                           
  5342                           
  5343                           ; 1 bytes @ 0x2
  5344  005A                     	ds	1
  5345  005B                     ??_PackageTxResponseData:	
  5346  005B                     BuzzerStartConfig@BuzzDurationSec:	
  5347                           ; 1 bytes @ 0x3
  5348                           
  5349                           
  5350                           ; 1 bytes @ 0x3
  5351  005B                     	ds	1
  5352  005C                     LedONStartConfig@LEDcolor:	
  5353                           
  5354                           ; 1 bytes @ 0x4
  5355  005C                     	ds	1
  5356  005D                     PackageTxResponseData@i:	
  5357                           
  5358                           ; 1 bytes @ 0x5
  5359  005D                     	ds	1
  5360  005E                     PackageTxResponseData@frameType:	
  5361                           
  5362                           ; 1 bytes @ 0x6
  5363  005E                     	ds	1
  5364  005F                     ??_ProtocolManager:	
  5365                           
  5366                           ; 1 bytes @ 0x7
  5367  005F                     	ds	4
  5368  0063                     ProtocolManager@k:	
  5369                           
  5370                           ; 1 bytes @ 0xB
  5371  0063                     	ds	1
  5372  0064                     ??_main:	
  5373                           
  5374                           ; 1 bytes @ 0xC
  5375  0064                     	ds	2
  5376                           
  5377                           	psect	maintext
  5378  0672                     __pmaintext:	
  5379 ;;
  5380 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  5381 ;;
  5382 ;; *************** function _main *****************
  5383 ;; Defined at:
  5384 ;;		line 68 in file "main.c"
  5385 ;; Parameters:    Size  Location     Type
  5386 ;;		None
  5387 ;; Auto vars:     Size  Location     Type
  5388 ;;		None
  5389 ;; Return value:  Size  Location     Type
  5390 ;;                  1    wreg      void 
  5391 ;; Registers used:
  5392 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5393 ;; Tracked objects:
  5394 ;;		On entry : B1F/0
  5395 ;;		On exit  : 0/0
  5396 ;;		Unchanged: 0/0
  5397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5398 ;;      Params:         0       0       0       0       0       0       0       0
  5399 ;;      Locals:         0       0       0       0       0       0       0       0
  5400 ;;      Temps:          0       2       0       0       0       0       0       0
  5401 ;;      Totals:         0       2       0       0       0       0       0       0
  5402 ;;Total ram usage:        2 bytes
  5403 ;; Hardware stack levels required when called:   11
  5404 ;; This function calls:
  5405 ;;		_BuzzerStartConfig
  5406 ;;		_FanStartConfig
  5407 ;;		_LedONStartConfig
  5408 ;;		_LedONStatusBusy
  5409 ;;		_ProtocolManager
  5410 ;;		_SYSTEM_Initialize
  5411 ;; This function is called by:
  5412 ;;		Startup code after reset
  5413 ;; This function uses a non-reentrant model
  5414 ;;
  5415                           
  5416                           
  5417                           ;psect for function _main
  5418  0672                     _main:	
  5419                           
  5420                           ;main.c: 71: SYSTEM_Initialize();
  5421                           
  5422                           ;incstack = 0
  5423                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5424  0672  3187  27EA  3186   	fcall	_SYSTEM_Initialize
  5425                           
  5426                           ;main.c: 78: (INTCONbits.GIE = 1);
  5427  0675  178B               	bsf	11,7	;volatile
  5428                           
  5429                           ;main.c: 81: (INTCONbits.PEIE = 1);
  5430  0676  170B               	bsf	11,6	;volatile
  5431                           
  5432                           ;main.c: 88: BuzzerStartConfig(1,10);
  5433  0677  300A               	movlw	10
  5434  0678  0020               	movlb	0	; select bank0
  5435  0679  00E4               	movwf	??_main
  5436  067A  0864               	movf	??_main,w
  5437  067B  00D8               	movwf	BuzzerStartConfig@BuzzNumBeep
  5438  067C  3001               	movlw	1
  5439  067D  3187  2798  3186   	fcall	_BuzzerStartConfig
  5440                           
  5441                           ;main.c: 90: LedONStartConfig(0, 4, 10);
  5442  0680  3004               	movlw	4
  5443  0681  0020               	movlb	0	; select bank0
  5444  0682  00E4               	movwf	??_main
  5445  0683  0864               	movf	??_main,w
  5446  0684  00D8               	movwf	LedONStartConfig@LedONDurationSec
  5447  0685  300A               	movlw	10
  5448  0686  00E5               	movwf	??_main+1
  5449  0687  0865               	movf	??_main+1,w
  5450  0688  00D9               	movwf	LedONStartConfig@LedONNumBlink
  5451  0689  3000               	movlw	0
  5452  068A  3186  26D9  3186   	fcall	_LedONStartConfig
  5453  068D                     l4414:	
  5454                           ;main.c: 91: while(LedONStatusBusy());
  5455                           
  5456  068D  3180  2002  3186   	fcall	_LedONStatusBusy
  5457  0690  3A00               	xorlw	0
  5458  0691  1D03               	skipz
  5459  0692  2E8D               	goto	l4414
  5460                           
  5461                           ;main.c: 94: FanStartConfig(2);
  5462  0693  3002               	movlw	2
  5463  0694  318E  2640  3186   	fcall	_FanStartConfig
  5464                           
  5465                           ;main.c: 95: BuzzerStartConfig(4,10);
  5466  0697  300A               	movlw	10
  5467  0698  0020               	movlb	0	; select bank0
  5468  0699  00E4               	movwf	??_main
  5469  069A  0864               	movf	??_main,w
  5470  069B  00D8               	movwf	BuzzerStartConfig@BuzzNumBeep
  5471  069C  3004               	movlw	4
  5472  069D  3187  2798  3186   	fcall	_BuzzerStartConfig
  5473                           
  5474                           ;main.c: 96: LedONStartConfig(1, 4, 10);
  5475  06A0  3004               	movlw	4
  5476  06A1  0020               	movlb	0	; select bank0
  5477  06A2  00E4               	movwf	??_main
  5478  06A3  0864               	movf	??_main,w
  5479  06A4  00D8               	movwf	LedONStartConfig@LedONDurationSec
  5480  06A5  300A               	movlw	10
  5481  06A6  00E5               	movwf	??_main+1
  5482  06A7  0865               	movf	??_main+1,w
  5483  06A8  00D9               	movwf	LedONStartConfig@LedONNumBlink
  5484  06A9  3001               	movlw	1
  5485  06AA  3186  26D9  3186   	fcall	_LedONStartConfig
  5486  06AD                     l4420:	
  5487                           ;main.c: 97: while(LedONStatusBusy());
  5488                           
  5489  06AD  3180  2002  3186   	fcall	_LedONStatusBusy
  5490  06B0  3A00               	xorlw	0
  5491  06B1  1D03               	skipz
  5492  06B2  2EAD               	goto	l4420
  5493                           
  5494                           ;main.c: 99: BuzzerStartConfig(1,10);
  5495  06B3  300A               	movlw	10
  5496  06B4  0020               	movlb	0	; select bank0
  5497  06B5  00E4               	movwf	??_main
  5498  06B6  0864               	movf	??_main,w
  5499  06B7  00D8               	movwf	BuzzerStartConfig@BuzzNumBeep
  5500  06B8  3001               	movlw	1
  5501  06B9  3187  2798  3186   	fcall	_BuzzerStartConfig
  5502                           
  5503                           ;main.c: 100: LedONStartConfig(2, 4, 10);
  5504  06BC  3004               	movlw	4
  5505  06BD  0020               	movlb	0	; select bank0
  5506  06BE  00E4               	movwf	??_main
  5507  06BF  0864               	movf	??_main,w
  5508  06C0  00D8               	movwf	LedONStartConfig@LedONDurationSec
  5509  06C1  300A               	movlw	10
  5510  06C2  00E5               	movwf	??_main+1
  5511  06C3  0865               	movf	??_main+1,w
  5512  06C4  00D9               	movwf	LedONStartConfig@LedONNumBlink
  5513  06C5  3002               	movlw	2
  5514  06C6  3186  26D9  3186   	fcall	_LedONStartConfig
  5515  06C9                     l4426:	
  5516                           ;main.c: 101: while(LedONStatusBusy());
  5517                           
  5518  06C9  3180  2002  3186   	fcall	_LedONStatusBusy
  5519  06CC  3A00               	xorlw	0
  5520  06CD  1D03               	skipz
  5521  06CE  2EC9               	goto	l4426
  5522                           
  5523                           ;main.c: 103: FanStartConfig(2);
  5524  06CF  3002               	movlw	2
  5525  06D0  318E  2640  3186   	fcall	_FanStartConfig
  5526                           
  5527                           ;main.c: 105: do { LATB6 = 0; } while(0);
  5528  06D3  0022               	movlb	2	; select bank2
  5529  06D4  130D               	bcf	13,6	;volatile
  5530  06D5                     l4432:	
  5531                           ;main.c: 107: while(1)
  5532                           
  5533                           
  5534                           ;main.c: 108: {
  5535                           ;main.c: 109: ProtocolManager();
  5536  06D5  3180  203C  3186   	fcall	_ProtocolManager
  5537  06D8  2ED5               	goto	l4432
  5538  06D9                     __end_of_main:	
  5539                           
  5540                           	psect	text1
  5541  07EA                     __ptext1:	
  5542 ;; *************** function _SYSTEM_Initialize *****************
  5543 ;; Defined at:
  5544 ;;		line 77 in file "mcc_generated_files/mcc.c"
  5545 ;; Parameters:    Size  Location     Type
  5546 ;;		None
  5547 ;; Auto vars:     Size  Location     Type
  5548 ;;		None
  5549 ;; Return value:  Size  Location     Type
  5550 ;;                  1    wreg      void 
  5551 ;; Registers used:
  5552 ;;		wreg, status,2, status,0, pclath, cstack
  5553 ;; Tracked objects:
  5554 ;;		On entry : 0/0
  5555 ;;		On exit  : 0/0
  5556 ;;		Unchanged: 0/0
  5557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5558 ;;      Params:         0       0       0       0       0       0       0       0
  5559 ;;      Locals:         0       0       0       0       0       0       0       0
  5560 ;;      Temps:          0       0       0       0       0       0       0       0
  5561 ;;      Totals:         0       0       0       0       0       0       0       0
  5562 ;;Total ram usage:        0 bytes
  5563 ;; Hardware stack levels used:    1
  5564 ;; Hardware stack levels required when called:    8
  5565 ;; This function calls:
  5566 ;;		_ADC_Initialize
  5567 ;;		_EUSART_Initialize
  5568 ;;		_OSCILLATOR_Initialize
  5569 ;;		_PIN_MANAGER_Initialize
  5570 ;;		_PWM5_Initialize
  5571 ;;		_TMR0_Initialize
  5572 ;;		_TMR2_Initialize
  5573 ;; This function is called by:
  5574 ;;		_main
  5575 ;; This function uses a non-reentrant model
  5576 ;;
  5577                           
  5578                           
  5579                           ;psect for function _SYSTEM_Initialize
  5580  07EA                     _SYSTEM_Initialize:	
  5581                           
  5582                           ;mcc.c: 79: PIN_MANAGER_Initialize();
  5583                           
  5584                           ;incstack = 0
  5585                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5586  07EA  318F  2776  3187   	fcall	_PIN_MANAGER_Initialize
  5587                           
  5588                           ;mcc.c: 80: OSCILLATOR_Initialize();
  5589  07ED  318D  2583  3187   	fcall	_OSCILLATOR_Initialize
  5590                           
  5591                           ;mcc.c: 81: ADC_Initialize();
  5592  07F0  318D  257A  3187   	fcall	_ADC_Initialize
  5593                           
  5594                           ;mcc.c: 82: PWM5_Initialize();
  5595  07F3  318D  2596  3187   	fcall	_PWM5_Initialize
  5596                           
  5597                           ;mcc.c: 83: TMR2_Initialize();
  5598  07F6  318D  25A0  3187   	fcall	_TMR2_Initialize
  5599                           
  5600                           ;mcc.c: 84: TMR0_Initialize();
  5601  07F9  318D  25C1  3187   	fcall	_TMR0_Initialize
  5602                           
  5603                           ;mcc.c: 85: EUSART_Initialize();
  5604  07FC  318D  25AA         	fcall	_EUSART_Initialize
  5605  07FE  0008               	return
  5606  07FF                     __end_of_SYSTEM_Initialize:	
  5607                           
  5608                           	psect	text2
  5609  0DA0                     __ptext2:	
  5610 ;; *************** function _TMR2_Initialize *****************
  5611 ;; Defined at:
  5612 ;;		line 58 in file "mcc_generated_files/tmr2.c"
  5613 ;; Parameters:    Size  Location     Type
  5614 ;;		None
  5615 ;; Auto vars:     Size  Location     Type
  5616 ;;		None
  5617 ;; Return value:  Size  Location     Type
  5618 ;;                  1    wreg      void 
  5619 ;; Registers used:
  5620 ;;		wreg, status,2, status,0, pclath, cstack
  5621 ;; Tracked objects:
  5622 ;;		On entry : 0/0
  5623 ;;		On exit  : 0/0
  5624 ;;		Unchanged: 0/0
  5625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5626 ;;      Params:         0       0       0       0       0       0       0       0
  5627 ;;      Locals:         0       0       0       0       0       0       0       0
  5628 ;;      Temps:          0       0       0       0       0       0       0       0
  5629 ;;      Totals:         0       0       0       0       0       0       0       0
  5630 ;;Total ram usage:        0 bytes
  5631 ;; Hardware stack levels used:    1
  5632 ;; Hardware stack levels required when called:    7
  5633 ;; This function calls:
  5634 ;;		_TMR2_StartTimer
  5635 ;; This function is called by:
  5636 ;;		_SYSTEM_Initialize
  5637 ;; This function uses a non-reentrant model
  5638 ;;
  5639                           
  5640                           
  5641                           ;psect for function _TMR2_Initialize
  5642  0DA0                     _TMR2_Initialize:	
  5643                           
  5644                           ;tmr2.c: 63: T2CON = 0x02;
  5645                           
  5646                           ;incstack = 0
  5647                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5648  0DA0  3002               	movlw	2
  5649  0DA1  0020               	movlb	0	; select bank0
  5650  0DA2  009F               	movwf	31	;volatile
  5651                           
  5652                           ;tmr2.c: 66: PR2 = 0x3F;
  5653  0DA3  303F               	movlw	63
  5654  0DA4  009E               	movwf	30	;volatile
  5655                           
  5656                           ;tmr2.c: 69: TMR2 = 0x00;
  5657  0DA5  019D               	clrf	29	;volatile
  5658                           
  5659                           ;tmr2.c: 72: PIR1bits.TMR2IF = 0;
  5660  0DA6  1091               	bcf	17,1	;volatile
  5661                           
  5662                           ;tmr2.c: 75: TMR2_StartTimer();
  5663  0DA7  318D  254A         	fcall	_TMR2_StartTimer
  5664  0DA9  0008               	return
  5665  0DAA                     __end_of_TMR2_Initialize:	
  5666                           
  5667                           	psect	text3
  5668  0DC1                     __ptext3:	
  5669 ;; *************** function _TMR0_Initialize *****************
  5670 ;; Defined at:
  5671 ;;		line 61 in file "mcc_generated_files/tmr0.c"
  5672 ;; Parameters:    Size  Location     Type
  5673 ;;		None
  5674 ;; Auto vars:     Size  Location     Type
  5675 ;;		None
  5676 ;; Return value:  Size  Location     Type
  5677 ;;                  1    wreg      void 
  5678 ;; Registers used:
  5679 ;;		wreg, status,2, status,0, pclath, cstack
  5680 ;; Tracked objects:
  5681 ;;		On entry : 0/0
  5682 ;;		On exit  : 0/0
  5683 ;;		Unchanged: 0/0
  5684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5685 ;;      Params:         0       0       0       0       0       0       0       0
  5686 ;;      Locals:         0       0       0       0       0       0       0       0
  5687 ;;      Temps:          0       0       0       0       0       0       0       0
  5688 ;;      Totals:         0       0       0       0       0       0       0       0
  5689 ;;Total ram usage:        0 bytes
  5690 ;; Hardware stack levels used:    1
  5691 ;; Hardware stack levels required when called:    7
  5692 ;; This function calls:
  5693 ;;		_TMR0_StartTimer
  5694 ;; This function is called by:
  5695 ;;		_SYSTEM_Initialize
  5696 ;; This function uses a non-reentrant model
  5697 ;;
  5698                           
  5699                           
  5700                           ;psect for function _TMR0_Initialize
  5701  0DC1                     _TMR0_Initialize:	
  5702                           
  5703                           ;tmr0.c: 66: T0CON0 = 0x00;
  5704                           
  5705                           ;incstack = 0
  5706                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5707  0DC1  0020               	movlb	0	; select bank0
  5708  0DC2  0197               	clrf	23	;volatile
  5709                           
  5710                           ;tmr0.c: 69: T0CON1 = 0x68;
  5711  0DC3  3068               	movlw	104
  5712  0DC4  0098               	movwf	24	;volatile
  5713                           
  5714                           ;tmr0.c: 72: TMR0H = 0x3E;
  5715  0DC5  303E               	movlw	62
  5716  0DC6  0096               	movwf	22	;volatile
  5717                           
  5718                           ;tmr0.c: 75: TMR0L = 0x00;
  5719  0DC7  0195               	clrf	21	;volatile
  5720                           
  5721                           ;tmr0.c: 78: PIR0bits.TMR0IF = 0;
  5722  0DC8  1290               	bcf	16,5	;volatile
  5723                           
  5724                           ;tmr0.c: 81: PIE0bits.TMR0IE = 1;
  5725  0DC9  0021               	movlb	1	; select bank1
  5726  0DCA  1690               	bsf	16,5	;volatile
  5727                           
  5728                           ;tmr0.c: 84: TMR0_StartTimer();
  5729  0DCB  318D  2553         	fcall	_TMR0_StartTimer
  5730  0DCD  0008               	return
  5731  0DCE                     __end_of_TMR0_Initialize:	
  5732                           
  5733                           	psect	text4
  5734  0D53                     __ptext4:	
  5735 ;; *************** function _TMR0_StartTimer *****************
  5736 ;; Defined at:
  5737 ;;		line 87 in file "mcc_generated_files/tmr0.c"
  5738 ;; Parameters:    Size  Location     Type
  5739 ;;		None
  5740 ;; Auto vars:     Size  Location     Type
  5741 ;;		None
  5742 ;; Return value:  Size  Location     Type
  5743 ;;                  1    wreg      void 
  5744 ;; Registers used:
  5745 ;;		None
  5746 ;; Tracked objects:
  5747 ;;		On entry : 0/0
  5748 ;;		On exit  : 0/0
  5749 ;;		Unchanged: 0/0
  5750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5751 ;;      Params:         0       0       0       0       0       0       0       0
  5752 ;;      Locals:         0       0       0       0       0       0       0       0
  5753 ;;      Temps:          0       0       0       0       0       0       0       0
  5754 ;;      Totals:         0       0       0       0       0       0       0       0
  5755 ;;Total ram usage:        0 bytes
  5756 ;; Hardware stack levels used:    1
  5757 ;; Hardware stack levels required when called:    6
  5758 ;; This function calls:
  5759 ;;		Nothing
  5760 ;; This function is called by:
  5761 ;;		_TMR0_Initialize
  5762 ;; This function uses a non-reentrant model
  5763 ;;
  5764                           
  5765                           
  5766                           ;psect for function _TMR0_StartTimer
  5767  0D53                     _TMR0_StartTimer:	
  5768                           
  5769                           ;tmr0.c: 90: T0CON0bits.T0EN = 1;
  5770                           
  5771                           ;incstack = 0
  5772                           ; Regs used in _TMR0_StartTimer: []
  5773  0D53  0020               	movlb	0	; select bank0
  5774  0D54  1797               	bsf	23,7	;volatile
  5775  0D55  0008               	return
  5776  0D56                     __end_of_TMR0_StartTimer:	
  5777                           
  5778                           	psect	text5
  5779  0D96                     __ptext5:	
  5780 ;; *************** function _PWM5_Initialize *****************
  5781 ;; Defined at:
  5782 ;;		line 58 in file "mcc_generated_files/pwm5.c"
  5783 ;; Parameters:    Size  Location     Type
  5784 ;;		None
  5785 ;; Auto vars:     Size  Location     Type
  5786 ;;		None
  5787 ;; Return value:  Size  Location     Type
  5788 ;;                  1    wreg      void 
  5789 ;; Registers used:
  5790 ;;		wreg, status,2, status,0
  5791 ;; Tracked objects:
  5792 ;;		On entry : 0/0
  5793 ;;		On exit  : 0/0
  5794 ;;		Unchanged: 0/0
  5795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5796 ;;      Params:         0       0       0       0       0       0       0       0
  5797 ;;      Locals:         0       0       0       0       0       0       0       0
  5798 ;;      Temps:          0       0       0       0       0       0       0       0
  5799 ;;      Totals:         0       0       0       0       0       0       0       0
  5800 ;;Total ram usage:        0 bytes
  5801 ;; Hardware stack levels used:    1
  5802 ;; Hardware stack levels required when called:    6
  5803 ;; This function calls:
  5804 ;;		Nothing
  5805 ;; This function is called by:
  5806 ;;		_SYSTEM_Initialize
  5807 ;; This function uses a non-reentrant model
  5808 ;;
  5809                           
  5810                           
  5811                           ;psect for function _PWM5_Initialize
  5812  0D96                     _PWM5_Initialize:	
  5813                           
  5814                           ;pwm5.c: 62: PWM5CON = 0x80;
  5815                           
  5816                           ;incstack = 0
  5817                           ; Regs used in _PWM5_Initialize: [wreg+status,2+status,0]
  5818  0D96  3080               	movlw	128
  5819  0D97  002C               	movlb	12	; select bank12
  5820  0D98  0099               	movwf	25	;volatile
  5821                           
  5822                           ;pwm5.c: 65: PWM5DCH = 0x2C;
  5823  0D99  302C               	movlw	44
  5824  0D9A  0098               	movwf	24	;volatile
  5825                           
  5826                           ;pwm5.c: 68: PWM5DCL = 0x80;
  5827  0D9B  3080               	movlw	128
  5828  0D9C  0097               	movwf	23	;volatile
  5829                           
  5830                           ;pwm5.c: 72: PWMTMRSbits.P5TSEL = 0;
  5831  0D9D  30FC               	movlw	-4
  5832  0D9E  059F               	andwf	31,f	;volatile
  5833  0D9F  0008               	return
  5834  0DA0                     __end_of_PWM5_Initialize:	
  5835                           
  5836                           	psect	text6
  5837  0F76                     __ptext6:	
  5838 ;; *************** function _PIN_MANAGER_Initialize *****************
  5839 ;; Defined at:
  5840 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
  5841 ;; Parameters:    Size  Location     Type
  5842 ;;		None
  5843 ;; Auto vars:     Size  Location     Type
  5844 ;;  state           1    2[COMMON] unsigned char 
  5845 ;; Return value:  Size  Location     Type
  5846 ;;                  1    wreg      void 
  5847 ;; Registers used:
  5848 ;;		wreg, status,2, status,0
  5849 ;; Tracked objects:
  5850 ;;		On entry : 0/0
  5851 ;;		On exit  : 0/0
  5852 ;;		Unchanged: 0/0
  5853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5854 ;;      Params:         0       0       0       0       0       0       0       0
  5855 ;;      Locals:         1       0       0       0       0       0       0       0
  5856 ;;      Temps:          0       0       0       0       0       0       0       0
  5857 ;;      Totals:         1       0       0       0       0       0       0       0
  5858 ;;Total ram usage:        1 bytes
  5859 ;; Hardware stack levels used:    1
  5860 ;; Hardware stack levels required when called:    6
  5861 ;; This function calls:
  5862 ;;		Nothing
  5863 ;; This function is called by:
  5864 ;;		_SYSTEM_Initialize
  5865 ;; This function uses a non-reentrant model
  5866 ;;
  5867                           
  5868                           
  5869                           ;psect for function _PIN_MANAGER_Initialize
  5870  0F76                     _PIN_MANAGER_Initialize:	
  5871                           
  5872                           ;pin_manager.c: 52: LATB = 0x20;
  5873                           
  5874                           ;incstack = 0
  5875                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0]
  5876  0F76  3020               	movlw	32
  5877  0F77  0022               	movlb	2	; select bank2
  5878  0F78  008D               	movwf	13	;volatile
  5879                           
  5880                           ;pin_manager.c: 53: LATA = 0x0;
  5881  0F79  018C               	clrf	12	;volatile
  5882                           
  5883                           ;pin_manager.c: 54: LATC = 0x0;
  5884  0F7A  018E               	clrf	14	;volatile
  5885                           
  5886                           ;pin_manager.c: 55: WPUA = 0x0;
  5887  0F7B  0024               	movlb	4	; select bank4
  5888  0F7C  018C               	clrf	12	;volatile
  5889                           
  5890                           ;pin_manager.c: 56: WPUB = 0x20;
  5891  0F7D  3020               	movlw	32
  5892  0F7E  008D               	movwf	13	;volatile
  5893                           
  5894                           ;pin_manager.c: 57: WPUC = 0x0;
  5895  0F7F  018E               	clrf	14	;volatile
  5896                           
  5897                           ;pin_manager.c: 58: ANSELA = 0x37;
  5898  0F80  3037               	movlw	55
  5899  0F81  0023               	movlb	3	; select bank3
  5900  0F82  008C               	movwf	12	;volatile
  5901                           
  5902                           ;pin_manager.c: 59: ANSELB = 0xE0;
  5903  0F83  30E0               	movlw	224
  5904  0F84  008D               	movwf	13	;volatile
  5905                           
  5906                           ;pin_manager.c: 60: ANSELC = 0xFF;
  5907  0F85  30FF               	movlw	255
  5908  0F86  008E               	movwf	14	;volatile
  5909                           
  5910                           ;pin_manager.c: 61: TRISB = 0x10;
  5911  0F87  3010               	movlw	16
  5912  0F88  0021               	movlb	1	; select bank1
  5913  0F89  008D               	movwf	13	;volatile
  5914                           
  5915                           ;pin_manager.c: 62: TRISC = 0x30;
  5916  0F8A  3030               	movlw	48
  5917  0F8B  008E               	movwf	14	;volatile
  5918                           
  5919                           ;pin_manager.c: 63: TRISA = 0x17;
  5920  0F8C  3017               	movlw	23
  5921  0F8D  008C               	movwf	12	;volatile
  5922                           
  5923                           ;pin_manager.c: 68: PIE0bits.IOCIE = 0;
  5924  0F8E  1210               	bcf	16,4	;volatile
  5925                           
  5926                           ;pin_manager.c: 69: bool state = GIE;
  5927  0F8F  3000               	movlw	0
  5928  0F90  1B8B               	btfsc	11,7	;volatile
  5929  0F91  3001               	movlw	1
  5930  0F92  00F2               	movwf	PIN_MANAGER_Initialize@state
  5931                           
  5932                           ;pin_manager.c: 70: GIE = 0;
  5933  0F93  138B               	bcf	11,7	;volatile
  5934                           
  5935                           ;pin_manager.c: 71: PPSLOCK = 0x55;
  5936  0F94  3055               	movlw	85
  5937  0F95  003C               	movlb	28	; select bank28
  5938  0F96  008F               	movwf	15	;volatile
  5939                           
  5940                           ;pin_manager.c: 72: PPSLOCK = 0xAA;
  5941  0F97  30AA               	movlw	170
  5942  0F98  008F               	movwf	15	;volatile
  5943                           
  5944                           ;pin_manager.c: 73: PPSLOCKbits.PPSLOCKED = 0x00;
  5945  0F99  100F               	bcf	15,0	;volatile
  5946                           
  5947                           ;pin_manager.c: 75: RXPPSbits.RXPPS = 0x000C;
  5948  0F9A  0824               	movf	36,w	;volatile
  5949  0F9B  39E0               	andlw	-32
  5950  0F9C  380C               	iorlw	12
  5951  0F9D  00A4               	movwf	36	;volatile
  5952                           
  5953                           ;pin_manager.c: 76: RC3PPSbits.RC3PPS = 0x0002;
  5954  0F9E  003D               	movlb	29	; select bank29
  5955  0F9F  0823               	movf	35,w	;volatile
  5956  0FA0  39E0               	andlw	-32
  5957  0FA1  3802               	iorlw	2
  5958  0FA2  00A3               	movwf	35	;volatile
  5959                           
  5960                           ;pin_manager.c: 77: RB5PPSbits.RB5PPS = 0x0014;
  5961  0FA3  081D               	movf	29,w	;volatile
  5962  0FA4  39E0               	andlw	-32
  5963  0FA5  3814               	iorlw	20
  5964  0FA6  009D               	movwf	29	;volatile
  5965                           
  5966                           ;pin_manager.c: 79: PPSLOCK = 0x55;
  5967  0FA7  3055               	movlw	85
  5968  0FA8  003C               	movlb	28	; select bank28
  5969  0FA9  008F               	movwf	15	;volatile
  5970                           
  5971                           ;pin_manager.c: 80: PPSLOCK = 0xAA;
  5972  0FAA  30AA               	movlw	170
  5973  0FAB  008F               	movwf	15	;volatile
  5974                           
  5975                           ;pin_manager.c: 81: PPSLOCKbits.PPSLOCKED = 0x01;
  5976  0FAC  140F               	bsf	15,0	;volatile
  5977                           
  5978                           ;pin_manager.c: 82: GIE = state;
  5979  0FAD  1C72               	btfss	PIN_MANAGER_Initialize@state,0
  5980  0FAE  2FB1               	goto	u250
  5981  0FAF  178B               	bsf	11,7	;volatile
  5982  0FB0  0008               	return
  5983  0FB1                     u250:	
  5984  0FB1  138B               	bcf	11,7	;volatile
  5985  0FB2  0008               	return
  5986  0FB3                     __end_of_PIN_MANAGER_Initialize:	
  5987                           
  5988                           	psect	text7
  5989  0D83                     __ptext7:	
  5990 ;; *************** function _OSCILLATOR_Initialize *****************
  5991 ;; Defined at:
  5992 ;;		line 88 in file "mcc_generated_files/mcc.c"
  5993 ;; Parameters:    Size  Location     Type
  5994 ;;		None
  5995 ;; Auto vars:     Size  Location     Type
  5996 ;;		None
  5997 ;; Return value:  Size  Location     Type
  5998 ;;                  1    wreg      void 
  5999 ;; Registers used:
  6000 ;;		wreg, status,2
  6001 ;; Tracked objects:
  6002 ;;		On entry : 0/0
  6003 ;;		On exit  : 0/0
  6004 ;;		Unchanged: 0/0
  6005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6006 ;;      Params:         0       0       0       0       0       0       0       0
  6007 ;;      Locals:         0       0       0       0       0       0       0       0
  6008 ;;      Temps:          0       0       0       0       0       0       0       0
  6009 ;;      Totals:         0       0       0       0       0       0       0       0
  6010 ;;Total ram usage:        0 bytes
  6011 ;; Hardware stack levels used:    1
  6012 ;; Hardware stack levels required when called:    6
  6013 ;; This function calls:
  6014 ;;		Nothing
  6015 ;; This function is called by:
  6016 ;;		_SYSTEM_Initialize
  6017 ;; This function uses a non-reentrant model
  6018 ;;
  6019                           
  6020                           
  6021                           ;psect for function _OSCILLATOR_Initialize
  6022  0D83                     _OSCILLATOR_Initialize:	
  6023                           
  6024                           ;mcc.c: 91: OSCCON1 = 0x02;
  6025                           
  6026                           ;incstack = 0
  6027                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  6028  0D83  3002               	movlw	2
  6029  0D84  0032               	movlb	18	; select bank18
  6030  0D85  0099               	movwf	25	;volatile
  6031                           
  6032                           ;mcc.c: 93: OSCCON3 = 0x00;
  6033  0D86  019B               	clrf	27	;volatile
  6034                           
  6035                           ;mcc.c: 95: OSCEN = 0x00;
  6036  0D87  019D               	clrf	29	;volatile
  6037                           
  6038                           ;mcc.c: 97: OSCFRQ = 0x06;
  6039  0D88  3006               	movlw	6
  6040  0D89  009F               	movwf	31	;volatile
  6041                           
  6042                           ;mcc.c: 99: OSCTUNE = 0x00;
  6043  0D8A  019E               	clrf	30	;volatile
  6044  0D8B  0008               	return
  6045  0D8C                     __end_of_OSCILLATOR_Initialize:	
  6046                           
  6047                           	psect	text8
  6048  0DAA                     __ptext8:	
  6049 ;; *************** function _EUSART_Initialize *****************
  6050 ;; Defined at:
  6051 ;;		line 56 in file "mcc_generated_files/eusart.c"
  6052 ;; Parameters:    Size  Location     Type
  6053 ;;		None
  6054 ;; Auto vars:     Size  Location     Type
  6055 ;;		None
  6056 ;; Return value:  Size  Location     Type
  6057 ;;                  1    wreg      void 
  6058 ;; Registers used:
  6059 ;;		wreg, status,2
  6060 ;; Tracked objects:
  6061 ;;		On entry : 0/0
  6062 ;;		On exit  : 0/0
  6063 ;;		Unchanged: 0/0
  6064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6065 ;;      Params:         0       0       0       0       0       0       0       0
  6066 ;;      Locals:         0       0       0       0       0       0       0       0
  6067 ;;      Temps:          0       0       0       0       0       0       0       0
  6068 ;;      Totals:         0       0       0       0       0       0       0       0
  6069 ;;Total ram usage:        0 bytes
  6070 ;; Hardware stack levels used:    1
  6071 ;; Hardware stack levels required when called:    6
  6072 ;; This function calls:
  6073 ;;		Nothing
  6074 ;; This function is called by:
  6075 ;;		_SYSTEM_Initialize
  6076 ;; This function uses a non-reentrant model
  6077 ;;
  6078                           
  6079                           
  6080                           ;psect for function _EUSART_Initialize
  6081  0DAA                     _EUSART_Initialize:	
  6082                           
  6083                           ;eusart.c: 61: BAUD1CON = 0x08;
  6084                           
  6085                           ;incstack = 0
  6086                           ; Regs used in _EUSART_Initialize: [wreg+status,2]
  6087  0DAA  3008               	movlw	8
  6088  0DAB  0023               	movlb	3	; select bank3
  6089  0DAC  009F               	movwf	31	;volatile
  6090                           
  6091                           ;eusart.c: 64: RC1STA = 0x90;
  6092  0DAD  3090               	movlw	144
  6093  0DAE  009D               	movwf	29	;volatile
  6094                           
  6095                           ;eusart.c: 67: TX1STA = 0x24;
  6096  0DAF  3024               	movlw	36
  6097  0DB0  009E               	movwf	30	;volatile
  6098                           
  6099                           ;eusart.c: 70: SP1BRGL = 0x67;
  6100  0DB1  3067               	movlw	103
  6101  0DB2  009B               	movwf	27	;volatile
  6102                           
  6103                           ;eusart.c: 73: SP1BRGH = 0x00;
  6104  0DB3  019C               	clrf	28	;volatile
  6105  0DB4  0008               	return
  6106  0DB5                     __end_of_EUSART_Initialize:	
  6107                           
  6108                           	psect	text9
  6109  0D7A                     __ptext9:	
  6110 ;; *************** function _ADC_Initialize *****************
  6111 ;; Defined at:
  6112 ;;		line 65 in file "mcc_generated_files/adc.c"
  6113 ;; Parameters:    Size  Location     Type
  6114 ;;		None
  6115 ;; Auto vars:     Size  Location     Type
  6116 ;;		None
  6117 ;; Return value:  Size  Location     Type
  6118 ;;                  1    wreg      void 
  6119 ;; Registers used:
  6120 ;;		wreg, status,2
  6121 ;; Tracked objects:
  6122 ;;		On entry : 0/0
  6123 ;;		On exit  : 0/0
  6124 ;;		Unchanged: 0/0
  6125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6126 ;;      Params:         0       0       0       0       0       0       0       0
  6127 ;;      Locals:         0       0       0       0       0       0       0       0
  6128 ;;      Temps:          0       0       0       0       0       0       0       0
  6129 ;;      Totals:         0       0       0       0       0       0       0       0
  6130 ;;Total ram usage:        0 bytes
  6131 ;; Hardware stack levels used:    1
  6132 ;; Hardware stack levels required when called:    6
  6133 ;; This function calls:
  6134 ;;		Nothing
  6135 ;; This function is called by:
  6136 ;;		_SYSTEM_Initialize
  6137 ;; This function uses a non-reentrant model
  6138 ;;
  6139                           
  6140                           
  6141                           ;psect for function _ADC_Initialize
  6142  0D7A                     _ADC_Initialize:	
  6143                           
  6144                           ;adc.c: 70: ADCON0 = 0x01;
  6145                           
  6146                           ;incstack = 0
  6147                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  6148  0D7A  3001               	movlw	1
  6149  0D7B  0021               	movlb	1	; select bank1
  6150  0D7C  009D               	movwf	29	;volatile
  6151                           
  6152                           ;adc.c: 73: ADCON1 = 0xD0;
  6153  0D7D  30D0               	movlw	208
  6154  0D7E  009E               	movwf	30	;volatile
  6155                           
  6156                           ;adc.c: 76: ADACT = 0x00;
  6157  0D7F  019F               	clrf	31	;volatile
  6158                           
  6159                           ;adc.c: 79: ADRESL = 0x00;
  6160  0D80  019B               	clrf	27	;volatile
  6161                           
  6162                           ;adc.c: 82: ADRESH = 0x00;
  6163  0D81  019C               	clrf	28	;volatile
  6164  0D82  0008               	return
  6165  0D83                     __end_of_ADC_Initialize:	
  6166                           
  6167                           	psect	text10
  6168  003C                     __ptext10:	
  6169 ;; *************** function _ProtocolManager *****************
  6170 ;; Defined at:
  6171 ;;		line 40 in file "/home/kpit/MPLABXProjects/IECTOOLTest1/CommunicationManager.c"
  6172 ;; Parameters:    Size  Location     Type
  6173 ;;		None
  6174 ;; Auto vars:     Size  Location     Type
  6175 ;;  k               1   11[BANK0 ] unsigned char 
  6176 ;; Return value:  Size  Location     Type
  6177 ;;                  1    wreg      void 
  6178 ;; Registers used:
  6179 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6180 ;; Tracked objects:
  6181 ;;		On entry : 0/0
  6182 ;;		On exit  : 0/0
  6183 ;;		Unchanged: 0/0
  6184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6185 ;;      Params:         0       0       0       0       0       0       0       0
  6186 ;;      Locals:         0       1       0       0       0       0       0       0
  6187 ;;      Temps:          0       4       0       0       0       0       0       0
  6188 ;;      Totals:         0       5       0       0       0       0       0       0
  6189 ;;Total ram usage:        5 bytes
  6190 ;; Hardware stack levels used:    1
  6191 ;; Hardware stack levels required when called:   10
  6192 ;; This function calls:
  6193 ;;		_ADC_GetConversion
  6194 ;;		_BuzzerStartConfig
  6195 ;;		_DATAEE_ReadByte
  6196 ;;		_DATAEE_WriteByte
  6197 ;;		_EUSART_Read
  6198 ;;		_FanStartConfig
  6199 ;;		_LedONStartConfig
  6200 ;;		_PackageTxResponseACK
  6201 ;;		_PackageTxResponseData
  6202 ;;		_PackageTxResponseNACK
  6203 ;;		_char1bytetovalue
  6204 ;;		_char2bytetovalue
  6205 ;; This function is called by:
  6206 ;;		_main
  6207 ;; This function uses a non-reentrant model
  6208 ;;
  6209                           
  6210                           
  6211                           ;psect for function _ProtocolManager
  6212  003C                     _ProtocolManager:	
  6213                           
  6214                           ;CommunicationManager.c: 42: unsigned char k=0;
  6215                           
  6216                           ;incstack = 0
  6217                           ; Regs used in _ProtocolManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6218  003C  0020               	movlb	0	; select bank0
  6219  003D  01E3               	clrf	ProtocolManager@k
  6220                           
  6221                           ;CommunicationManager.c: 43: switch(RxFrameDecodeState)
  6222  003E  2C73               	goto	l4400
  6223  003F                     l4044:	
  6224                           ;CommunicationManager.c: 44: {
  6225                           ;CommunicationManager.c: 45: case 0: if(EUSART_Read()=='$' && EUSART_Read()=='$')
  6226                           
  6227  003F  318D  258C  3180   	fcall	_EUSART_Read
  6228  0042  3A24               	xorlw	36
  6229  0043  1D03               	skipz
  6230  0044  0008               	return
  6231  0045  318D  258C  3180   	fcall	_EUSART_Read
  6232  0048  3A24               	xorlw	36
  6233  0049  1D03               	skipz
  6234  004A  0008               	return
  6235                           
  6236                           ;CommunicationManager.c: 46: {
  6237                           ;CommunicationManager.c: 47: RxFrameDecodeState=1;
  6238  004B  0020               	movlb	0	; select bank0
  6239  004C  01C7               	clrf	_RxFrameDecodeState
  6240  004D  0AC7               	incf	_RxFrameDecodeState,f
  6241                           
  6242                           ;CommunicationManager.c: 48: RxFrameDataLenCnt=2;
  6243  004E  3002               	movlw	2
  6244  004F  00DF               	movwf	??_ProtocolManager
  6245  0050  085F               	movf	??_ProtocolManager,w
  6246  0051  00C6               	movwf	_RxFrameDataLenCnt
  6247                           
  6248                           ;CommunicationManager.c: 49: Checksum=0;
  6249  0052  01D6               	clrf	_Checksum
  6250                           
  6251                           ;CommunicationManager.c: 50: }
  6252                           ;CommunicationManager.c: 51: break;
  6253  0053  0008               	return
  6254  0054                     l4054:	
  6255                           ;CommunicationManager.c: 53: case 1: RxFrameType=EUSART_Read();
  6256                           
  6257  0054  318D  258C  3180   	fcall	_EUSART_Read
  6258  0057  0020               	movlb	0	; select bank0
  6259  0058  00DF               	movwf	??_ProtocolManager
  6260  0059  085F               	movf	??_ProtocolManager,w
  6261  005A  00E7               	movwf	_RxFrameType
  6262                           
  6263                           ;CommunicationManager.c: 54: Checksum+=RxFrameType;
  6264  005B  0867               	movf	_RxFrameType,w
  6265  005C  00DF               	movwf	??_ProtocolManager
  6266  005D  085F               	movf	??_ProtocolManager,w
  6267  005E  07D6               	addwf	_Checksum,f
  6268                           
  6269                           ;CommunicationManager.c: 55: if((RxFrameType=='r')||(RxFrameType=='w')||(RxFrameType=='A
      +                          ')||(RxFrameType=='I')||(RxFrameType=='B')||(RxFrameType=='L')||(RxFrameType=='F')||(RxF
      +                          rameType=='R'))
  6270  005F  3072               	movlw	114
  6271  0060  0667               	xorwf	_RxFrameType,w
  6272  0061  1903               	btfsc	3,2
  6273  0062  287F               	goto	l4074
  6274  0063  3077               	movlw	119
  6275  0064  0667               	xorwf	_RxFrameType,w
  6276  0065  1903               	btfsc	3,2
  6277  0066  287F               	goto	l4074
  6278  0067  3041               	movlw	65
  6279  0068  0667               	xorwf	_RxFrameType,w
  6280  0069  1903               	btfsc	3,2
  6281  006A  287F               	goto	l4074
  6282  006B  3049               	movlw	73
  6283  006C  0667               	xorwf	_RxFrameType,w
  6284  006D  1903               	btfsc	3,2
  6285  006E  287F               	goto	l4074
  6286  006F  3042               	movlw	66
  6287  0070  0667               	xorwf	_RxFrameType,w
  6288  0071  1903               	btfsc	3,2
  6289  0072  287F               	goto	l4074
  6290  0073  304C               	movlw	76
  6291  0074  0667               	xorwf	_RxFrameType,w
  6292  0075  1903               	btfsc	3,2
  6293  0076  287F               	goto	l4074
  6294  0077  3046               	movlw	70
  6295  0078  0667               	xorwf	_RxFrameType,w
  6296  0079  1903               	btfsc	3,2
  6297  007A  287F               	goto	l4074
  6298  007B  3052               	movlw	82
  6299  007C  0667               	xorwf	_RxFrameType,w
  6300  007D  1D03               	btfss	3,2
  6301  007E  2889               	goto	l4078
  6302  007F                     l4074:	
  6303                           
  6304                           ;CommunicationManager.c: 56: {
  6305                           ;CommunicationManager.c: 57: RxFrameDecodeState=2;
  6306  007F  3002               	movlw	2
  6307  0080  00DF               	movwf	??_ProtocolManager
  6308  0081  085F               	movf	??_ProtocolManager,w
  6309  0082  00C7               	movwf	_RxFrameDecodeState
  6310                           
  6311                           ;CommunicationManager.c: 58: RxFrameDataLenCnt=RxFrameDataLenCnt+1;
  6312  0083  0846               	movf	_RxFrameDataLenCnt,w
  6313  0084  3E01               	addlw	1
  6314  0085  00DF               	movwf	??_ProtocolManager
  6315  0086  085F               	movf	??_ProtocolManager,w
  6316  0087  00C6               	movwf	_RxFrameDataLenCnt
  6317                           
  6318                           ;CommunicationManager.c: 59: }
  6319  0088  0008               	return
  6320  0089                     l4078:	
  6321                           
  6322                           ;CommunicationManager.c: 60: else
  6323                           ;CommunicationManager.c: 61: {
  6324                           ;CommunicationManager.c: 62: RxFrameDecodeState=0;
  6325  0089  01C7               	clrf	_RxFrameDecodeState
  6326                           
  6327                           ;CommunicationManager.c: 63: }
  6328                           ;CommunicationManager.c: 64: break;
  6329  008A  0008               	return
  6330  008B                     l4080:	
  6331                           ;CommunicationManager.c: 66: case 2: highByteChar=EUSART_Read();
  6332                           
  6333  008B  318D  258C  3180   	fcall	_EUSART_Read
  6334  008E  0020               	movlb	0	; select bank0
  6335  008F  00DF               	movwf	??_ProtocolManager
  6336  0090  085F               	movf	??_ProtocolManager,w
  6337  0091  00CF               	movwf	_highByteChar
  6338                           
  6339                           ;CommunicationManager.c: 67: lowByteChar=EUSART_Read();
  6340  0092  318D  258C  3180   	fcall	_EUSART_Read
  6341  0095  0020               	movlb	0	; select bank0
  6342  0096  00DF               	movwf	??_ProtocolManager
  6343  0097  085F               	movf	??_ProtocolManager,w
  6344  0098  00D1               	movwf	_lowByteChar
  6345                           
  6346                           ;CommunicationManager.c: 68: RxFrameDataLen=(unsigned char)char2bytetovalue(highByteChar
      +                          ,lowByteChar,&Checksum);
  6347  0099  0851               	movf	_lowByteChar,w
  6348  009A  00DF               	movwf	??_ProtocolManager
  6349  009B  085F               	movf	??_ProtocolManager,w
  6350  009C  00F5               	movwf	char2bytetovalue@LowBchar
  6351  009D  3056               	movlw	(low (_Checksum| 0))& (0+255)
  6352  009E  00E0               	movwf	??_ProtocolManager+1
  6353  009F  0860               	movf	??_ProtocolManager+1,w
  6354  00A0  00F6               	movwf	char2bytetovalue@cksum
  6355  00A1  084F               	movf	_highByteChar,w
  6356  00A2  318E  26AF         	fcall	_char2bytetovalue
  6357  00A4  0020               	movlb	0	; select bank0
  6358  00A5  00E1               	movwf	??_ProtocolManager+2
  6359  00A6  0861               	movf	??_ProtocolManager+2,w
  6360  00A7  00C5               	movwf	_RxFrameDataLen
  6361                           
  6362                           ;CommunicationManager.c: 69: RxFrameDataLenCnt=RxFrameDataLenCnt+2;
  6363  00A8  0846               	movf	_RxFrameDataLenCnt,w
  6364  00A9  3E02               	addlw	2
  6365  00AA  00DF               	movwf	??_ProtocolManager
  6366  00AB  085F               	movf	??_ProtocolManager,w
  6367  00AC  00C6               	movwf	_RxFrameDataLenCnt
  6368                           
  6369                           ;CommunicationManager.c: 70: RxFrameDecodeState=3;
  6370  00AD  3003               	movlw	3
  6371  00AE  00DF               	movwf	??_ProtocolManager
  6372  00AF  085F               	movf	??_ProtocolManager,w
  6373  00B0  00C7               	movwf	_RxFrameDecodeState
  6374                           
  6375                           ;CommunicationManager.c: 71: break;
  6376  00B1  0008               	return
  6377  00B2                     l4088:	
  6378                           ;CommunicationManager.c: 73: case 3: if(RxFrameType=='r')
  6379                           
  6380  00B2  3072               	movlw	114
  6381  00B3  0667               	xorwf	_RxFrameType,w
  6382  00B4  1D03               	btfss	3,2
  6383  00B5  2921               	goto	l4126
  6384                           
  6385                           ;CommunicationManager.c: 74: {
  6386                           ;CommunicationManager.c: 75: RxFrameDecodeState=4;
  6387  00B6  3004               	movlw	4
  6388  00B7  00DF               	movwf	??_ProtocolManager
  6389  00B8  085F               	movf	??_ProtocolManager,w
  6390  00B9  00C7               	movwf	_RxFrameDecodeState
  6391                           
  6392                           ;CommunicationManager.c: 76: highByteChar=EUSART_Read();
  6393  00BA  318D  258C  3180   	fcall	_EUSART_Read
  6394  00BD  0020               	movlb	0	; select bank0
  6395  00BE  00DF               	movwf	??_ProtocolManager
  6396  00BF  085F               	movf	??_ProtocolManager,w
  6397  00C0  00CF               	movwf	_highByteChar
  6398                           
  6399                           ;CommunicationManager.c: 77: lowByteChar=EUSART_Read();
  6400  00C1  318D  258C  3180   	fcall	_EUSART_Read
  6401  00C4  0020               	movlb	0	; select bank0
  6402  00C5  00DF               	movwf	??_ProtocolManager
  6403  00C6  085F               	movf	??_ProtocolManager,w
  6404  00C7  00D1               	movwf	_lowByteChar
  6405                           
  6406                           ;CommunicationManager.c: 78: eepromReadAddr=((unsigned int)char2bytetovalue(highByteChar
      +                          ,lowByteChar,&Checksum))& 0x00FF;
  6407  00C8  0851               	movf	_lowByteChar,w
  6408  00C9  00DF               	movwf	??_ProtocolManager
  6409  00CA  085F               	movf	??_ProtocolManager,w
  6410  00CB  00F5               	movwf	char2bytetovalue@LowBchar
  6411  00CC  3056               	movlw	(low (_Checksum| 0))& (0+255)
  6412  00CD  00E0               	movwf	??_ProtocolManager+1
  6413  00CE  0860               	movf	??_ProtocolManager+1,w
  6414  00CF  00F6               	movwf	char2bytetovalue@cksum
  6415  00D0  084F               	movf	_highByteChar,w
  6416  00D1  318E  26AF  3180   	fcall	_char2bytetovalue
  6417  00D4  0020               	movlb	0	; select bank0
  6418  00D5  00E1               	movwf	??_ProtocolManager+2
  6419  00D6  01E2               	clrf	??_ProtocolManager+3
  6420  00D7  0861               	movf	??_ProtocolManager+2,w
  6421  00D8  00BA               	movwf	_eepromReadAddr
  6422  00D9  0862               	movf	??_ProtocolManager+3,w
  6423  00DA  00BB               	movwf	_eepromReadAddr+1
  6424                           
  6425                           ;CommunicationManager.c: 79: RxFrameDataLenCnt=RxFrameDataLenCnt+2;
  6426  00DB  0846               	movf	_RxFrameDataLenCnt,w
  6427  00DC  3E02               	addlw	2
  6428  00DD  00DF               	movwf	??_ProtocolManager
  6429  00DE  085F               	movf	??_ProtocolManager,w
  6430  00DF  00C6               	movwf	_RxFrameDataLenCnt
  6431                           
  6432                           ;CommunicationManager.c: 80: highByteChar=EUSART_Read();
  6433  00E0  318D  258C  3180   	fcall	_EUSART_Read
  6434  00E3  0020               	movlb	0	; select bank0
  6435  00E4  00DF               	movwf	??_ProtocolManager
  6436  00E5  085F               	movf	??_ProtocolManager,w
  6437  00E6  00CF               	movwf	_highByteChar
  6438                           
  6439                           ;CommunicationManager.c: 81: lowByteChar=EUSART_Read();
  6440  00E7  318D  258C  3180   	fcall	_EUSART_Read
  6441  00EA  0020               	movlb	0	; select bank0
  6442  00EB  00DF               	movwf	??_ProtocolManager
  6443  00EC  085F               	movf	??_ProtocolManager,w
  6444  00ED  00D1               	movwf	_lowByteChar
  6445                           
  6446                           ;CommunicationManager.c: 82: eepromReadLen=(unsigned char)char2bytetovalue(highByteChar,
      +                          lowByteChar,&Checksum);
  6447  00EE  0851               	movf	_lowByteChar,w
  6448  00EF  00DF               	movwf	??_ProtocolManager
  6449  00F0  085F               	movf	??_ProtocolManager,w
  6450  00F1  00F5               	movwf	char2bytetovalue@LowBchar
  6451  00F2  3056               	movlw	(low (_Checksum| 0))& (0+255)
  6452  00F3  00E0               	movwf	??_ProtocolManager+1
  6453  00F4  0860               	movf	??_ProtocolManager+1,w
  6454  00F5  00F6               	movwf	char2bytetovalue@cksum
  6455  00F6  084F               	movf	_highByteChar,w
  6456  00F7  318E  26AF  3180   	fcall	_char2bytetovalue
  6457  00FA  0020               	movlb	0	; select bank0
  6458  00FB  00E1               	movwf	??_ProtocolManager+2
  6459  00FC  0861               	movf	??_ProtocolManager+2,w
  6460  00FD  00CD               	movwf	_eepromReadLen
  6461                           
  6462                           ;CommunicationManager.c: 83: RxFrameDataLenCnt=RxFrameDataLenCnt+2;
  6463  00FE  0846               	movf	_RxFrameDataLenCnt,w
  6464  00FF  3E02               	addlw	2
  6465  0100  00DF               	movwf	??_ProtocolManager
  6466  0101  085F               	movf	??_ProtocolManager,w
  6467  0102  00C6               	movwf	_RxFrameDataLenCnt
  6468                           
  6469                           ;CommunicationManager.c: 84: CommandError=0;
  6470  0103  01C0               	clrf	_CommandError
  6471                           
  6472                           ;CommunicationManager.c: 85: if(eepromReadLen>16)
  6473  0104  3011               	movlw	17
  6474  0105  024D               	subwf	_eepromReadLen,w
  6475  0106  1C03               	skipc
  6476  0107  0008               	return
  6477                           
  6478                           ;CommunicationManager.c: 86: {
  6479                           ;CommunicationManager.c: 87: CommandError=1;
  6480  0108  01C0               	clrf	_CommandError
  6481  0109  0AC0               	incf	_CommandError,f
  6482                           
  6483                           ;CommunicationManager.c: 88: DelayMsecCount=0;
  6484  010A  01AE               	clrf	_DelayMsecCount
  6485  010B  01AF               	clrf	_DelayMsecCount+1
  6486  010C                     l4120:	
  6487                           ;CommunicationManager.c: 89: while(EUSART_Read()!='\n'){if(DelayMsecCount>20){break;}};
  6488                           
  6489  010C  318D  258C  3180   	fcall	_EUSART_Read
  6490  010F  3A0A               	xorlw	10
  6491  0110  1903               	btfsc	3,2
  6492  0111  291A               	goto	l4122
  6493  0112  3000               	movlw	0
  6494  0113  0020               	movlb	0	; select bank0
  6495  0114  022F               	subwf	_DelayMsecCount+1,w
  6496  0115  3015               	movlw	21
  6497  0116  1903               	skipnz
  6498  0117  022E               	subwf	_DelayMsecCount,w
  6499  0118  1C03               	skipc
  6500  0119  290C               	goto	l4120
  6501  011A                     l4122:	
  6502                           
  6503                           ;CommunicationManager.c: 90: PackageTxResponseNACK(RxFrameType);
  6504  011A  0020               	movlb	0	; select bank0
  6505  011B  0867               	movf	_RxFrameType,w
  6506  011C  3185  257E         	fcall	_PackageTxResponseNACK
  6507                           
  6508                           ;CommunicationManager.c: 92: RxFrameDecodeState=0;
  6509  011E  0020               	movlb	0	; select bank0
  6510  011F  01C7               	clrf	_RxFrameDecodeState
  6511                           
  6512                           ;CommunicationManager.c: 93: }
  6513                           ;CommunicationManager.c: 94: }
  6514  0120  0008               	return
  6515  0121                     l4126:	
  6516                           
  6517                           ;CommunicationManager.c: 95: else if(RxFrameType=='w')
  6518  0121  3077               	movlw	119
  6519  0122  0667               	xorwf	_RxFrameType,w
  6520  0123  1D03               	btfss	3,2
  6521  0124  29C1               	goto	l4176
  6522                           
  6523                           ;CommunicationManager.c: 96: {
  6524                           ;CommunicationManager.c: 97: RxFrameDecodeState=4;
  6525  0125  3004               	movlw	4
  6526  0126  00DF               	movwf	??_ProtocolManager
  6527  0127  085F               	movf	??_ProtocolManager,w
  6528  0128  00C7               	movwf	_RxFrameDecodeState
  6529                           
  6530                           ;CommunicationManager.c: 98: highByteChar=EUSART_Read();
  6531  0129  318D  258C  3180   	fcall	_EUSART_Read
  6532  012C  0020               	movlb	0	; select bank0
  6533  012D  00DF               	movwf	??_ProtocolManager
  6534  012E  085F               	movf	??_ProtocolManager,w
  6535  012F  00CF               	movwf	_highByteChar
  6536                           
  6537                           ;CommunicationManager.c: 99: lowByteChar=EUSART_Read();
  6538  0130  318D  258C  3180   	fcall	_EUSART_Read
  6539  0133  0020               	movlb	0	; select bank0
  6540  0134  00DF               	movwf	??_ProtocolManager
  6541  0135  085F               	movf	??_ProtocolManager,w
  6542  0136  00D1               	movwf	_lowByteChar
  6543                           
  6544                           ;CommunicationManager.c: 100: eepromWriteAddr=((unsigned int)char2bytetovalue(highByteCh
      +                          ar,lowByteChar,&Checksum))& 0x00FF;
  6545  0137  0851               	movf	_lowByteChar,w
  6546  0138  00DF               	movwf	??_ProtocolManager
  6547  0139  085F               	movf	??_ProtocolManager,w
  6548  013A  00F5               	movwf	char2bytetovalue@LowBchar
  6549  013B  3056               	movlw	(low (_Checksum| 0))& (0+255)
  6550  013C  00E0               	movwf	??_ProtocolManager+1
  6551  013D  0860               	movf	??_ProtocolManager+1,w
  6552  013E  00F6               	movwf	char2bytetovalue@cksum
  6553  013F  084F               	movf	_highByteChar,w
  6554  0140  318E  26AF  3180   	fcall	_char2bytetovalue
  6555  0143  0020               	movlb	0	; select bank0
  6556  0144  00E1               	movwf	??_ProtocolManager+2
  6557  0145  01E2               	clrf	??_ProtocolManager+3
  6558  0146  0861               	movf	??_ProtocolManager+2,w
  6559  0147  00BC               	movwf	_eepromWriteAddr
  6560  0148  0862               	movf	??_ProtocolManager+3,w
  6561  0149  00BD               	movwf	_eepromWriteAddr+1
  6562                           
  6563                           ;CommunicationManager.c: 101: RxFrameDataLenCnt=RxFrameDataLenCnt+2;
  6564  014A  0846               	movf	_RxFrameDataLenCnt,w
  6565  014B  3E02               	addlw	2
  6566  014C  00DF               	movwf	??_ProtocolManager
  6567  014D  085F               	movf	??_ProtocolManager,w
  6568  014E  00C6               	movwf	_RxFrameDataLenCnt
  6569                           
  6570                           ;CommunicationManager.c: 102: highByteChar=EUSART_Read();
  6571  014F  318D  258C  3180   	fcall	_EUSART_Read
  6572  0152  0020               	movlb	0	; select bank0
  6573  0153  00DF               	movwf	??_ProtocolManager
  6574  0154  085F               	movf	??_ProtocolManager,w
  6575  0155  00CF               	movwf	_highByteChar
  6576                           
  6577                           ;CommunicationManager.c: 103: lowByteChar=EUSART_Read();
  6578  0156  318D  258C  3180   	fcall	_EUSART_Read
  6579  0159  0020               	movlb	0	; select bank0
  6580  015A  00DF               	movwf	??_ProtocolManager
  6581  015B  085F               	movf	??_ProtocolManager,w
  6582  015C  00D1               	movwf	_lowByteChar
  6583                           
  6584                           ;CommunicationManager.c: 104: eepromWriteLen=(unsigned char)char2bytetovalue(highByteCha
      +                          r,lowByteChar,&Checksum);
  6585  015D  0851               	movf	_lowByteChar,w
  6586  015E  00DF               	movwf	??_ProtocolManager
  6587  015F  085F               	movf	??_ProtocolManager,w
  6588  0160  00F5               	movwf	char2bytetovalue@LowBchar
  6589  0161  3056               	movlw	(low (_Checksum| 0))& (0+255)
  6590  0162  00E0               	movwf	??_ProtocolManager+1
  6591  0163  0860               	movf	??_ProtocolManager+1,w
  6592  0164  00F6               	movwf	char2bytetovalue@cksum
  6593  0165  084F               	movf	_highByteChar,w
  6594  0166  318E  26AF  3180   	fcall	_char2bytetovalue
  6595  0169  0020               	movlb	0	; select bank0
  6596  016A  00E1               	movwf	??_ProtocolManager+2
  6597  016B  0861               	movf	??_ProtocolManager+2,w
  6598  016C  00CE               	movwf	_eepromWriteLen
  6599                           
  6600                           ;CommunicationManager.c: 105: RxFrameDataLenCnt=RxFrameDataLenCnt+2;
  6601  016D  0846               	movf	_RxFrameDataLenCnt,w
  6602  016E  3E02               	addlw	2
  6603  016F  00DF               	movwf	??_ProtocolManager
  6604  0170  085F               	movf	??_ProtocolManager,w
  6605  0171  00C6               	movwf	_RxFrameDataLenCnt
  6606                           
  6607                           ;CommunicationManager.c: 106: CommandError=0;
  6608  0172  01C0               	clrf	_CommandError
  6609                           
  6610                           ;CommunicationManager.c: 107: if(eepromWriteLen>16)
  6611  0173  3011               	movlw	17
  6612  0174  024E               	subwf	_eepromWriteLen,w
  6613  0175  1C03               	skipc
  6614  0176  2990               	goto	l4164
  6615                           
  6616                           ;CommunicationManager.c: 108: {
  6617                           ;CommunicationManager.c: 109: CommandError=1;
  6618  0177  01C0               	clrf	_CommandError
  6619  0178  0AC0               	incf	_CommandError,f
  6620                           
  6621                           ;CommunicationManager.c: 110: DelayMsecCount=0;
  6622  0179  01AE               	clrf	_DelayMsecCount
  6623  017A  01AF               	clrf	_DelayMsecCount+1
  6624  017B                     l4158:	
  6625                           ;CommunicationManager.c: 111: while(EUSART_Read()!='\n'){if(DelayMsecCount>20){break;}};
  6626                           
  6627  017B  318D  258C  3180   	fcall	_EUSART_Read
  6628  017E  3A0A               	xorlw	10
  6629  017F  1903               	btfsc	3,2
  6630  0180  2989               	goto	l4160
  6631  0181  3000               	movlw	0
  6632  0182  0020               	movlb	0	; select bank0
  6633  0183  022F               	subwf	_DelayMsecCount+1,w
  6634  0184  3015               	movlw	21
  6635  0185  1903               	skipnz
  6636  0186  022E               	subwf	_DelayMsecCount,w
  6637  0187  1C03               	skipc
  6638  0188  297B               	goto	l4158
  6639  0189                     l4160:	
  6640                           
  6641                           ;CommunicationManager.c: 112: PackageTxResponseNACK(RxFrameType);
  6642  0189  0020               	movlb	0	; select bank0
  6643  018A  0867               	movf	_RxFrameType,w
  6644  018B  3185  257E         	fcall	_PackageTxResponseNACK
  6645                           
  6646                           ;CommunicationManager.c: 114: RxFrameDecodeState=0;
  6647  018D  0020               	movlb	0	; select bank0
  6648  018E  01C7               	clrf	_RxFrameDecodeState
  6649                           
  6650                           ;CommunicationManager.c: 115: }
  6651  018F  0008               	return
  6652  0190                     l4164:	
  6653                           
  6654                           ;CommunicationManager.c: 116: else
  6655                           ;CommunicationManager.c: 117: {
  6656                           ;CommunicationManager.c: 118: for(k=0;k<eepromWriteLen;k++)
  6657  0190  01E3               	clrf	ProtocolManager@k
  6658  0191                     l4174:	
  6659  0191  084E               	movf	_eepromWriteLen,w
  6660  0192  0263               	subwf	ProtocolManager@k,w
  6661  0193  1803               	btfsc	3,0
  6662  0194  0008               	return
  6663                           
  6664                           ;CommunicationManager.c: 119: {
  6665                           ;CommunicationManager.c: 120: highByteChar=EUSART_Read();
  6666  0195  318D  258C  3180   	fcall	_EUSART_Read
  6667  0198  0020               	movlb	0	; select bank0
  6668  0199  00DF               	movwf	??_ProtocolManager
  6669  019A  085F               	movf	??_ProtocolManager,w
  6670  019B  00CF               	movwf	_highByteChar
  6671                           
  6672                           ;CommunicationManager.c: 121: lowByteChar=EUSART_Read();
  6673  019C  318D  258C  3180   	fcall	_EUSART_Read
  6674  019F  0020               	movlb	0	; select bank0
  6675  01A0  00DF               	movwf	??_ProtocolManager
  6676  01A1  085F               	movf	??_ProtocolManager,w
  6677  01A2  00D1               	movwf	_lowByteChar
  6678                           
  6679                           ;CommunicationManager.c: 122: eepromWriteData[k]=(unsigned char)char2bytetovalue(highByt
      +                          eChar,lowByteChar,&Checksum);
  6680  01A3  0851               	movf	_lowByteChar,w
  6681  01A4  00DF               	movwf	??_ProtocolManager
  6682  01A5  085F               	movf	??_ProtocolManager,w
  6683  01A6  00F5               	movwf	char2bytetovalue@LowBchar
  6684  01A7  3056               	movlw	(low (_Checksum| 0))& (0+255)
  6685  01A8  00E0               	movwf	??_ProtocolManager+1
  6686  01A9  0860               	movf	??_ProtocolManager+1,w
  6687  01AA  00F6               	movwf	char2bytetovalue@cksum
  6688  01AB  084F               	movf	_highByteChar,w
  6689  01AC  318E  26AF  3180   	fcall	_char2bytetovalue
  6690  01AF  0020               	movlb	0	; select bank0
  6691  01B0  00E1               	movwf	??_ProtocolManager+2
  6692  01B1  0863               	movf	ProtocolManager@k,w
  6693  01B2  3EA0               	addlw	(low (_eepromWriteData| 0))& (0+255)
  6694  01B3  0086               	movwf	6
  6695  01B4  0187               	clrf	7
  6696  01B5  0861               	movf	??_ProtocolManager+2,w
  6697  01B6  0081               	movwf	1
  6698                           
  6699                           ;CommunicationManager.c: 123: RxFrameDataLenCnt=RxFrameDataLenCnt+2;
  6700  01B7  0846               	movf	_RxFrameDataLenCnt,w
  6701  01B8  3E02               	addlw	2
  6702  01B9  00DF               	movwf	??_ProtocolManager
  6703  01BA  085F               	movf	??_ProtocolManager,w
  6704  01BB  00C6               	movwf	_RxFrameDataLenCnt
  6705  01BC  3001               	movlw	1
  6706  01BD  00DF               	movwf	??_ProtocolManager
  6707  01BE  085F               	movf	??_ProtocolManager,w
  6708  01BF  07E3               	addwf	ProtocolManager@k,f
  6709  01C0  2991               	goto	l4174
  6710  01C1                     l4176:	
  6711                           ;CommunicationManager.c: 125: }
  6712                           ;CommunicationManager.c: 126: }
  6713                           ;CommunicationManager.c: 128: }
  6714                           
  6715                           
  6716                           ;CommunicationManager.c: 129: else if(RxFrameType=='A')
  6717  01C1  3041               	movlw	65
  6718  01C2  0667               	xorwf	_RxFrameType,w
  6719  01C3  1D03               	btfss	3,2
  6720  01C4  29E5               	goto	l4188
  6721                           
  6722                           ;CommunicationManager.c: 130: {
  6723                           ;CommunicationManager.c: 131: RxFrameDecodeState=4;
  6724  01C5  3004               	movlw	4
  6725  01C6  00DF               	movwf	??_ProtocolManager
  6726  01C7  085F               	movf	??_ProtocolManager,w
  6727  01C8  00C7               	movwf	_RxFrameDecodeState
  6728                           
  6729                           ;CommunicationManager.c: 132: lowByteChar=EUSART_Read();
  6730  01C9  318D  258C  3180   	fcall	_EUSART_Read
  6731  01CC  0020               	movlb	0	; select bank0
  6732  01CD  00DF               	movwf	??_ProtocolManager
  6733  01CE  085F               	movf	??_ProtocolManager,w
  6734  01CF  00D1               	movwf	_lowByteChar
  6735                           
  6736                           ;CommunicationManager.c: 133: ChannelNumberChar=lowByteChar;
  6737  01D0  0851               	movf	_lowByteChar,w
  6738  01D1  00DF               	movwf	??_ProtocolManager
  6739  01D2  085F               	movf	??_ProtocolManager,w
  6740  01D3  00E6               	movwf	_ChannelNumberChar
  6741                           
  6742                           ;CommunicationManager.c: 134: ChannelNumber=char1bytetovalue(lowByteChar,&Checksum);
  6743  01D4  3056               	movlw	(low (_Checksum| 0))& (0+255)
  6744  01D5  00DF               	movwf	??_ProtocolManager
  6745  01D6  085F               	movf	??_ProtocolManager,w
  6746  01D7  00F5               	movwf	char1bytetovalue@cksum
  6747  01D8  0851               	movf	_lowByteChar,w
  6748  01D9  318E  2612         	fcall	_char1bytetovalue
  6749  01DB  0020               	movlb	0	; select bank0
  6750  01DC  00E0               	movwf	??_ProtocolManager+1
  6751  01DD  0860               	movf	??_ProtocolManager+1,w
  6752  01DE  00BF               	movwf	_ChannelNumber
  6753                           
  6754                           ;CommunicationManager.c: 135: RxFrameDataLenCnt=RxFrameDataLenCnt + 1;
  6755  01DF  0846               	movf	_RxFrameDataLenCnt,w
  6756  01E0  3E01               	addlw	1
  6757  01E1  00DF               	movwf	??_ProtocolManager
  6758  01E2  085F               	movf	??_ProtocolManager,w
  6759  01E3  00C6               	movwf	_RxFrameDataLenCnt
  6760                           
  6761                           ;CommunicationManager.c: 136: }
  6762  01E4  0008               	return
  6763  01E5                     l4188:	
  6764                           
  6765                           ;CommunicationManager.c: 137: else if(RxFrameType=='I')
  6766  01E5  3049               	movlw	73
  6767  01E6  0667               	xorwf	_RxFrameType,w
  6768  01E7  1D03               	btfss	3,2
  6769  01E8  2A09               	goto	l4200
  6770                           
  6771                           ;CommunicationManager.c: 138: {
  6772                           ;CommunicationManager.c: 139: RxFrameDecodeState=4;
  6773  01E9  3004               	movlw	4
  6774  01EA  00DF               	movwf	??_ProtocolManager
  6775  01EB  085F               	movf	??_ProtocolManager,w
  6776  01EC  00C7               	movwf	_RxFrameDecodeState
  6777                           
  6778                           ;CommunicationManager.c: 140: lowByteChar=EUSART_Read();
  6779  01ED  318D  258C  3180   	fcall	_EUSART_Read
  6780  01F0  0020               	movlb	0	; select bank0
  6781  01F1  00DF               	movwf	??_ProtocolManager
  6782  01F2  085F               	movf	??_ProtocolManager,w
  6783  01F3  00D1               	movwf	_lowByteChar
  6784                           
  6785                           ;CommunicationManager.c: 141: ChannelNumberChar=lowByteChar;
  6786  01F4  0851               	movf	_lowByteChar,w
  6787  01F5  00DF               	movwf	??_ProtocolManager
  6788  01F6  085F               	movf	??_ProtocolManager,w
  6789  01F7  00E6               	movwf	_ChannelNumberChar
  6790                           
  6791                           ;CommunicationManager.c: 142: ChannelNumber=char1bytetovalue(lowByteChar,&Checksum);
  6792  01F8  3056               	movlw	(low (_Checksum| 0))& (0+255)
  6793  01F9  00DF               	movwf	??_ProtocolManager
  6794  01FA  085F               	movf	??_ProtocolManager,w
  6795  01FB  00F5               	movwf	char1bytetovalue@cksum
  6796  01FC  0851               	movf	_lowByteChar,w
  6797  01FD  318E  2612         	fcall	_char1bytetovalue
  6798  01FF  0020               	movlb	0	; select bank0
  6799  0200  00E0               	movwf	??_ProtocolManager+1
  6800  0201  0860               	movf	??_ProtocolManager+1,w
  6801  0202  00BF               	movwf	_ChannelNumber
  6802                           
  6803                           ;CommunicationManager.c: 143: RxFrameDataLenCnt=RxFrameDataLenCnt + 1;
  6804  0203  0846               	movf	_RxFrameDataLenCnt,w
  6805  0204  3E01               	addlw	1
  6806  0205  00DF               	movwf	??_ProtocolManager
  6807  0206  085F               	movf	??_ProtocolManager,w
  6808  0207  00C6               	movwf	_RxFrameDataLenCnt
  6809                           
  6810                           ;CommunicationManager.c: 144: }
  6811  0208  0008               	return
  6812  0209                     l4200:	
  6813                           
  6814                           ;CommunicationManager.c: 145: else if(RxFrameType=='L')
  6815  0209  304C               	movlw	76
  6816  020A  0667               	xorwf	_RxFrameType,w
  6817  020B  1D03               	btfss	3,2
  6818  020C  2A5D               	goto	l4222
  6819                           
  6820                           ;CommunicationManager.c: 146: {
  6821                           ;CommunicationManager.c: 147: RxFrameDecodeState=4;
  6822  020D  3004               	movlw	4
  6823  020E  00DF               	movwf	??_ProtocolManager
  6824  020F  085F               	movf	??_ProtocolManager,w
  6825  0210  00C7               	movwf	_RxFrameDecodeState
  6826                           
  6827                           ;CommunicationManager.c: 148: SetLEDcolor=EUSART_Read();
  6828  0211  318D  258C  3180   	fcall	_EUSART_Read
  6829  0214  0020               	movlb	0	; select bank0
  6830  0215  00DF               	movwf	??_ProtocolManager
  6831  0216  085F               	movf	??_ProtocolManager,w
  6832  0217  00E8               	movwf	_SetLEDcolor
  6833                           
  6834                           ;CommunicationManager.c: 149: Checksum+=SetLEDcolor;
  6835  0218  0868               	movf	_SetLEDcolor,w
  6836  0219  00DF               	movwf	??_ProtocolManager
  6837  021A  085F               	movf	??_ProtocolManager,w
  6838  021B  07D6               	addwf	_Checksum,f
  6839                           
  6840                           ;CommunicationManager.c: 150: highByteChar=EUSART_Read();
  6841  021C  318D  258C  3180   	fcall	_EUSART_Read
  6842  021F  0020               	movlb	0	; select bank0
  6843  0220  00DF               	movwf	??_ProtocolManager
  6844  0221  085F               	movf	??_ProtocolManager,w
  6845  0222  00CF               	movwf	_highByteChar
  6846                           
  6847                           ;CommunicationManager.c: 151: lowByteChar=EUSART_Read();
  6848  0223  318D  258C  3180   	fcall	_EUSART_Read
  6849  0226  0020               	movlb	0	; select bank0
  6850  0227  00DF               	movwf	??_ProtocolManager
  6851  0228  085F               	movf	??_ProtocolManager,w
  6852  0229  00D1               	movwf	_lowByteChar
  6853                           
  6854                           ;CommunicationManager.c: 152: SetLedONDurationSec=(unsigned char)char2bytetovalue(highBy
      +                          teChar,lowByteChar,&Checksum);
  6855  022A  0851               	movf	_lowByteChar,w
  6856  022B  00DF               	movwf	??_ProtocolManager
  6857  022C  085F               	movf	??_ProtocolManager,w
  6858  022D  00F5               	movwf	char2bytetovalue@LowBchar
  6859  022E  3056               	movlw	(low (_Checksum| 0))& (0+255)
  6860  022F  00E0               	movwf	??_ProtocolManager+1
  6861  0230  0860               	movf	??_ProtocolManager+1,w
  6862  0231  00F6               	movwf	char2bytetovalue@cksum
  6863  0232  084F               	movf	_highByteChar,w
  6864  0233  318E  26AF  3180   	fcall	_char2bytetovalue
  6865  0236  0020               	movlb	0	; select bank0
  6866  0237  00E1               	movwf	??_ProtocolManager+2
  6867  0238  0861               	movf	??_ProtocolManager+2,w
  6868  0239  00CB               	movwf	_SetLedONDurationSec
  6869                           
  6870                           ;CommunicationManager.c: 153: highByteChar=EUSART_Read();
  6871  023A  318D  258C  3180   	fcall	_EUSART_Read
  6872  023D  0020               	movlb	0	; select bank0
  6873  023E  00DF               	movwf	??_ProtocolManager
  6874  023F  085F               	movf	??_ProtocolManager,w
  6875  0240  00CF               	movwf	_highByteChar
  6876                           
  6877                           ;CommunicationManager.c: 154: lowByteChar=EUSART_Read();
  6878  0241  318D  258C  3180   	fcall	_EUSART_Read
  6879  0244  0020               	movlb	0	; select bank0
  6880  0245  00DF               	movwf	??_ProtocolManager
  6881  0246  085F               	movf	??_ProtocolManager,w
  6882  0247  00D1               	movwf	_lowByteChar
  6883                           
  6884                           ;CommunicationManager.c: 155: SetLedONNumBlink=(unsigned char)char2bytetovalue(highByteC
      +                          har,lowByteChar,&Checksum);
  6885  0248  0851               	movf	_lowByteChar,w
  6886  0249  00DF               	movwf	??_ProtocolManager
  6887  024A  085F               	movf	??_ProtocolManager,w
  6888  024B  00F5               	movwf	char2bytetovalue@LowBchar
  6889  024C  3056               	movlw	(low (_Checksum| 0))& (0+255)
  6890  024D  00E0               	movwf	??_ProtocolManager+1
  6891  024E  0860               	movf	??_ProtocolManager+1,w
  6892  024F  00F6               	movwf	char2bytetovalue@cksum
  6893  0250  084F               	movf	_highByteChar,w
  6894  0251  318E  26AF         	fcall	_char2bytetovalue
  6895  0253  0020               	movlb	0	; select bank0
  6896  0254  00E1               	movwf	??_ProtocolManager+2
  6897  0255  0861               	movf	??_ProtocolManager+2,w
  6898  0256  00CC               	movwf	_SetLedONNumBlink
  6899                           
  6900                           ;CommunicationManager.c: 156: RxFrameDataLenCnt=RxFrameDataLenCnt + 5;
  6901  0257  0846               	movf	_RxFrameDataLenCnt,w
  6902  0258  3E05               	addlw	5
  6903  0259  00DF               	movwf	??_ProtocolManager
  6904  025A  085F               	movf	??_ProtocolManager,w
  6905  025B  00C6               	movwf	_RxFrameDataLenCnt
  6906                           
  6907                           ;CommunicationManager.c: 157: }
  6908  025C  0008               	return
  6909  025D                     l4222:	
  6910                           
  6911                           ;CommunicationManager.c: 158: else if(RxFrameType=='B')
  6912  025D  3042               	movlw	66
  6913  025E  0667               	xorwf	_RxFrameType,w
  6914  025F  1D03               	btfss	3,2
  6915  0260  2AA6               	goto	l4240
  6916                           
  6917                           ;CommunicationManager.c: 159: {
  6918                           ;CommunicationManager.c: 160: RxFrameDecodeState=4;
  6919  0261  3004               	movlw	4
  6920  0262  00DF               	movwf	??_ProtocolManager
  6921  0263  085F               	movf	??_ProtocolManager,w
  6922  0264  00C7               	movwf	_RxFrameDecodeState
  6923                           
  6924                           ;CommunicationManager.c: 161: highByteChar=EUSART_Read();
  6925  0265  318D  258C  3180   	fcall	_EUSART_Read
  6926  0268  0020               	movlb	0	; select bank0
  6927  0269  00DF               	movwf	??_ProtocolManager
  6928  026A  085F               	movf	??_ProtocolManager,w
  6929  026B  00CF               	movwf	_highByteChar
  6930                           
  6931                           ;CommunicationManager.c: 162: lowByteChar=EUSART_Read();
  6932  026C  318D  258C  3180   	fcall	_EUSART_Read
  6933  026F  0020               	movlb	0	; select bank0
  6934  0270  00DF               	movwf	??_ProtocolManager
  6935  0271  085F               	movf	??_ProtocolManager,w
  6936  0272  00D1               	movwf	_lowByteChar
  6937                           
  6938                           ;CommunicationManager.c: 163: SetBuzzDurationSec=(unsigned char)char2bytetovalue(highByt
      +                          eChar,lowByteChar,&Checksum);
  6939  0273  0851               	movf	_lowByteChar,w
  6940  0274  00DF               	movwf	??_ProtocolManager
  6941  0275  085F               	movf	??_ProtocolManager,w
  6942  0276  00F5               	movwf	char2bytetovalue@LowBchar
  6943  0277  3056               	movlw	(low (_Checksum| 0))& (0+255)
  6944  0278  00E0               	movwf	??_ProtocolManager+1
  6945  0279  0860               	movf	??_ProtocolManager+1,w
  6946  027A  00F6               	movwf	char2bytetovalue@cksum
  6947  027B  084F               	movf	_highByteChar,w
  6948  027C  318E  26AF  3180   	fcall	_char2bytetovalue
  6949  027F  0020               	movlb	0	; select bank0
  6950  0280  00E1               	movwf	??_ProtocolManager+2
  6951  0281  0861               	movf	??_ProtocolManager+2,w
  6952  0282  00C8               	movwf	_SetBuzzDurationSec
  6953                           
  6954                           ;CommunicationManager.c: 164: highByteChar=EUSART_Read();
  6955  0283  318D  258C  3180   	fcall	_EUSART_Read
  6956  0286  0020               	movlb	0	; select bank0
  6957  0287  00DF               	movwf	??_ProtocolManager
  6958  0288  085F               	movf	??_ProtocolManager,w
  6959  0289  00CF               	movwf	_highByteChar
  6960                           
  6961                           ;CommunicationManager.c: 165: lowByteChar=EUSART_Read();
  6962  028A  318D  258C  3180   	fcall	_EUSART_Read
  6963  028D  0020               	movlb	0	; select bank0
  6964  028E  00DF               	movwf	??_ProtocolManager
  6965  028F  085F               	movf	??_ProtocolManager,w
  6966  0290  00D1               	movwf	_lowByteChar
  6967                           
  6968                           ;CommunicationManager.c: 166: SetBuzzNumBeep=(unsigned char)char2bytetovalue(highByteCha
      +                          r,lowByteChar,&Checksum);
  6969  0291  0851               	movf	_lowByteChar,w
  6970  0292  00DF               	movwf	??_ProtocolManager
  6971  0293  085F               	movf	??_ProtocolManager,w
  6972  0294  00F5               	movwf	char2bytetovalue@LowBchar
  6973  0295  3056               	movlw	(low (_Checksum| 0))& (0+255)
  6974  0296  00E0               	movwf	??_ProtocolManager+1
  6975  0297  0860               	movf	??_ProtocolManager+1,w
  6976  0298  00F6               	movwf	char2bytetovalue@cksum
  6977  0299  084F               	movf	_highByteChar,w
  6978  029A  318E  26AF         	fcall	_char2bytetovalue
  6979  029C  0020               	movlb	0	; select bank0
  6980  029D  00E1               	movwf	??_ProtocolManager+2
  6981  029E  0861               	movf	??_ProtocolManager+2,w
  6982  029F  00C9               	movwf	_SetBuzzNumBeep
  6983                           
  6984                           ;CommunicationManager.c: 167: RxFrameDataLenCnt=RxFrameDataLenCnt + 4;
  6985  02A0  0846               	movf	_RxFrameDataLenCnt,w
  6986  02A1  3E04               	addlw	4
  6987  02A2  00DF               	movwf	??_ProtocolManager
  6988  02A3  085F               	movf	??_ProtocolManager,w
  6989  02A4  00C6               	movwf	_RxFrameDataLenCnt
  6990                           
  6991                           ;CommunicationManager.c: 168: }
  6992  02A5  0008               	return
  6993  02A6                     l4240:	
  6994                           
  6995                           ;CommunicationManager.c: 169: else if(RxFrameType=='F')
  6996  02A6  3046               	movlw	70
  6997  02A7  0667               	xorwf	_RxFrameType,w
  6998  02A8  1D03               	btfss	3,2
  6999  02A9  2AD1               	goto	l4252
  7000                           
  7001                           ;CommunicationManager.c: 170: {
  7002                           ;CommunicationManager.c: 171: RxFrameDecodeState=4;
  7003  02AA  3004               	movlw	4
  7004  02AB  00DF               	movwf	??_ProtocolManager
  7005  02AC  085F               	movf	??_ProtocolManager,w
  7006  02AD  00C7               	movwf	_RxFrameDecodeState
  7007                           
  7008                           ;CommunicationManager.c: 172: highByteChar=EUSART_Read();
  7009  02AE  318D  258C  3180   	fcall	_EUSART_Read
  7010  02B1  0020               	movlb	0	; select bank0
  7011  02B2  00DF               	movwf	??_ProtocolManager
  7012  02B3  085F               	movf	??_ProtocolManager,w
  7013  02B4  00CF               	movwf	_highByteChar
  7014                           
  7015                           ;CommunicationManager.c: 173: lowByteChar=EUSART_Read();
  7016  02B5  318D  258C  3180   	fcall	_EUSART_Read
  7017  02B8  0020               	movlb	0	; select bank0
  7018  02B9  00DF               	movwf	??_ProtocolManager
  7019  02BA  085F               	movf	??_ProtocolManager,w
  7020  02BB  00D1               	movwf	_lowByteChar
  7021                           
  7022                           ;CommunicationManager.c: 174: SetFANOnDurationSec=(unsigned char)char2bytetovalue(highBy
      +                          teChar,lowByteChar,&Checksum);
  7023  02BC  0851               	movf	_lowByteChar,w
  7024  02BD  00DF               	movwf	??_ProtocolManager
  7025  02BE  085F               	movf	??_ProtocolManager,w
  7026  02BF  00F5               	movwf	char2bytetovalue@LowBchar
  7027  02C0  3056               	movlw	(low (_Checksum| 0))& (0+255)
  7028  02C1  00E0               	movwf	??_ProtocolManager+1
  7029  02C2  0860               	movf	??_ProtocolManager+1,w
  7030  02C3  00F6               	movwf	char2bytetovalue@cksum
  7031  02C4  084F               	movf	_highByteChar,w
  7032  02C5  318E  26AF         	fcall	_char2bytetovalue
  7033  02C7  0020               	movlb	0	; select bank0
  7034  02C8  00E1               	movwf	??_ProtocolManager+2
  7035  02C9  0861               	movf	??_ProtocolManager+2,w
  7036  02CA  00CA               	movwf	_SetFANOnDurationSec
  7037                           
  7038                           ;CommunicationManager.c: 175: RxFrameDataLenCnt=RxFrameDataLenCnt + 2;
  7039  02CB  0846               	movf	_RxFrameDataLenCnt,w
  7040  02CC  3E02               	addlw	2
  7041  02CD  00DF               	movwf	??_ProtocolManager
  7042  02CE  085F               	movf	??_ProtocolManager,w
  7043  02CF  00C6               	movwf	_RxFrameDataLenCnt
  7044                           
  7045                           ;CommunicationManager.c: 176: }
  7046  02D0  0008               	return
  7047  02D1                     l4252:	
  7048                           
  7049                           ;CommunicationManager.c: 177: else
  7050                           ;CommunicationManager.c: 178: {
  7051                           ;CommunicationManager.c: 179: RxFrameDataLenCnt=0;
  7052  02D1  01C6               	clrf	_RxFrameDataLenCnt
  7053                           
  7054                           ;CommunicationManager.c: 180: RxFrameDecodeState=0;
  7055  02D2  01C7               	clrf	_RxFrameDecodeState
  7056                           
  7057                           ;CommunicationManager.c: 181: }
  7058                           ;CommunicationManager.c: 182: break;
  7059  02D3  0008               	return
  7060  02D4                     l4254:	
  7061                           ;CommunicationManager.c: 184: case 4:
  7062                           
  7063                           
  7064                           ;CommunicationManager.c: 185: highByteChar=EUSART_Read();
  7065  02D4  318D  258C  3180   	fcall	_EUSART_Read
  7066  02D7  0020               	movlb	0	; select bank0
  7067  02D8  00DF               	movwf	??_ProtocolManager
  7068  02D9  085F               	movf	??_ProtocolManager,w
  7069  02DA  00CF               	movwf	_highByteChar
  7070                           
  7071                           ;CommunicationManager.c: 186: lowByteChar=EUSART_Read();
  7072  02DB  318D  258C  3180   	fcall	_EUSART_Read
  7073  02DE  0020               	movlb	0	; select bank0
  7074  02DF  00DF               	movwf	??_ProtocolManager
  7075  02E0  085F               	movf	??_ProtocolManager,w
  7076  02E1  00D1               	movwf	_lowByteChar
  7077                           
  7078                           ;CommunicationManager.c: 187: RXChecksum=(unsigned char)char2bytetovalue(highByteChar,lo
      +                          wByteChar,&k);
  7079  02E2  0851               	movf	_lowByteChar,w
  7080  02E3  00DF               	movwf	??_ProtocolManager
  7081  02E4  085F               	movf	??_ProtocolManager,w
  7082  02E5  00F5               	movwf	char2bytetovalue@LowBchar
  7083  02E6  3063               	movlw	(low (ProtocolManager@k| 0))& (0+255)
  7084  02E7  00E0               	movwf	??_ProtocolManager+1
  7085  02E8  0860               	movf	??_ProtocolManager+1,w
  7086  02E9  00F6               	movwf	char2bytetovalue@cksum
  7087  02EA  084F               	movf	_highByteChar,w
  7088  02EB  318E  26AF  3180   	fcall	_char2bytetovalue
  7089  02EE  0020               	movlb	0	; select bank0
  7090  02EF  00E1               	movwf	??_ProtocolManager+2
  7091  02F0  0861               	movf	??_ProtocolManager+2,w
  7092  02F1  00C4               	movwf	_RXChecksum
  7093                           
  7094                           ;CommunicationManager.c: 188: RxFrameDataLenCnt=RxFrameDataLenCnt+2;
  7095  02F2  0846               	movf	_RxFrameDataLenCnt,w
  7096  02F3  3E02               	addlw	2
  7097  02F4  00DF               	movwf	??_ProtocolManager
  7098  02F5  085F               	movf	??_ProtocolManager,w
  7099  02F6  00C6               	movwf	_RxFrameDataLenCnt
  7100                           
  7101                           ;CommunicationManager.c: 189: Checksum=~Checksum;
  7102  02F7  09D6               	comf	_Checksum,f
  7103                           
  7104                           ;CommunicationManager.c: 190: if((RXChecksum==(Checksum)) && (EUSART_Read()=='#') && (EU
      +                          SART_Read()=='\r') && (EUSART_Read()=='\n'))
  7105  02F8  0844               	movf	_RXChecksum,w
  7106  02F9  0656               	xorwf	_Checksum,w
  7107  02FA  1D03               	skipz
  7108  02FB  2B19               	goto	l4274
  7109  02FC  318D  258C  3180   	fcall	_EUSART_Read
  7110  02FF  3A23               	xorlw	35
  7111  0300  1D03               	skipz
  7112  0301  2B19               	goto	l4274
  7113  0302  318D  258C  3180   	fcall	_EUSART_Read
  7114  0305  3A0D               	xorlw	13
  7115  0306  1D03               	skipz
  7116  0307  2B19               	goto	l4274
  7117  0308  318D  258C  3180   	fcall	_EUSART_Read
  7118  030B  3A0A               	xorlw	10
  7119  030C  1D03               	skipz
  7120  030D  2B19               	goto	l4274
  7121                           
  7122                           ;CommunicationManager.c: 191: {
  7123                           ;CommunicationManager.c: 192: RxFrameDecodeState=5;
  7124  030E  3005               	movlw	5
  7125  030F  0020               	movlb	0	; select bank0
  7126  0310  00DF               	movwf	??_ProtocolManager
  7127  0311  085F               	movf	??_ProtocolManager,w
  7128  0312  00C7               	movwf	_RxFrameDecodeState
  7129                           
  7130                           ;CommunicationManager.c: 193: RxFrameDataLenCnt=RxFrameDataLenCnt+3;
  7131  0313  0846               	movf	_RxFrameDataLenCnt,w
  7132  0314  3E03               	addlw	3
  7133  0315  00DF               	movwf	??_ProtocolManager
  7134  0316  085F               	movf	??_ProtocolManager,w
  7135  0317  00C6               	movwf	_RxFrameDataLenCnt
  7136                           
  7137                           ;CommunicationManager.c: 194: }
  7138  0318  0008               	return
  7139  0319                     l4274:	
  7140                           
  7141                           ;CommunicationManager.c: 195: else
  7142                           ;CommunicationManager.c: 196: {
  7143                           ;CommunicationManager.c: 197: RxFrameDataLenCnt=0;
  7144  0319  0020               	movlb	0	; select bank0
  7145  031A  01C6               	clrf	_RxFrameDataLenCnt
  7146                           
  7147                           ;CommunicationManager.c: 198: RxFrameDecodeState=0;
  7148  031B  01C7               	clrf	_RxFrameDecodeState
  7149                           
  7150                           ;CommunicationManager.c: 199: }
  7151                           ;CommunicationManager.c: 201: break;
  7152  031C  0008               	return
  7153  031D                     l4276:	
  7154                           ;CommunicationManager.c: 203: case 5:
  7155                           
  7156                           
  7157                           ;CommunicationManager.c: 204: if(RxFrameDataLenCnt==RxFrameDataLen)
  7158  031D  0846               	movf	_RxFrameDataLenCnt,w
  7159  031E  0645               	xorwf	_RxFrameDataLen,w
  7160  031F  1D03               	skipz
  7161  0320  2C6C               	goto	l4392
  7162                           
  7163                           ;CommunicationManager.c: 205: {
  7164                           ;CommunicationManager.c: 206: if(RxFrameType=='r')
  7165  0321  3072               	movlw	114
  7166  0322  0667               	xorwf	_RxFrameType,w
  7167  0323  1D03               	btfss	3,2
  7168  0324  2B54               	goto	l4292
  7169                           
  7170                           ;CommunicationManager.c: 207: {
  7171                           ;CommunicationManager.c: 208: for(k=0;k<eepromReadLen;k++)
  7172  0325  01E3               	clrf	ProtocolManager@k
  7173  0326                     l4288:	
  7174  0326  084D               	movf	_eepromReadLen,w
  7175  0327  0263               	subwf	ProtocolManager@k,w
  7176  0328  1803               	btfsc	3,0
  7177  0329  2B47               	goto	l4290
  7178                           
  7179                           ;CommunicationManager.c: 209: {
  7180                           ;CommunicationManager.c: 210: eepromReadAddr=eepromReadAddr | 0xF000;
  7181  032A  3000               	movlw	0
  7182  032B  043A               	iorwf	_eepromReadAddr,w
  7183  032C  00BA               	movwf	_eepromReadAddr
  7184  032D  30F0               	movlw	240
  7185  032E  043B               	iorwf	_eepromReadAddr+1,w
  7186  032F  00BB               	movwf	_eepromReadAddr+1
  7187                           
  7188                           ;CommunicationManager.c: 211: eepromReadData[k]=DATAEE_ReadByte(eepromReadAddr+k);
  7189  0330  0863               	movf	ProtocolManager@k,w
  7190  0331  073A               	addwf	_eepromReadAddr,w
  7191  0332  00F2               	movwf	DATAEE_ReadByte@bAdd
  7192  0333  083B               	movf	_eepromReadAddr+1,w
  7193  0334  1803               	skipnc
  7194  0335  0A3B               	incf	_eepromReadAddr+1,w
  7195  0336  00F3               	movwf	DATAEE_ReadByte@bAdd+1
  7196  0337  318D  25B5  3180   	fcall	_DATAEE_ReadByte
  7197  033A  0020               	movlb	0	; select bank0
  7198  033B  00DF               	movwf	??_ProtocolManager
  7199  033C  0863               	movf	ProtocolManager@k,w
  7200  033D  3EBA               	addlw	(low (_eepromReadData| 0))& (0+255)
  7201  033E  0086               	movwf	6
  7202  033F  0187               	clrf	7
  7203  0340  085F               	movf	??_ProtocolManager,w
  7204  0341  0081               	movwf	1
  7205  0342  3001               	movlw	1
  7206  0343  00DF               	movwf	??_ProtocolManager
  7207  0344  085F               	movf	??_ProtocolManager,w
  7208  0345  07E3               	addwf	ProtocolManager@k,f
  7209  0346  2B26               	goto	l4288
  7210  0347                     l4290:	
  7211                           
  7212                           ;CommunicationManager.c: 212: }
  7213                           ;CommunicationManager.c: 213: PackageTxResponseData(RxFrameType,eepromReadData,eepromRea
      +                          dLen);
  7214  0347  30BA               	movlw	(low (_eepromReadData| 0))& (0+255)
  7215  0348  00DF               	movwf	??_ProtocolManager
  7216  0349  085F               	movf	??_ProtocolManager,w
  7217  034A  00D9               	movwf	PackageTxResponseData@data
  7218  034B  084D               	movf	_eepromReadLen,w
  7219  034C  00E0               	movwf	??_ProtocolManager+1
  7220  034D  0860               	movf	??_ProtocolManager+1,w
  7221  034E  00DA               	movwf	PackageTxResponseData@dataLen
  7222  034F  0867               	movf	_RxFrameType,w
  7223  0350  3184  247E  3180   	fcall	_PackageTxResponseData
  7224                           
  7225                           ;CommunicationManager.c: 214: }
  7226  0353  2C6C               	goto	l4392
  7227  0354                     l4292:	
  7228                           
  7229                           ;CommunicationManager.c: 215: else if(RxFrameType=='w')
  7230  0354  3077               	movlw	119
  7231  0355  0020               	movlb	0	; select bank0
  7232  0356  0667               	xorwf	_RxFrameType,w
  7233  0357  1D03               	btfss	3,2
  7234  0358  2B81               	goto	l4306
  7235                           
  7236                           ;CommunicationManager.c: 216: {
  7237                           ;CommunicationManager.c: 217: for(k=0;k<eepromWriteLen;k++)
  7238  0359  01E3               	clrf	ProtocolManager@k
  7239  035A                     l4302:	
  7240  035A  084E               	movf	_eepromWriteLen,w
  7241  035B  0263               	subwf	ProtocolManager@k,w
  7242  035C  1803               	btfsc	3,0
  7243  035D  2B7C               	goto	l4304
  7244                           
  7245                           ;CommunicationManager.c: 218: {
  7246                           ;CommunicationManager.c: 219: eepromWriteAddr=eepromWriteAddr | 0xF000;
  7247  035E  3000               	movlw	0
  7248  035F  043C               	iorwf	_eepromWriteAddr,w
  7249  0360  00BC               	movwf	_eepromWriteAddr
  7250  0361  30F0               	movlw	240
  7251  0362  043D               	iorwf	_eepromWriteAddr+1,w
  7252  0363  00BD               	movwf	_eepromWriteAddr+1
  7253                           
  7254                           ;CommunicationManager.c: 220: DATAEE_WriteByte((eepromWriteAddr+k), eepromWriteData[k]);
  7255  0364  0863               	movf	ProtocolManager@k,w
  7256  0365  073C               	addwf	_eepromWriteAddr,w
  7257  0366  00F2               	movwf	DATAEE_WriteByte@bAdd
  7258  0367  083D               	movf	_eepromWriteAddr+1,w
  7259  0368  1803               	skipnc
  7260  0369  0A3D               	incf	_eepromWriteAddr+1,w
  7261  036A  00F3               	movwf	DATAEE_WriteByte@bAdd+1
  7262  036B  0863               	movf	ProtocolManager@k,w
  7263  036C  3EA0               	addlw	(low (_eepromWriteData| 0))& (0+255)
  7264  036D  0086               	movwf	6
  7265  036E  0187               	clrf	7
  7266  036F  0801               	movf	1,w
  7267  0370  00DF               	movwf	??_ProtocolManager
  7268  0371  085F               	movf	??_ProtocolManager,w
  7269  0372  00F4               	movwf	DATAEE_WriteByte@bData
  7270  0373  318E  2674  3180   	fcall	_DATAEE_WriteByte
  7271  0376  3001               	movlw	1
  7272  0377  0020               	movlb	0	; select bank0
  7273  0378  00DF               	movwf	??_ProtocolManager
  7274  0379  085F               	movf	??_ProtocolManager,w
  7275  037A  07E3               	addwf	ProtocolManager@k,f
  7276  037B  2B5A               	goto	l4302
  7277  037C                     l4304:	
  7278                           
  7279                           ;CommunicationManager.c: 221: }
  7280                           ;CommunicationManager.c: 222: PackageTxResponseACK(RxFrameType);
  7281  037C  0867               	movf	_RxFrameType,w
  7282  037D  3185  25F8  3180   	fcall	_PackageTxResponseACK
  7283                           
  7284                           ;CommunicationManager.c: 223: }
  7285  0380  2C6C               	goto	l4392
  7286  0381                     l4306:	
  7287                           
  7288                           ;CommunicationManager.c: 224: else if(RxFrameType=='A')
  7289  0381  3041               	movlw	65
  7290  0382  0020               	movlb	0	; select bank0
  7291  0383  0667               	xorwf	_RxFrameType,w
  7292  0384  1D03               	btfss	3,2
  7293  0385  2BAC               	goto	l4322
  7294                           
  7295                           ;CommunicationManager.c: 225: {
  7296                           ;CommunicationManager.c: 226: if((ChannelNumberChar=='0')||(ChannelNumberChar=='*'))
  7297  0386  3030               	movlw	48
  7298  0387  0666               	xorwf	_ChannelNumberChar,w
  7299  0388  1903               	btfsc	3,2
  7300  0389  2B8E               	goto	l4312
  7301  038A  302A               	movlw	42
  7302  038B  0666               	xorwf	_ChannelNumberChar,w
  7303  038C  1D03               	btfss	3,2
  7304  038D  2C68               	goto	l4390
  7305  038E                     l4312:	
  7306                           
  7307                           ;CommunicationManager.c: 227: {
  7308                           ;CommunicationManager.c: 229: AnalogSenseRaw=ADC_GetConversion(TEMP_J6_4_ANA2);
  7309  038E  3002               	movlw	2
  7310  038F  318E  2627  3180   	fcall	_ADC_GetConversion
  7311  0392  0873               	movf	?_ADC_GetConversion+1,w
  7312  0393  0020               	movlb	0	; select bank0
  7313  0394  00A1               	movwf	_AnalogSenseRaw+1
  7314  0395  0872               	movf	?_ADC_GetConversion,w
  7315  0396  00A0               	movwf	_AnalogSenseRaw
  7316                           
  7317                           ;CommunicationManager.c: 230: AnalogSenseRawByte[0]=(unsigned char)(AnalogSenseRaw & 0x0
      +                          0FF);
  7318  0397  0820               	movf	_AnalogSenseRaw,w
  7319  0398  00DF               	movwf	??_ProtocolManager
  7320  0399  085F               	movf	??_ProtocolManager,w
  7321  039A  00D4               	movwf	_AnalogSenseRawByte
  7322                           
  7323                           ;CommunicationManager.c: 231: AnalogSenseRawByte[1]=(unsigned char)((AnalogSenseRaw>>8) 
      +                          & 0x00FF);
  7324  039B  0821               	movf	_AnalogSenseRaw+1,w
  7325  039C  00DF               	movwf	??_ProtocolManager
  7326  039D  085F               	movf	??_ProtocolManager,w
  7327  039E  00D5               	movwf	_AnalogSenseRawByte+1
  7328                           
  7329                           ;CommunicationManager.c: 232: PackageTxResponseData(RxFrameType,AnalogSenseRawByte,2);
  7330  039F  3054               	movlw	(low (_AnalogSenseRawByte| 0))& (0+255)
  7331  03A0  00DF               	movwf	??_ProtocolManager
  7332  03A1  085F               	movf	??_ProtocolManager,w
  7333  03A2  00D9               	movwf	PackageTxResponseData@data
  7334  03A3  3002               	movlw	2
  7335  03A4  00E0               	movwf	??_ProtocolManager+1
  7336  03A5  0860               	movf	??_ProtocolManager+1,w
  7337  03A6  00DA               	movwf	PackageTxResponseData@dataLen
  7338  03A7  0867               	movf	_RxFrameType,w
  7339  03A8  3184  247E  3180   	fcall	_PackageTxResponseData
  7340  03AB  2C6C               	goto	l4392
  7341  03AC                     l4322:	
  7342                           ;CommunicationManager.c: 237: }
  7343                           ;CommunicationManager.c: 238: }
  7344                           
  7345                           ;CommunicationManager.c: 234: else
  7346                           ;CommunicationManager.c: 235: {
  7347                           ;CommunicationManager.c: 236: PackageTxResponseNACK(RxFrameType);
  7348                           
  7349                           ;CommunicationManager.c: 233: }
  7350                           
  7351                           
  7352                           ;CommunicationManager.c: 239: else if(RxFrameType=='I')
  7353  03AC  3049               	movlw	73
  7354  03AD  0020               	movlb	0	; select bank0
  7355  03AE  0667               	xorwf	_RxFrameType,w
  7356  03AF  1D03               	btfss	3,2
  7357  03B0  2C10               	goto	l4358
  7358                           
  7359                           ;CommunicationManager.c: 240: {
  7360                           ;CommunicationManager.c: 241: DigitalIN=0x00;
  7361  03B1  01D7               	clrf	_DigitalIN
  7362                           
  7363                           ;CommunicationManager.c: 242: AnalogSenseRaw=ADC_GetConversion(MULTIFUNC_SW_ANC4);
  7364  03B2  3014               	movlw	20
  7365  03B3  318E  2627  3180   	fcall	_ADC_GetConversion
  7366  03B6  0873               	movf	?_ADC_GetConversion+1,w
  7367  03B7  0020               	movlb	0	; select bank0
  7368  03B8  00A1               	movwf	_AnalogSenseRaw+1
  7369  03B9  0872               	movf	?_ADC_GetConversion,w
  7370  03BA  00A0               	movwf	_AnalogSenseRaw
  7371                           
  7372                           ;CommunicationManager.c: 243: if(AnalogSenseRaw > 0x100)
  7373  03BB  3001               	movlw	1
  7374  03BC  0221               	subwf	_AnalogSenseRaw+1,w
  7375  03BD  3001               	movlw	1
  7376  03BE  1903               	skipnz
  7377  03BF  0220               	subwf	_AnalogSenseRaw,w
  7378  03C0  1803               	btfsc	3,0
  7379                           
  7380                           ;CommunicationManager.c: 244: DigitalIN |=0x01;
  7381  03C1  1457               	bsf	_DigitalIN,0
  7382                           
  7383                           ;CommunicationManager.c: 245: AnalogSenseRaw=ADC_GetConversion(DIR_SW_ANC5);
  7384  03C2  3015               	movlw	21
  7385  03C3  318E  2627  3180   	fcall	_ADC_GetConversion
  7386  03C6  0873               	movf	?_ADC_GetConversion+1,w
  7387  03C7  0020               	movlb	0	; select bank0
  7388  03C8  00A1               	movwf	_AnalogSenseRaw+1
  7389  03C9  0872               	movf	?_ADC_GetConversion,w
  7390  03CA  00A0               	movwf	_AnalogSenseRaw
  7391                           
  7392                           ;CommunicationManager.c: 246: if(AnalogSenseRaw > 0x100)
  7393  03CB  3001               	movlw	1
  7394  03CC  0221               	subwf	_AnalogSenseRaw+1,w
  7395  03CD  3001               	movlw	1
  7396  03CE  1903               	skipnz
  7397  03CF  0220               	subwf	_AnalogSenseRaw,w
  7398  03D0  1803               	btfsc	3,0
  7399                           
  7400                           ;CommunicationManager.c: 247: DigitalIN |=0x02;
  7401  03D1  14D7               	bsf	_DigitalIN,1
  7402                           
  7403                           ;CommunicationManager.c: 249: if(ChannelNumberChar=='0')
  7404  03D2  3030               	movlw	48
  7405  03D3  0666               	xorwf	_ChannelNumberChar,w
  7406  03D4  1D03               	btfss	3,2
  7407  03D5  2BE6               	goto	l4344
  7408                           
  7409                           ;CommunicationManager.c: 250: {
  7410                           ;CommunicationManager.c: 252: DigitalIN=DigitalIN&0x01;
  7411  03D6  0857               	movf	_DigitalIN,w
  7412  03D7  3901               	andlw	1
  7413  03D8  00DF               	movwf	??_ProtocolManager
  7414  03D9  085F               	movf	??_ProtocolManager,w
  7415  03DA  00D7               	movwf	_DigitalIN
  7416                           
  7417                           ;CommunicationManager.c: 253: PackageTxResponseData(RxFrameType,&DigitalIN,1);
  7418  03DB  3057               	movlw	(low (_DigitalIN| 0))& (0+255)
  7419  03DC  00DF               	movwf	??_ProtocolManager
  7420  03DD  085F               	movf	??_ProtocolManager,w
  7421  03DE  00D9               	movwf	PackageTxResponseData@data
  7422  03DF  01DA               	clrf	PackageTxResponseData@dataLen
  7423  03E0  0ADA               	incf	PackageTxResponseData@dataLen,f
  7424  03E1  0867               	movf	_RxFrameType,w
  7425  03E2  3184  247E  3180   	fcall	_PackageTxResponseData
  7426                           
  7427                           ;CommunicationManager.c: 254: }
  7428  03E5  2C6C               	goto	l4392
  7429  03E6                     l4344:	
  7430                           
  7431                           ;CommunicationManager.c: 255: else if(ChannelNumberChar=='1')
  7432  03E6  3031               	movlw	49
  7433  03E7  0020               	movlb	0	; select bank0
  7434  03E8  0666               	xorwf	_ChannelNumberChar,w
  7435  03E9  1D03               	btfss	3,2
  7436  03EA  2BFB               	goto	l4350
  7437                           
  7438                           ;CommunicationManager.c: 256: {
  7439                           ;CommunicationManager.c: 258: DigitalIN=(DigitalIN>>1)&0x01;
  7440  03EB  3657               	lsrf	_DigitalIN,w
  7441  03EC  3901               	andlw	1
  7442  03ED  00DF               	movwf	??_ProtocolManager
  7443  03EE  085F               	movf	??_ProtocolManager,w
  7444  03EF  00D7               	movwf	_DigitalIN
  7445                           
  7446                           ;CommunicationManager.c: 259: PackageTxResponseData(RxFrameType,&DigitalIN,1);
  7447  03F0  3057               	movlw	(low (_DigitalIN| 0))& (0+255)
  7448  03F1  00DF               	movwf	??_ProtocolManager
  7449  03F2  085F               	movf	??_ProtocolManager,w
  7450  03F3  00D9               	movwf	PackageTxResponseData@data
  7451  03F4  01DA               	clrf	PackageTxResponseData@dataLen
  7452  03F5  0ADA               	incf	PackageTxResponseData@dataLen,f
  7453  03F6  0867               	movf	_RxFrameType,w
  7454  03F7  3184  247E  3180   	fcall	_PackageTxResponseData
  7455                           
  7456                           ;CommunicationManager.c: 260: }
  7457  03FA  2C6C               	goto	l4392
  7458  03FB                     l4350:	
  7459                           
  7460                           ;CommunicationManager.c: 261: else if(ChannelNumberChar=='*')
  7461  03FB  302A               	movlw	42
  7462  03FC  0020               	movlb	0	; select bank0
  7463  03FD  0666               	xorwf	_ChannelNumberChar,w
  7464  03FE  1D03               	btfss	3,2
  7465  03FF  2C68               	goto	l4390
  7466                           
  7467                           ;CommunicationManager.c: 262: {
  7468                           ;CommunicationManager.c: 265: DigitalIN=(DigitalIN)&0x03;
  7469  0400  0857               	movf	_DigitalIN,w
  7470  0401  3903               	andlw	3
  7471  0402  00DF               	movwf	??_ProtocolManager
  7472  0403  085F               	movf	??_ProtocolManager,w
  7473  0404  00D7               	movwf	_DigitalIN
  7474                           
  7475                           ;CommunicationManager.c: 266: PackageTxResponseData(RxFrameType,&DigitalIN,1);
  7476  0405  3057               	movlw	(low (_DigitalIN| 0))& (0+255)
  7477  0406  00DF               	movwf	??_ProtocolManager
  7478  0407  085F               	movf	??_ProtocolManager,w
  7479  0408  00D9               	movwf	PackageTxResponseData@data
  7480  0409  01DA               	clrf	PackageTxResponseData@dataLen
  7481  040A  0ADA               	incf	PackageTxResponseData@dataLen,f
  7482  040B  0867               	movf	_RxFrameType,w
  7483  040C  3184  247E  3180   	fcall	_PackageTxResponseData
  7484  040F  2C6C               	goto	l4392
  7485  0410                     l4358:	
  7486                           ;CommunicationManager.c: 271: }
  7487                           ;CommunicationManager.c: 272: }
  7488                           
  7489                           ;CommunicationManager.c: 268: else
  7490                           ;CommunicationManager.c: 269: {
  7491                           ;CommunicationManager.c: 270: PackageTxResponseNACK(RxFrameType);
  7492                           
  7493                           ;CommunicationManager.c: 267: }
  7494                           
  7495                           
  7496                           ;CommunicationManager.c: 273: else if(RxFrameType=='L')
  7497  0410  304C               	movlw	76
  7498  0411  0020               	movlb	0	; select bank0
  7499  0412  0667               	xorwf	_RxFrameType,w
  7500  0413  1903               	btfsc	3,2
  7501  0414  2C20               	goto	l4368
  7502  0415  2C40               	goto	l4376
  7503  0416                     l4362:	
  7504                           ;CommunicationManager.c: 276: {
  7505                           ;CommunicationManager.c: 277: case 'R':SetLEDcolor=0;break;
  7506                           
  7507                           ;CommunicationManager.c: 274: {
  7508                           ;CommunicationManager.c: 275: switch(SetLEDcolor)
  7509                           
  7510  0416  01E8               	clrf	_SetLEDcolor
  7511  0417  2C2B               	goto	l4370
  7512  0418                     l674:	
  7513                           ;CommunicationManager.c: 278: case 'G':SetLEDcolor=1;break;
  7514                           
  7515  0418  01E8               	clrf	_SetLEDcolor
  7516  0419  0AE8               	incf	_SetLEDcolor,f
  7517  041A  2C2B               	goto	l4370
  7518  041B                     l4364:	
  7519                           ;CommunicationManager.c: 279: case 'B':SetLEDcolor=2;break;
  7520                           
  7521  041B  3002               	movlw	2
  7522  041C  00DF               	movwf	??_ProtocolManager
  7523  041D  085F               	movf	??_ProtocolManager,w
  7524  041E  00E8               	movwf	_SetLEDcolor
  7525                           
  7526                           ;CommunicationManager.c: 280: }
  7527  041F  2C2B               	goto	l4370
  7528  0420                     l4368:	
  7529  0420  0868               	movf	_SetLEDcolor,w
  7530                           
  7531                           ; Switch size 1, requested type "space"
  7532                           ; Number of cases is 3, Range of values is 66 to 82
  7533                           ; switch strategies available:
  7534                           ; Name         Instructions Cycles
  7535                           ; simple_byte           10     6 (average)
  7536                           ; direct_byte           43     9 (fixed)
  7537                           ; jumptable            263     9 (fixed)
  7538                           ;	Chosen strategy is simple_byte
  7539  0421  3A42               	xorlw	66	; case 66
  7540  0422  1903               	skipnz
  7541  0423  2C1B               	goto	l4364
  7542  0424  3A05               	xorlw	5	; case 71
  7543  0425  1903               	skipnz
  7544  0426  2C18               	goto	l674
  7545  0427  3A15               	xorlw	21	; case 82
  7546  0428  1903               	skipnz
  7547  0429  2C16               	goto	l4362
  7548  042A  2C2B               	goto	l4370
  7549  042B                     l4370:	
  7550                           
  7551                           ;CommunicationManager.c: 283: if(LedONStartConfig(SetLEDcolor, SetLedONDurationSec, SetL
      +                          edONNumBlink) != 0)
  7552  042B  084B               	movf	_SetLedONDurationSec,w
  7553  042C  00DF               	movwf	??_ProtocolManager
  7554  042D  085F               	movf	??_ProtocolManager,w
  7555  042E  00D8               	movwf	LedONStartConfig@LedONDurationSec
  7556  042F  084C               	movf	_SetLedONNumBlink,w
  7557  0430  00E0               	movwf	??_ProtocolManager+1
  7558  0431  0860               	movf	??_ProtocolManager+1,w
  7559  0432  00D9               	movwf	LedONStartConfig@LedONNumBlink
  7560  0433  0868               	movf	_SetLEDcolor,w
  7561  0434  3186  26D9  3180   	fcall	_LedONStartConfig
  7562  0437  3A00               	xorlw	0
  7563  0438  1903               	skipnz
  7564  0439  2C68               	goto	l4390
  7565                           
  7566                           ;CommunicationManager.c: 284: PackageTxResponseACK(RxFrameType);
  7567  043A  0020               	movlb	0	; select bank0
  7568  043B  0867               	movf	_RxFrameType,w
  7569  043C  3185  25F8  3180   	fcall	_PackageTxResponseACK
  7570  043F  2C6C               	goto	l4392
  7571  0440                     l4376:	
  7572                           ;CommunicationManager.c: 287: }
  7573                           
  7574                           ;CommunicationManager.c: 285: else
  7575                           ;CommunicationManager.c: 286: PackageTxResponseNACK(RxFrameType);
  7576                           
  7577                           
  7578                           ;CommunicationManager.c: 288: else if(RxFrameType=='B')
  7579  0440  3042               	movlw	66
  7580  0441  0020               	movlb	0	; select bank0
  7581  0442  0667               	xorwf	_RxFrameType,w
  7582  0443  1D03               	btfss	3,2
  7583  0444  2C56               	goto	l4384
  7584                           
  7585                           ;CommunicationManager.c: 289: {
  7586                           ;CommunicationManager.c: 291: if(BuzzerStartConfig(SetBuzzDurationSec,SetBuzzNumBeep) !=
      +                           0)
  7587  0445  0849               	movf	_SetBuzzNumBeep,w
  7588  0446  00DF               	movwf	??_ProtocolManager
  7589  0447  085F               	movf	??_ProtocolManager,w
  7590  0448  00D8               	movwf	BuzzerStartConfig@BuzzNumBeep
  7591  0449  0848               	movf	_SetBuzzDurationSec,w
  7592  044A  3187  2798  3180   	fcall	_BuzzerStartConfig
  7593  044D  3A00               	xorlw	0
  7594  044E  1903               	skipnz
  7595  044F  2C68               	goto	l4390
  7596                           
  7597                           ;CommunicationManager.c: 292: PackageTxResponseACK(RxFrameType);
  7598  0450  0020               	movlb	0	; select bank0
  7599  0451  0867               	movf	_RxFrameType,w
  7600  0452  3185  25F8  3180   	fcall	_PackageTxResponseACK
  7601  0455  2C6C               	goto	l4392
  7602  0456                     l4384:	
  7603                           ;CommunicationManager.c: 295: }
  7604                           
  7605                           ;CommunicationManager.c: 293: else
  7606                           ;CommunicationManager.c: 294: PackageTxResponseNACK(RxFrameType);
  7607                           
  7608                           
  7609                           ;CommunicationManager.c: 296: else if(RxFrameType=='F')
  7610  0456  3046               	movlw	70
  7611  0457  0020               	movlb	0	; select bank0
  7612  0458  0667               	xorwf	_RxFrameType,w
  7613  0459  1D03               	btfss	3,2
  7614  045A  2C6C               	goto	l4392
  7615                           
  7616                           ;CommunicationManager.c: 297: {
  7617                           ;CommunicationManager.c: 299: if(FanStartConfig(SetFANOnDurationSec) != 0)
  7618  045B  084A               	movf	_SetFANOnDurationSec,w
  7619  045C  318E  2640  3180   	fcall	_FanStartConfig
  7620  045F  3A00               	xorlw	0
  7621  0460  1903               	skipnz
  7622  0461  2C68               	goto	l4390
  7623                           
  7624                           ;CommunicationManager.c: 300: PackageTxResponseACK(RxFrameType);
  7625  0462  0020               	movlb	0	; select bank0
  7626  0463  0867               	movf	_RxFrameType,w
  7627  0464  3185  25F8  3180   	fcall	_PackageTxResponseACK
  7628  0467  2C6C               	goto	l4392
  7629  0468                     l4390:	
  7630                           
  7631                           ;CommunicationManager.c: 301: else
  7632                           ;CommunicationManager.c: 302: PackageTxResponseNACK(RxFrameType);
  7633  0468  0020               	movlb	0	; select bank0
  7634  0469  0867               	movf	_RxFrameType,w
  7635  046A  3185  257E         	fcall	_PackageTxResponseNACK
  7636  046C                     l4392:	
  7637                           
  7638                           ;CommunicationManager.c: 303: }
  7639                           ;CommunicationManager.c: 305: }
  7640                           ;CommunicationManager.c: 307: RxFrameDataLenCnt=0;
  7641  046C  0020               	movlb	0	; select bank0
  7642  046D  01C6               	clrf	_RxFrameDataLenCnt
  7643                           
  7644                           ;CommunicationManager.c: 308: RxFrameDecodeState=0;
  7645  046E  01C7               	clrf	_RxFrameDecodeState
  7646                           
  7647                           ;CommunicationManager.c: 310: break;
  7648  046F  0008               	return
  7649  0470                     l4396:	
  7650                           ;CommunicationManager.c: 312: default:RxFrameDecodeState=0;
  7651                           
  7652  0470  01C7               	clrf	_RxFrameDecodeState
  7653                           
  7654                           ;CommunicationManager.c: 313: RxFrameDataLenCnt=0;
  7655  0471  01C6               	clrf	_RxFrameDataLenCnt
  7656                           
  7657                           ;CommunicationManager.c: 315: }
  7658                           
  7659                           ;CommunicationManager.c: 314: break;
  7660  0472  0008               	return
  7661  0473                     l4400:	
  7662  0473  0847               	movf	_RxFrameDecodeState,w
  7663                           
  7664                           ; Switch size 1, requested type "space"
  7665                           ; Number of cases is 6, Range of values is 0 to 5
  7666                           ; switch strategies available:
  7667                           ; Name         Instructions Cycles
  7668                           ; direct_byte           18     6 (fixed)
  7669                           ; simple_byte           19    10 (average)
  7670                           ; jumptable            260     6 (fixed)
  7671                           ;	Chosen strategy is direct_byte
  7672  0474  0084               	movwf	4
  7673  0475  3006               	movlw	6
  7674  0476  0204               	subwf	4,w
  7675  0477  1803               	skipnc
  7676  0478  2C70               	goto	l4396
  7677  0479  3188               	movlp	high S4474
  7678  047A  3504               	lslf	4,w
  7679  047B  3E20               	addlw	low S4474
  7680  047C  0082               	movwf	2
  7681  047D  0008               	return
  7682  047E                     __end_of_ProtocolManager:	
  7683                           
  7684                           	psect	swtext1
  7685  0820                     __pswtext1:	
  7686  0820                     S4474:	
  7687  0820  3180  283F         	ljmp	l4044
  7688  0822  3180  2854         	ljmp	l4054
  7689  0824  3180  288B         	ljmp	l4080
  7690  0826  3180  28B2         	ljmp	l4088
  7691  0828  3182  2AD4         	ljmp	l4254
  7692  082A  3183  2B1D         	ljmp	l4276
  7693                           
  7694                           	psect	text11
  7695  0EAF                     __ptext11:	
  7696 ;; *************** function _char2bytetovalue *****************
  7697 ;; Defined at:
  7698 ;;		line 370 in file "/home/kpit/MPLABXProjects/IECTOOLTest1/CommunicationManager.c"
  7699 ;; Parameters:    Size  Location     Type
  7700 ;;  highBchar       1    wreg     unsigned char 
  7701 ;;  LowBchar        1    5[COMMON] unsigned char 
  7702 ;;  cksum           1    6[COMMON] PTR unsigned char 
  7703 ;;		 -> Checksum(1), ProtocolManager@k(1), 
  7704 ;; Auto vars:     Size  Location     Type
  7705 ;;  highBchar       1    1[BANK0 ] unsigned char 
  7706 ;;  valuehex        1    0[BANK0 ] unsigned char 
  7707 ;; Return value:  Size  Location     Type
  7708 ;;                  1    wreg      unsigned char 
  7709 ;; Registers used:
  7710 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7711 ;; Tracked objects:
  7712 ;;		On entry : 0/0
  7713 ;;		On exit  : 0/0
  7714 ;;		Unchanged: 0/0
  7715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7716 ;;      Params:         2       0       0       0       0       0       0       0
  7717 ;;      Locals:         0       2       0       0       0       0       0       0
  7718 ;;      Temps:          3       0       0       0       0       0       0       0
  7719 ;;      Totals:         5       2       0       0       0       0       0       0
  7720 ;;Total ram usage:        7 bytes
  7721 ;; Hardware stack levels used:    1
  7722 ;; Hardware stack levels required when called:    7
  7723 ;; This function calls:
  7724 ;;		_chartovalue
  7725 ;; This function is called by:
  7726 ;;		_ProtocolManager
  7727 ;; This function uses a non-reentrant model
  7728 ;;
  7729                           
  7730                           
  7731                           ;psect for function _char2bytetovalue
  7732  0EAF                     _char2bytetovalue:	
  7733                           
  7734                           ;incstack = 0
  7735                           ; Regs used in _char2bytetovalue: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7736                           ;char2bytetovalue@highBchar stored from wreg
  7737  0EAF  0020               	movlb	0	; select bank0
  7738  0EB0  00D9               	movwf	char2bytetovalue@highBchar
  7739                           
  7740                           ;CommunicationManager.c: 372: unsigned char valuehex;
  7741                           ;CommunicationManager.c: 374: (*cksum)=(*cksum)+(highBchar+LowBchar);
  7742  0EB1  0876               	movf	char2bytetovalue@cksum,w
  7743  0EB2  0086               	movwf	6
  7744  0EB3  0187               	clrf	7
  7745  0EB4  0801               	movf	1,w
  7746  0EB5  0759               	addwf	char2bytetovalue@highBchar,w
  7747  0EB6  0775               	addwf	char2bytetovalue@LowBchar,w
  7748  0EB7  00F7               	movwf	??_char2bytetovalue
  7749  0EB8  0876               	movf	char2bytetovalue@cksum,w
  7750  0EB9  0086               	movwf	6
  7751  0EBA  0187               	clrf	7
  7752  0EBB  0877               	movf	??_char2bytetovalue,w
  7753  0EBC  0081               	movwf	1
  7754                           
  7755                           ;CommunicationManager.c: 376: valuehex=(unsigned char)(((chartovalue(highBchar))<<4)& 0x
      +                          F0)+(chartovalue(LowBchar)& 0x0F);
  7756  0EBD  0859               	movf	char2bytetovalue@highBchar,w
  7757  0EBE  3187  273D  318E   	fcall	_chartovalue
  7758  0EC1  00F7               	movwf	??_char2bytetovalue
  7759  0EC2  3004               	movlw	4
  7760  0EC3                     u2335:	
  7761  0EC3  35F7               	lslf	??_char2bytetovalue,f
  7762  0EC4  0B89               	decfsz	9,f
  7763  0EC5  2EC3               	goto	u2335
  7764  0EC6  30F0               	movlw	240
  7765  0EC7  0577               	andwf	??_char2bytetovalue,w
  7766  0EC8  00F8               	movwf	??_char2bytetovalue+1
  7767  0EC9  0875               	movf	char2bytetovalue@LowBchar,w
  7768  0ECA  3187  273D         	fcall	_chartovalue
  7769  0ECC  390F               	andlw	15
  7770  0ECD  0778               	addwf	??_char2bytetovalue+1,w
  7771  0ECE  00F9               	movwf	??_char2bytetovalue+2
  7772  0ECF  0879               	movf	??_char2bytetovalue+2,w
  7773  0ED0  0020               	movlb	0	; select bank0
  7774  0ED1  00D8               	movwf	char2bytetovalue@valuehex
  7775                           
  7776                           ;CommunicationManager.c: 377: return valuehex;
  7777  0ED2  0858               	movf	char2bytetovalue@valuehex,w
  7778  0ED3  0008               	return
  7779  0ED4                     __end_of_char2bytetovalue:	
  7780                           
  7781                           	psect	text12
  7782  0E12                     __ptext12:	
  7783 ;; *************** function _char1bytetovalue *****************
  7784 ;; Defined at:
  7785 ;;		line 379 in file "/home/kpit/MPLABXProjects/IECTOOLTest1/CommunicationManager.c"
  7786 ;; Parameters:    Size  Location     Type
  7787 ;;  LowBChar        1    wreg     unsigned char 
  7788 ;;  cksum           1    5[COMMON] PTR unsigned char 
  7789 ;;		 -> Checksum(1), 
  7790 ;; Auto vars:     Size  Location     Type
  7791 ;;  LowBChar        1    8[COMMON] unsigned char 
  7792 ;;  valuehex        1    7[COMMON] unsigned char 
  7793 ;; Return value:  Size  Location     Type
  7794 ;;                  1    wreg      unsigned char 
  7795 ;; Registers used:
  7796 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7797 ;; Tracked objects:
  7798 ;;		On entry : 0/0
  7799 ;;		On exit  : 0/0
  7800 ;;		Unchanged: 0/0
  7801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7802 ;;      Params:         1       0       0       0       0       0       0       0
  7803 ;;      Locals:         2       0       0       0       0       0       0       0
  7804 ;;      Temps:          1       0       0       0       0       0       0       0
  7805 ;;      Totals:         4       0       0       0       0       0       0       0
  7806 ;;Total ram usage:        4 bytes
  7807 ;; Hardware stack levels used:    1
  7808 ;; Hardware stack levels required when called:    7
  7809 ;; This function calls:
  7810 ;;		_chartovalue
  7811 ;; This function is called by:
  7812 ;;		_ProtocolManager
  7813 ;; This function uses a non-reentrant model
  7814 ;;
  7815                           
  7816                           
  7817                           ;psect for function _char1bytetovalue
  7818  0E12                     _char1bytetovalue:	
  7819                           
  7820                           ;incstack = 0
  7821                           ; Regs used in _char1bytetovalue: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7822                           ;char1bytetovalue@LowBChar stored from wreg
  7823  0E12  00F8               	movwf	char1bytetovalue@LowBChar
  7824                           
  7825                           ;CommunicationManager.c: 381: unsigned char valuehex;
  7826                           ;CommunicationManager.c: 383: (*cksum)=(*cksum)+(LowBChar);
  7827  0E13  0875               	movf	char1bytetovalue@cksum,w
  7828  0E14  0086               	movwf	6
  7829  0E15  0187               	clrf	7
  7830  0E16  0801               	movf	1,w
  7831  0E17  0778               	addwf	char1bytetovalue@LowBChar,w
  7832  0E18  00F6               	movwf	??_char1bytetovalue
  7833  0E19  0875               	movf	char1bytetovalue@cksum,w
  7834  0E1A  0086               	movwf	6
  7835  0E1B  0187               	clrf	7
  7836  0E1C  0876               	movf	??_char1bytetovalue,w
  7837  0E1D  0081               	movwf	1
  7838                           
  7839                           ;CommunicationManager.c: 385: valuehex=(unsigned char)(chartovalue(LowBChar)& 0x0F);
  7840  0E1E  0878               	movf	char1bytetovalue@LowBChar,w
  7841  0E1F  3187  273D         	fcall	_chartovalue
  7842  0E21  390F               	andlw	15
  7843  0E22  00F6               	movwf	??_char1bytetovalue
  7844  0E23  0876               	movf	??_char1bytetovalue,w
  7845  0E24  00F7               	movwf	char1bytetovalue@valuehex
  7846                           
  7847                           ;CommunicationManager.c: 386: return valuehex;
  7848  0E25  0877               	movf	char1bytetovalue@valuehex,w
  7849  0E26  0008               	return
  7850  0E27                     __end_of_char1bytetovalue:	
  7851                           
  7852                           	psect	text13
  7853  073D                     __ptext13:	
  7854 ;; *************** function _chartovalue *****************
  7855 ;; Defined at:
  7856 ;;		line 344 in file "/home/kpit/MPLABXProjects/IECTOOLTest1/CommunicationManager.c"
  7857 ;; Parameters:    Size  Location     Type
  7858 ;;  charNibble      1    wreg     unsigned char 
  7859 ;; Auto vars:     Size  Location     Type
  7860 ;;  charNibble      1    3[COMMON] unsigned char 
  7861 ;;  hexval          1    4[COMMON] unsigned char 
  7862 ;; Return value:  Size  Location     Type
  7863 ;;                  1    wreg      unsigned char 
  7864 ;; Registers used:
  7865 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7866 ;; Tracked objects:
  7867 ;;		On entry : 0/0
  7868 ;;		On exit  : 0/0
  7869 ;;		Unchanged: 0/0
  7870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7871 ;;      Params:         0       0       0       0       0       0       0       0
  7872 ;;      Locals:         2       0       0       0       0       0       0       0
  7873 ;;      Temps:          1       0       0       0       0       0       0       0
  7874 ;;      Totals:         3       0       0       0       0       0       0       0
  7875 ;;Total ram usage:        3 bytes
  7876 ;; Hardware stack levels used:    1
  7877 ;; Hardware stack levels required when called:    6
  7878 ;; This function calls:
  7879 ;;		Nothing
  7880 ;; This function is called by:
  7881 ;;		_char2bytetovalue
  7882 ;;		_char1bytetovalue
  7883 ;; This function uses a non-reentrant model
  7884 ;;
  7885                           
  7886                           
  7887                           ;psect for function _chartovalue
  7888  073D                     _chartovalue:	
  7889                           
  7890                           ;incstack = 0
  7891                           ; Regs used in _chartovalue: [wreg-fsr0h+status,2+status,0]
  7892                           ;chartovalue@charNibble stored from wreg
  7893  073D  00F3               	movwf	chartovalue@charNibble
  7894                           
  7895                           ;CommunicationManager.c: 346: unsigned char hexval=0x00;
  7896  073E  01F4               	clrf	chartovalue@hexval
  7897                           
  7898                           ;CommunicationManager.c: 347: switch((unsigned char)charNibble)
  7899  073F  2F64               	goto	l3756
  7900  0740                     l3724:	
  7901                           ;CommunicationManager.c: 348: {
  7902                           ;CommunicationManager.c: 349: case '0': hexval= 0x00; break;
  7903                           
  7904  0740  01F4               	clrf	chartovalue@hexval
  7905  0741  2F96               	goto	l3758
  7906  0742                     l715:	
  7907                           ;CommunicationManager.c: 350: case '1': hexval= 0x01; break;
  7908                           
  7909  0742  01F4               	clrf	chartovalue@hexval
  7910  0743  0AF4               	incf	chartovalue@hexval,f
  7911  0744  2F96               	goto	l3758
  7912  0745                     l3726:	
  7913                           ;CommunicationManager.c: 351: case '2': hexval= 0x02; break;
  7914                           
  7915  0745  3002               	movlw	2
  7916  0746  2F60               	goto	L14
  7917  0747                     l3728:	
  7918                           ;CommunicationManager.c: 352: case '3': hexval= 0x03; break;
  7919                           
  7920  0747  3003               	movlw	3
  7921  0748  2F60               	goto	L14
  7922  0749                     l3730:	
  7923                           ;CommunicationManager.c: 353: case '4': hexval= 0x04; break;
  7924                           
  7925  0749  3004               	movlw	4
  7926  074A  2F60               	goto	L14
  7927  074B                     l3732:	
  7928                           ;CommunicationManager.c: 354: case '5': hexval= 0x05; break;
  7929                           
  7930  074B  3005               	movlw	5
  7931  074C  2F60               	goto	L14
  7932  074D                     l3734:	
  7933                           ;CommunicationManager.c: 355: case '6': hexval= 0x06; break;
  7934                           
  7935  074D  3006               	movlw	6
  7936  074E  2F60               	goto	L14
  7937  074F                     l3736:	
  7938                           ;CommunicationManager.c: 356: case '7': hexval= 0x07; break;
  7939                           
  7940  074F  3007               	movlw	7
  7941  0750  2F60               	goto	L14
  7942  0751                     l3738:	
  7943                           ;CommunicationManager.c: 357: case '8': hexval= 0x08; break;
  7944                           
  7945  0751  3008               	movlw	8
  7946  0752  2F60               	goto	L14
  7947  0753                     l3740:	
  7948                           ;CommunicationManager.c: 358: case '9': hexval= 0x09; break;
  7949                           
  7950  0753  3009               	movlw	9
  7951  0754  2F60               	goto	L14
  7952  0755                     l3742:	
  7953                           ;CommunicationManager.c: 359: case 'A': hexval= 0x0A; break;
  7954                           
  7955  0755  300A               	movlw	10
  7956  0756  2F60               	goto	L14
  7957  0757                     l3744:	
  7958                           ;CommunicationManager.c: 360: case 'B': hexval= 0x0B; break;
  7959                           
  7960  0757  300B               	movlw	11
  7961  0758  2F60               	goto	L14
  7962  0759                     l3746:	
  7963                           ;CommunicationManager.c: 361: case 'C': hexval= 0x0C; break;
  7964                           
  7965  0759  300C               	movlw	12
  7966  075A  2F60               	goto	L14
  7967  075B                     l3748:	
  7968                           ;CommunicationManager.c: 362: case 'D': hexval= 0x0D; break;
  7969                           
  7970  075B  300D               	movlw	13
  7971  075C  2F60               	goto	L14
  7972  075D                     l3750:	
  7973                           ;CommunicationManager.c: 363: case 'E': hexval= 0x0E; break;
  7974                           
  7975  075D  300E               	movlw	14
  7976  075E  2F60               	goto	L14
  7977  075F                     l3752:	
  7978                           ;CommunicationManager.c: 364: case 'F': hexval= 0x0F; break;
  7979                           
  7980  075F  300F               	movlw	15
  7981  0760                     L14:	
  7982  0760  00F2               	movwf	??_chartovalue
  7983  0761  0872               	movf	??_chartovalue,w
  7984  0762  00F4               	movwf	chartovalue@hexval
  7985                           
  7986                           ;CommunicationManager.c: 366: }
  7987                           
  7988                           ;CommunicationManager.c: 365: default : break;
  7989  0763  2F96               	goto	l3758
  7990  0764                     l3756:	
  7991  0764  0873               	movf	chartovalue@charNibble,w
  7992                           
  7993                           ; Switch size 1, requested type "space"
  7994                           ; Number of cases is 16, Range of values is 48 to 70
  7995                           ; switch strategies available:
  7996                           ; Name         Instructions Cycles
  7997                           ; simple_byte           49    25 (average)
  7998                           ; direct_byte           55     9 (fixed)
  7999                           ; jumptable            263     9 (fixed)
  8000                           ;	Chosen strategy is simple_byte
  8001  0765  3A30               	xorlw	48	; case 48
  8002  0766  1903               	skipnz
  8003  0767  2F40               	goto	l3724
  8004  0768  3A01               	xorlw	1	; case 49
  8005  0769  1903               	skipnz
  8006  076A  2F42               	goto	l715
  8007  076B  3A03               	xorlw	3	; case 50
  8008  076C  1903               	skipnz
  8009  076D  2F45               	goto	l3726
  8010  076E  3A01               	xorlw	1	; case 51
  8011  076F  1903               	skipnz
  8012  0770  2F47               	goto	l3728
  8013  0771  3A07               	xorlw	7	; case 52
  8014  0772  1903               	skipnz
  8015  0773  2F49               	goto	l3730
  8016  0774  3A01               	xorlw	1	; case 53
  8017  0775  1903               	skipnz
  8018  0776  2F4B               	goto	l3732
  8019  0777  3A03               	xorlw	3	; case 54
  8020  0778  1903               	skipnz
  8021  0779  2F4D               	goto	l3734
  8022  077A  3A01               	xorlw	1	; case 55
  8023  077B  1903               	skipnz
  8024  077C  2F4F               	goto	l3736
  8025  077D  3A0F               	xorlw	15	; case 56
  8026  077E  1903               	skipnz
  8027  077F  2F51               	goto	l3738
  8028  0780  3A01               	xorlw	1	; case 57
  8029  0781  1903               	skipnz
  8030  0782  2F53               	goto	l3740
  8031  0783  3A78               	xorlw	120	; case 65
  8032  0784  1903               	skipnz
  8033  0785  2F55               	goto	l3742
  8034  0786  3A03               	xorlw	3	; case 66
  8035  0787  1903               	skipnz
  8036  0788  2F57               	goto	l3744
  8037  0789  3A01               	xorlw	1	; case 67
  8038  078A  1903               	skipnz
  8039  078B  2F59               	goto	l3746
  8040  078C  3A07               	xorlw	7	; case 68
  8041  078D  1903               	skipnz
  8042  078E  2F5B               	goto	l3748
  8043  078F  3A01               	xorlw	1	; case 69
  8044  0790  1903               	skipnz
  8045  0791  2F5D               	goto	l3750
  8046  0792  3A03               	xorlw	3	; case 70
  8047  0793  1903               	skipnz
  8048  0794  2F5F               	goto	l3752
  8049  0795  2F96               	goto	l3758
  8050  0796                     l3758:	
  8051                           
  8052                           ;CommunicationManager.c: 367: return hexval;
  8053  0796  0874               	movf	chartovalue@hexval,w
  8054  0797  0008               	return
  8055  0798                     __end_of_chartovalue:	
  8056                           
  8057                           	psect	text14
  8058  047E                     __ptext14:	
  8059 ;; *************** function _PackageTxResponseData *****************
  8060 ;; Defined at:
  8061 ;;		line 406 in file "/home/kpit/MPLABXProjects/IECTOOLTest1/CommunicationManager.c"
  8062 ;; Parameters:    Size  Location     Type
  8063 ;;  frameType       1    wreg     unsigned char 
  8064 ;;  data            1    1[BANK0 ] PTR unsigned char 
  8065 ;;		 -> DigitalIN(1), AnalogSenseRawByte(2), eepromReadData(16), 
  8066 ;;  dataLen         1    2[BANK0 ] unsigned char 
  8067 ;; Auto vars:     Size  Location     Type
  8068 ;;  frameType       1    6[BANK0 ] unsigned char 
  8069 ;;  i               1    5[BANK0 ] unsigned char 
  8070 ;; Return value:  Size  Location     Type
  8071 ;;                  1    wreg      void 
  8072 ;; Registers used:
  8073 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8074 ;; Tracked objects:
  8075 ;;		On entry : 0/0
  8076 ;;		On exit  : 0/0
  8077 ;;		Unchanged: 0/0
  8078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8079 ;;      Params:         0       2       0       0       0       0       0       0
  8080 ;;      Locals:         0       2       0       0       0       0       0       0
  8081 ;;      Temps:          0       2       0       0       0       0       0       0
  8082 ;;      Totals:         0       6       0       0       0       0       0       0
  8083 ;;Total ram usage:        6 bytes
  8084 ;; Hardware stack levels used:    1
  8085 ;; Hardware stack levels required when called:    9
  8086 ;; This function calls:
  8087 ;;		_EUSART_RX_Disable
  8088 ;;		_EUSART_RX_Enable
  8089 ;;		_EUSART_TX_Completed
  8090 ;;		_EUSART_Write
  8091 ;;		_PackageTxResponseNACK
  8092 ;;		_valuetocharHighNibble
  8093 ;;		_valuetocharLowNibble
  8094 ;; This function is called by:
  8095 ;;		_ProtocolManager
  8096 ;; This function uses a non-reentrant model
  8097 ;;
  8098                           
  8099                           
  8100                           ;psect for function _PackageTxResponseData
  8101  047E                     _PackageTxResponseData:	
  8102                           
  8103                           ;incstack = 0
  8104                           ; Regs used in _PackageTxResponseData: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8105                           ;PackageTxResponseData@frameType stored from wreg
  8106  047E  0020               	movlb	0	; select bank0
  8107  047F  00DE               	movwf	PackageTxResponseData@frameType
  8108                           
  8109                           ;CommunicationManager.c: 409: unsigned char i;
  8110                           ;CommunicationManager.c: 413: if(dataLen==0)
  8111  0480  085A               	movf	PackageTxResponseData@dataLen,w
  8112  0481  1D03               	btfss	3,2
  8113  0482  2C87               	goto	l3892
  8114                           
  8115                           ;CommunicationManager.c: 414: {
  8116                           ;CommunicationManager.c: 415: PackageTxResponseNACK(frameType);
  8117  0483  085E               	movf	PackageTxResponseData@frameType,w
  8118  0484  3185  257E         	fcall	_PackageTxResponseNACK
  8119                           
  8120                           ;CommunicationManager.c: 416: }
  8121  0486  0008               	return
  8122  0487                     l3892:	
  8123                           
  8124                           ;CommunicationManager.c: 417: else
  8125                           ;CommunicationManager.c: 418: {
  8126                           ;CommunicationManager.c: 420: EUSART_RX_Disable();
  8127  0487  318D  254D  3184   	fcall	_EUSART_RX_Disable
  8128                           
  8129                           ;CommunicationManager.c: 421: do { LATB6 = 1; } while(0);
  8130  048A  0022               	movlb	2	; select bank2
  8131  048B  170D               	bsf	13,6	;volatile
  8132                           
  8133                           ;CommunicationManager.c: 425: EUSART_TX_Completed();
  8134  048C  318D  2559  3184   	fcall	_EUSART_TX_Completed
  8135                           
  8136                           ;CommunicationManager.c: 429: EUSART_Write('$');
  8137  048F  3024               	movlw	36
  8138  0490  318D  2572  3184   	fcall	_EUSART_Write
  8139                           
  8140                           ;CommunicationManager.c: 430: EUSART_Write('$');
  8141  0493  3024               	movlw	36
  8142  0494  318D  2572  3184   	fcall	_EUSART_Write
  8143                           
  8144                           ;CommunicationManager.c: 431: Checksum=0;
  8145  0497  0020               	movlb	0	; select bank0
  8146  0498  01D6               	clrf	_Checksum
  8147                           
  8148                           ;CommunicationManager.c: 433: EUSART_Write('O');
  8149  0499  304F               	movlw	79
  8150  049A  318D  2572  3184   	fcall	_EUSART_Write
  8151                           
  8152                           ;CommunicationManager.c: 434: Checksum+='O';
  8153  049D  304F               	movlw	79
  8154  049E  0020               	movlb	0	; select bank0
  8155  049F  00DB               	movwf	??_PackageTxResponseData
  8156  04A0  085B               	movf	??_PackageTxResponseData,w
  8157  04A1  07D6               	addwf	_Checksum,f
  8158                           
  8159                           ;CommunicationManager.c: 436: if((frameType=='A')||(frameType=='I'))
  8160  04A2  3041               	movlw	65
  8161  04A3  065E               	xorwf	PackageTxResponseData@frameType,w
  8162  04A4  1903               	btfsc	3,2
  8163  04A5  2CAA               	goto	l3910
  8164  04A6  3049               	movlw	73
  8165  04A7  065E               	xorwf	PackageTxResponseData@frameType,w
  8166  04A8  1D03               	btfss	3,2
  8167  04A9  2CAD               	goto	l3912
  8168  04AA                     l3910:	
  8169                           
  8170                           ;CommunicationManager.c: 437: {
  8171                           ;CommunicationManager.c: 438: txPacketlength=12+(dataLen*2);
  8172  04AA  355A               	lslf	PackageTxResponseData@dataLen,w
  8173  04AB  3E0C               	addlw	12
  8174  04AC  2CB5               	goto	L16
  8175  04AD                     l3912:	
  8176                           ;CommunicationManager.c: 439: }
  8177                           
  8178                           
  8179                           ;CommunicationManager.c: 440: else if(frameType=='r')
  8180  04AD  3072               	movlw	114
  8181  04AE  065E               	xorwf	PackageTxResponseData@frameType,w
  8182  04AF  1D03               	btfss	3,2
  8183  04B0  2CB4               	goto	l3916
  8184                           
  8185                           ;CommunicationManager.c: 441: {
  8186                           ;CommunicationManager.c: 442: txPacketlength=13+(dataLen*2);
  8187  04B1  355A               	lslf	PackageTxResponseData@dataLen,w
  8188  04B2  3E0D               	addlw	13
  8189  04B3  2CB5               	goto	L16
  8190  04B4                     l3916:	
  8191                           ;CommunicationManager.c: 443: }
  8192                           
  8193                           
  8194                           ;CommunicationManager.c: 444: else
  8195                           ;CommunicationManager.c: 445: txPacketlength=11;
  8196  04B4  300B               	movlw	11
  8197  04B5                     L16:	
  8198  04B5  00DB               	movwf	??_PackageTxResponseData
  8199  04B6  085B               	movf	??_PackageTxResponseData,w
  8200  04B7  00D2               	movwf	_txPacketlength
  8201                           
  8202                           ;CommunicationManager.c: 447: highByteChar=valuetocharHighNibble(txPacketlength);
  8203  04B8  0852               	movf	_txPacketlength,w
  8204  04B9  318D  25FE  3184   	fcall	_valuetocharHighNibble
  8205  04BC  0020               	movlb	0	; select bank0
  8206  04BD  00DB               	movwf	??_PackageTxResponseData
  8207  04BE  085B               	movf	??_PackageTxResponseData,w
  8208  04BF  00CF               	movwf	_highByteChar
  8209                           
  8210                           ;CommunicationManager.c: 448: Checksum+=highByteChar;
  8211  04C0  084F               	movf	_highByteChar,w
  8212  04C1  00DB               	movwf	??_PackageTxResponseData
  8213  04C2  085B               	movf	??_PackageTxResponseData,w
  8214  04C3  07D6               	addwf	_Checksum,f
  8215                           
  8216                           ;CommunicationManager.c: 449: lowByteChar=valuetocharLowNibble(txPacketlength);
  8217  04C4  0852               	movf	_txPacketlength,w
  8218  04C5  318D  25CE  3184   	fcall	_valuetocharLowNibble
  8219  04C8  0020               	movlb	0	; select bank0
  8220  04C9  00DB               	movwf	??_PackageTxResponseData
  8221  04CA  085B               	movf	??_PackageTxResponseData,w
  8222  04CB  00D1               	movwf	_lowByteChar
  8223                           
  8224                           ;CommunicationManager.c: 450: Checksum+=lowByteChar;
  8225  04CC  0851               	movf	_lowByteChar,w
  8226  04CD  00DB               	movwf	??_PackageTxResponseData
  8227  04CE  085B               	movf	??_PackageTxResponseData,w
  8228  04CF  07D6               	addwf	_Checksum,f
  8229                           
  8230                           ;CommunicationManager.c: 451: EUSART_Write(highByteChar);
  8231  04D0  084F               	movf	_highByteChar,w
  8232  04D1  318D  2572  3184   	fcall	_EUSART_Write
  8233                           
  8234                           ;CommunicationManager.c: 452: EUSART_Write(lowByteChar);
  8235  04D4  0020               	movlb	0	; select bank0
  8236  04D5  0851               	movf	_lowByteChar,w
  8237  04D6  318D  2572  3184   	fcall	_EUSART_Write
  8238                           
  8239                           ;CommunicationManager.c: 455: EUSART_Write(frameType);
  8240  04D9  0020               	movlb	0	; select bank0
  8241  04DA  085E               	movf	PackageTxResponseData@frameType,w
  8242  04DB  318D  2572  3184   	fcall	_EUSART_Write
  8243                           
  8244                           ;CommunicationManager.c: 456: Checksum+=frameType;
  8245  04DE  0020               	movlb	0	; select bank0
  8246  04DF  085E               	movf	PackageTxResponseData@frameType,w
  8247  04E0  00DB               	movwf	??_PackageTxResponseData
  8248  04E1  085B               	movf	??_PackageTxResponseData,w
  8249  04E2  07D6               	addwf	_Checksum,f
  8250                           
  8251                           ;CommunicationManager.c: 458: if((frameType=='A')||(frameType=='I'))
  8252  04E3  3041               	movlw	65
  8253  04E4  065E               	xorwf	PackageTxResponseData@frameType,w
  8254  04E5  1903               	btfsc	3,2
  8255  04E6  2CEB               	goto	l3938
  8256  04E7  3049               	movlw	73
  8257  04E8  065E               	xorwf	PackageTxResponseData@frameType,w
  8258  04E9  1D03               	btfss	3,2
  8259  04EA  2CF1               	goto	l3942
  8260  04EB                     l3938:	
  8261                           
  8262                           ;CommunicationManager.c: 459: {
  8263                           ;CommunicationManager.c: 460: Checksum+=ChannelNumberChar;
  8264  04EB  0866               	movf	_ChannelNumberChar,w
  8265  04EC  00DB               	movwf	??_PackageTxResponseData
  8266  04ED  085B               	movf	??_PackageTxResponseData,w
  8267  04EE  07D6               	addwf	_Checksum,f
  8268                           
  8269                           ;CommunicationManager.c: 461: EUSART_Write(ChannelNumberChar);
  8270  04EF  0866               	movf	_ChannelNumberChar,w
  8271  04F0  2D14               	goto	L17
  8272  04F1                     l3942:	
  8273                           ;CommunicationManager.c: 462: }
  8274                           
  8275                           
  8276                           ;CommunicationManager.c: 463: else if(frameType=='r')
  8277  04F1  3072               	movlw	114
  8278  04F2  0020               	movlb	0	; select bank0
  8279  04F3  065E               	xorwf	PackageTxResponseData@frameType,w
  8280  04F4  1D03               	btfss	3,2
  8281  04F5  2D17               	goto	l3954
  8282                           
  8283                           ;CommunicationManager.c: 464: {
  8284                           ;CommunicationManager.c: 465: highByteChar=valuetocharHighNibble(dataLen);
  8285  04F6  085A               	movf	PackageTxResponseData@dataLen,w
  8286  04F7  318D  25FE  3184   	fcall	_valuetocharHighNibble
  8287  04FA  0020               	movlb	0	; select bank0
  8288  04FB  00DB               	movwf	??_PackageTxResponseData
  8289  04FC  085B               	movf	??_PackageTxResponseData,w
  8290  04FD  00CF               	movwf	_highByteChar
  8291                           
  8292                           ;CommunicationManager.c: 466: Checksum+=highByteChar;
  8293  04FE  084F               	movf	_highByteChar,w
  8294  04FF  00DB               	movwf	??_PackageTxResponseData
  8295  0500  085B               	movf	??_PackageTxResponseData,w
  8296  0501  07D6               	addwf	_Checksum,f
  8297                           
  8298                           ;CommunicationManager.c: 467: lowByteChar=valuetocharLowNibble(dataLen);
  8299  0502  085A               	movf	PackageTxResponseData@dataLen,w
  8300  0503  318D  25CE  3184   	fcall	_valuetocharLowNibble
  8301  0506  0020               	movlb	0	; select bank0
  8302  0507  00DB               	movwf	??_PackageTxResponseData
  8303  0508  085B               	movf	??_PackageTxResponseData,w
  8304  0509  00D1               	movwf	_lowByteChar
  8305                           
  8306                           ;CommunicationManager.c: 468: Checksum+=lowByteChar;
  8307  050A  0851               	movf	_lowByteChar,w
  8308  050B  00DB               	movwf	??_PackageTxResponseData
  8309  050C  085B               	movf	??_PackageTxResponseData,w
  8310  050D  07D6               	addwf	_Checksum,f
  8311                           
  8312                           ;CommunicationManager.c: 469: EUSART_Write(highByteChar);
  8313  050E  084F               	movf	_highByteChar,w
  8314  050F  318D  2572  3184   	fcall	_EUSART_Write
  8315                           
  8316                           ;CommunicationManager.c: 470: EUSART_Write(lowByteChar);
  8317  0512  0020               	movlb	0	; select bank0
  8318  0513  0851               	movf	_lowByteChar,w
  8319  0514                     L17:	
  8320  0514  318D  2572  3184   	fcall	_EUSART_Write
  8321  0517                     l3954:	
  8322                           
  8323                           ;CommunicationManager.c: 471: }
  8324                           ;CommunicationManager.c: 473: for(i=0;i<dataLen;i++)
  8325  0517  0020               	movlb	0	; select bank0
  8326  0518  01DD               	clrf	PackageTxResponseData@i
  8327  0519                     l3966:	
  8328  0519  085A               	movf	PackageTxResponseData@dataLen,w
  8329  051A  025D               	subwf	PackageTxResponseData@i,w
  8330  051B  1803               	btfsc	3,0
  8331  051C  2D50               	goto	l763
  8332                           
  8333                           ;CommunicationManager.c: 474: {
  8334                           ;CommunicationManager.c: 476: highByteChar=valuetocharHighNibble(*(data+i));
  8335  051D  085D               	movf	PackageTxResponseData@i,w
  8336  051E  0759               	addwf	PackageTxResponseData@data,w
  8337  051F  00DB               	movwf	??_PackageTxResponseData
  8338  0520  085B               	movf	??_PackageTxResponseData,w
  8339  0521  0086               	movwf	6
  8340  0522  0187               	clrf	7
  8341  0523  0801               	movf	1,w
  8342  0524  318D  25FE  3184   	fcall	_valuetocharHighNibble
  8343  0527  0020               	movlb	0	; select bank0
  8344  0528  00DC               	movwf	??_PackageTxResponseData+1
  8345  0529  085C               	movf	??_PackageTxResponseData+1,w
  8346  052A  00CF               	movwf	_highByteChar
  8347                           
  8348                           ;CommunicationManager.c: 477: Checksum+=highByteChar;
  8349  052B  084F               	movf	_highByteChar,w
  8350  052C  00DB               	movwf	??_PackageTxResponseData
  8351  052D  085B               	movf	??_PackageTxResponseData,w
  8352  052E  07D6               	addwf	_Checksum,f
  8353                           
  8354                           ;CommunicationManager.c: 478: lowByteChar=valuetocharLowNibble(*(data+i));
  8355  052F  085D               	movf	PackageTxResponseData@i,w
  8356  0530  0759               	addwf	PackageTxResponseData@data,w
  8357  0531  00DB               	movwf	??_PackageTxResponseData
  8358  0532  085B               	movf	??_PackageTxResponseData,w
  8359  0533  0086               	movwf	6
  8360  0534  0187               	clrf	7
  8361  0535  0801               	movf	1,w
  8362  0536  318D  25CE  3184   	fcall	_valuetocharLowNibble
  8363  0539  0020               	movlb	0	; select bank0
  8364  053A  00DC               	movwf	??_PackageTxResponseData+1
  8365  053B  085C               	movf	??_PackageTxResponseData+1,w
  8366  053C  00D1               	movwf	_lowByteChar
  8367                           
  8368                           ;CommunicationManager.c: 479: Checksum+=lowByteChar;
  8369  053D  0851               	movf	_lowByteChar,w
  8370  053E  00DB               	movwf	??_PackageTxResponseData
  8371  053F  085B               	movf	??_PackageTxResponseData,w
  8372  0540  07D6               	addwf	_Checksum,f
  8373                           
  8374                           ;CommunicationManager.c: 480: EUSART_Write(highByteChar);
  8375  0541  084F               	movf	_highByteChar,w
  8376  0542  318D  2572  3184   	fcall	_EUSART_Write
  8377                           
  8378                           ;CommunicationManager.c: 481: EUSART_Write(lowByteChar);
  8379  0545  0020               	movlb	0	; select bank0
  8380  0546  0851               	movf	_lowByteChar,w
  8381  0547  318D  2572  3184   	fcall	_EUSART_Write
  8382  054A  3001               	movlw	1
  8383  054B  0020               	movlb	0	; select bank0
  8384  054C  00DB               	movwf	??_PackageTxResponseData
  8385  054D  085B               	movf	??_PackageTxResponseData,w
  8386  054E  07DD               	addwf	PackageTxResponseData@i,f
  8387  054F  2D19               	goto	l3966
  8388  0550                     l763:	
  8389                           
  8390                           ;CommunicationManager.c: 483: }
  8391                           ;CommunicationManager.c: 485: Checksum=(unsigned char)(~Checksum);
  8392  0550  09D6               	comf	_Checksum,f
  8393                           
  8394                           ;CommunicationManager.c: 486: highByteChar=valuetocharHighNibble(Checksum);
  8395  0551  0856               	movf	_Checksum,w
  8396  0552  318D  25FE  3184   	fcall	_valuetocharHighNibble
  8397  0555  0020               	movlb	0	; select bank0
  8398  0556  00DB               	movwf	??_PackageTxResponseData
  8399  0557  085B               	movf	??_PackageTxResponseData,w
  8400  0558  00CF               	movwf	_highByteChar
  8401                           
  8402                           ;CommunicationManager.c: 487: lowByteChar=valuetocharLowNibble(Checksum);
  8403  0559  0856               	movf	_Checksum,w
  8404  055A  318D  25CE  3184   	fcall	_valuetocharLowNibble
  8405  055D  0020               	movlb	0	; select bank0
  8406  055E  00DB               	movwf	??_PackageTxResponseData
  8407  055F  085B               	movf	??_PackageTxResponseData,w
  8408  0560  00D1               	movwf	_lowByteChar
  8409                           
  8410                           ;CommunicationManager.c: 488: EUSART_Write(highByteChar);
  8411  0561  084F               	movf	_highByteChar,w
  8412  0562  318D  2572  3184   	fcall	_EUSART_Write
  8413                           
  8414                           ;CommunicationManager.c: 489: EUSART_Write(lowByteChar);
  8415  0565  0020               	movlb	0	; select bank0
  8416  0566  0851               	movf	_lowByteChar,w
  8417  0567  318D  2572  3184   	fcall	_EUSART_Write
  8418                           
  8419                           ;CommunicationManager.c: 492: EUSART_Write('#');
  8420  056A  3023               	movlw	35
  8421  056B  318D  2572  3184   	fcall	_EUSART_Write
  8422                           
  8423                           ;CommunicationManager.c: 493: EUSART_Write('\r');
  8424  056E  300D               	movlw	13
  8425  056F  318D  2572  3184   	fcall	_EUSART_Write
  8426                           
  8427                           ;CommunicationManager.c: 494: EUSART_Write('\n');
  8428  0572  300A               	movlw	10
  8429  0573  318D  2572  3184   	fcall	_EUSART_Write
  8430                           
  8431                           ;CommunicationManager.c: 496: EUSART_TX_Completed();
  8432  0576  318D  2559  3184   	fcall	_EUSART_TX_Completed
  8433                           
  8434                           ;CommunicationManager.c: 497: do { LATB6 = 0; } while(0);
  8435  0579  0022               	movlb	2	; select bank2
  8436  057A  130D               	bcf	13,6	;volatile
  8437                           
  8438                           ;CommunicationManager.c: 498: EUSART_RX_Enable();
  8439  057B  318D  2550         	fcall	_EUSART_RX_Enable
  8440  057D  0008               	return
  8441  057E                     __end_of_PackageTxResponseData:	
  8442                           
  8443                           	psect	text15
  8444  057E                     __ptext15:	
  8445 ;; *************** function _PackageTxResponseNACK *****************
  8446 ;; Defined at:
  8447 ;;		line 543 in file "/home/kpit/MPLABXProjects/IECTOOLTest1/CommunicationManager.c"
  8448 ;; Parameters:    Size  Location     Type
  8449 ;;  frameType       1    wreg     unsigned char 
  8450 ;; Auto vars:     Size  Location     Type
  8451 ;;  frameType       1    0[BANK0 ] unsigned char 
  8452 ;; Return value:  Size  Location     Type
  8453 ;;                  1    wreg      void 
  8454 ;; Registers used:
  8455 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8456 ;; Tracked objects:
  8457 ;;		On entry : 0/0
  8458 ;;		On exit  : 0/0
  8459 ;;		Unchanged: 0/0
  8460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8461 ;;      Params:         0       0       0       0       0       0       0       0
  8462 ;;      Locals:         0       1       0       0       0       0       0       0
  8463 ;;      Temps:          1       0       0       0       0       0       0       0
  8464 ;;      Totals:         1       1       0       0       0       0       0       0
  8465 ;;Total ram usage:        2 bytes
  8466 ;; Hardware stack levels used:    1
  8467 ;; Hardware stack levels required when called:    8
  8468 ;; This function calls:
  8469 ;;		_EUSART_RX_Disable
  8470 ;;		_EUSART_RX_Enable
  8471 ;;		_EUSART_TX_Completed
  8472 ;;		_EUSART_Write
  8473 ;;		_valuetocharHighNibble
  8474 ;;		_valuetocharLowNibble
  8475 ;; This function is called by:
  8476 ;;		_ProtocolManager
  8477 ;;		_PackageTxResponseData
  8478 ;; This function uses a non-reentrant model
  8479 ;;
  8480                           
  8481                           
  8482                           ;psect for function _PackageTxResponseNACK
  8483  057E                     _PackageTxResponseNACK:	
  8484                           
  8485                           ;incstack = 0
  8486                           ; Regs used in _PackageTxResponseNACK: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8487                           ;PackageTxResponseNACK@frameType stored from wreg
  8488  057E  0020               	movlb	0	; select bank0
  8489  057F  00D8               	movwf	PackageTxResponseNACK@frameType
  8490                           
  8491                           ;CommunicationManager.c: 546: EUSART_RX_Disable();
  8492  0580  318D  254D  3185   	fcall	_EUSART_RX_Disable
  8493                           
  8494                           ;CommunicationManager.c: 547: do { LATB6 = 1; } while(0);
  8495  0583  0022               	movlb	2	; select bank2
  8496  0584  170D               	bsf	13,6	;volatile
  8497                           
  8498                           ;CommunicationManager.c: 549: EUSART_TX_Completed();
  8499  0585  318D  2559  3185   	fcall	_EUSART_TX_Completed
  8500                           
  8501                           ;CommunicationManager.c: 551: EUSART_Write('$');
  8502  0588  3024               	movlw	36
  8503  0589  318D  2572  3185   	fcall	_EUSART_Write
  8504                           
  8505                           ;CommunicationManager.c: 552: EUSART_Write('$');
  8506  058C  3024               	movlw	36
  8507  058D  318D  2572  3185   	fcall	_EUSART_Write
  8508                           
  8509                           ;CommunicationManager.c: 553: Checksum=0;
  8510  0590  0020               	movlb	0	; select bank0
  8511  0591  01D6               	clrf	_Checksum
  8512                           
  8513                           ;CommunicationManager.c: 555: EUSART_Write('N');
  8514  0592  304E               	movlw	78
  8515  0593  318D  2572  3185   	fcall	_EUSART_Write
  8516                           
  8517                           ;CommunicationManager.c: 556: Checksum+='N';
  8518  0596  304E               	movlw	78
  8519  0597  00F9               	movwf	??_PackageTxResponseNACK
  8520  0598  0879               	movf	??_PackageTxResponseNACK,w
  8521  0599  0020               	movlb	0	; select bank0
  8522  059A  07D6               	addwf	_Checksum,f
  8523                           
  8524                           ;CommunicationManager.c: 557: txPacketlength=11;
  8525  059B  300B               	movlw	11
  8526  059C  00F9               	movwf	??_PackageTxResponseNACK
  8527  059D  0879               	movf	??_PackageTxResponseNACK,w
  8528  059E  00D2               	movwf	_txPacketlength
  8529                           
  8530                           ;CommunicationManager.c: 558: highByteChar=valuetocharHighNibble(txPacketlength);
  8531  059F  0852               	movf	_txPacketlength,w
  8532  05A0  318D  25FE  3185   	fcall	_valuetocharHighNibble
  8533  05A3  00F9               	movwf	??_PackageTxResponseNACK
  8534  05A4  0879               	movf	??_PackageTxResponseNACK,w
  8535  05A5  0020               	movlb	0	; select bank0
  8536  05A6  00CF               	movwf	_highByteChar
  8537                           
  8538                           ;CommunicationManager.c: 559: Checksum+=highByteChar;
  8539  05A7  084F               	movf	_highByteChar,w
  8540  05A8  00F9               	movwf	??_PackageTxResponseNACK
  8541  05A9  0879               	movf	??_PackageTxResponseNACK,w
  8542  05AA  07D6               	addwf	_Checksum,f
  8543                           
  8544                           ;CommunicationManager.c: 560: lowByteChar=valuetocharLowNibble(txPacketlength);
  8545  05AB  0852               	movf	_txPacketlength,w
  8546  05AC  318D  25CE  3185   	fcall	_valuetocharLowNibble
  8547  05AF  00F9               	movwf	??_PackageTxResponseNACK
  8548  05B0  0879               	movf	??_PackageTxResponseNACK,w
  8549  05B1  0020               	movlb	0	; select bank0
  8550  05B2  00D1               	movwf	_lowByteChar
  8551                           
  8552                           ;CommunicationManager.c: 561: Checksum+=lowByteChar;
  8553  05B3  0851               	movf	_lowByteChar,w
  8554  05B4  00F9               	movwf	??_PackageTxResponseNACK
  8555  05B5  0879               	movf	??_PackageTxResponseNACK,w
  8556  05B6  07D6               	addwf	_Checksum,f
  8557                           
  8558                           ;CommunicationManager.c: 562: EUSART_Write(highByteChar);
  8559  05B7  084F               	movf	_highByteChar,w
  8560  05B8  318D  2572  3185   	fcall	_EUSART_Write
  8561                           
  8562                           ;CommunicationManager.c: 563: EUSART_Write(lowByteChar);
  8563  05BB  0020               	movlb	0	; select bank0
  8564  05BC  0851               	movf	_lowByteChar,w
  8565  05BD  318D  2572  3185   	fcall	_EUSART_Write
  8566                           
  8567                           ;CommunicationManager.c: 565: EUSART_Write(frameType);
  8568  05C0  0020               	movlb	0	; select bank0
  8569  05C1  0858               	movf	PackageTxResponseNACK@frameType,w
  8570  05C2  318D  2572  3185   	fcall	_EUSART_Write
  8571                           
  8572                           ;CommunicationManager.c: 566: Checksum+=frameType;
  8573  05C5  0020               	movlb	0	; select bank0
  8574  05C6  0858               	movf	PackageTxResponseNACK@frameType,w
  8575  05C7  00F9               	movwf	??_PackageTxResponseNACK
  8576  05C8  0879               	movf	??_PackageTxResponseNACK,w
  8577  05C9  07D6               	addwf	_Checksum,f
  8578                           
  8579                           ;CommunicationManager.c: 568: Checksum=~Checksum;
  8580  05CA  09D6               	comf	_Checksum,f
  8581                           
  8582                           ;CommunicationManager.c: 569: highByteChar=valuetocharHighNibble(Checksum);
  8583  05CB  0856               	movf	_Checksum,w
  8584  05CC  318D  25FE  3185   	fcall	_valuetocharHighNibble
  8585  05CF  00F9               	movwf	??_PackageTxResponseNACK
  8586  05D0  0879               	movf	??_PackageTxResponseNACK,w
  8587  05D1  0020               	movlb	0	; select bank0
  8588  05D2  00CF               	movwf	_highByteChar
  8589                           
  8590                           ;CommunicationManager.c: 570: lowByteChar=valuetocharLowNibble(Checksum);
  8591  05D3  0856               	movf	_Checksum,w
  8592  05D4  318D  25CE  3185   	fcall	_valuetocharLowNibble
  8593  05D7  00F9               	movwf	??_PackageTxResponseNACK
  8594  05D8  0879               	movf	??_PackageTxResponseNACK,w
  8595  05D9  0020               	movlb	0	; select bank0
  8596  05DA  00D1               	movwf	_lowByteChar
  8597                           
  8598                           ;CommunicationManager.c: 571: EUSART_Write(highByteChar);
  8599  05DB  084F               	movf	_highByteChar,w
  8600  05DC  318D  2572  3185   	fcall	_EUSART_Write
  8601                           
  8602                           ;CommunicationManager.c: 572: EUSART_Write(lowByteChar);
  8603  05DF  0020               	movlb	0	; select bank0
  8604  05E0  0851               	movf	_lowByteChar,w
  8605  05E1  318D  2572  3185   	fcall	_EUSART_Write
  8606                           
  8607                           ;CommunicationManager.c: 575: EUSART_Write('#');
  8608  05E4  3023               	movlw	35
  8609  05E5  318D  2572  3185   	fcall	_EUSART_Write
  8610                           
  8611                           ;CommunicationManager.c: 576: EUSART_Write('\r');
  8612  05E8  300D               	movlw	13
  8613  05E9  318D  2572  3185   	fcall	_EUSART_Write
  8614                           
  8615                           ;CommunicationManager.c: 577: EUSART_Write('\n');
  8616  05EC  300A               	movlw	10
  8617  05ED  318D  2572  3185   	fcall	_EUSART_Write
  8618                           
  8619                           ;CommunicationManager.c: 579: EUSART_TX_Completed();
  8620  05F0  318D  2559  3185   	fcall	_EUSART_TX_Completed
  8621                           
  8622                           ;CommunicationManager.c: 580: do { LATB6 = 0; } while(0);
  8623  05F3  0022               	movlb	2	; select bank2
  8624  05F4  130D               	bcf	13,6	;volatile
  8625                           
  8626                           ;CommunicationManager.c: 581: EUSART_RX_Enable();
  8627  05F5  318D  2550         	fcall	_EUSART_RX_Enable
  8628  05F7  0008               	return
  8629  05F8                     __end_of_PackageTxResponseNACK:	
  8630                           
  8631                           	psect	text16
  8632  05F8                     __ptext16:	
  8633 ;; *************** function _PackageTxResponseACK *****************
  8634 ;; Defined at:
  8635 ;;		line 502 in file "/home/kpit/MPLABXProjects/IECTOOLTest1/CommunicationManager.c"
  8636 ;; Parameters:    Size  Location     Type
  8637 ;;  frameType       1    wreg     unsigned char 
  8638 ;; Auto vars:     Size  Location     Type
  8639 ;;  frameType       1    0[BANK0 ] unsigned char 
  8640 ;; Return value:  Size  Location     Type
  8641 ;;                  1    wreg      void 
  8642 ;; Registers used:
  8643 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8644 ;; Tracked objects:
  8645 ;;		On entry : 0/0
  8646 ;;		On exit  : 0/0
  8647 ;;		Unchanged: 0/0
  8648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8649 ;;      Params:         0       0       0       0       0       0       0       0
  8650 ;;      Locals:         0       1       0       0       0       0       0       0
  8651 ;;      Temps:          1       0       0       0       0       0       0       0
  8652 ;;      Totals:         1       1       0       0       0       0       0       0
  8653 ;;Total ram usage:        2 bytes
  8654 ;; Hardware stack levels used:    1
  8655 ;; Hardware stack levels required when called:    8
  8656 ;; This function calls:
  8657 ;;		_EUSART_RX_Disable
  8658 ;;		_EUSART_RX_Enable
  8659 ;;		_EUSART_TX_Completed
  8660 ;;		_EUSART_Write
  8661 ;;		_valuetocharHighNibble
  8662 ;;		_valuetocharLowNibble
  8663 ;; This function is called by:
  8664 ;;		_ProtocolManager
  8665 ;; This function uses a non-reentrant model
  8666 ;;
  8667                           
  8668                           
  8669                           ;psect for function _PackageTxResponseACK
  8670  05F8                     _PackageTxResponseACK:	
  8671                           
  8672                           ;incstack = 0
  8673                           ; Regs used in _PackageTxResponseACK: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8674                           ;PackageTxResponseACK@frameType stored from wreg
  8675  05F8  0020               	movlb	0	; select bank0
  8676  05F9  00D8               	movwf	PackageTxResponseACK@frameType
  8677                           
  8678                           ;CommunicationManager.c: 505: EUSART_RX_Disable();
  8679  05FA  318D  254D  3185   	fcall	_EUSART_RX_Disable
  8680                           
  8681                           ;CommunicationManager.c: 506: do { LATB6 = 1; } while(0);
  8682  05FD  0022               	movlb	2	; select bank2
  8683  05FE  170D               	bsf	13,6	;volatile
  8684                           
  8685                           ;CommunicationManager.c: 508: EUSART_TX_Completed();
  8686  05FF  318D  2559  3185   	fcall	_EUSART_TX_Completed
  8687                           
  8688                           ;CommunicationManager.c: 510: EUSART_Write('$');
  8689  0602  3024               	movlw	36
  8690  0603  318D  2572  3185   	fcall	_EUSART_Write
  8691                           
  8692                           ;CommunicationManager.c: 511: EUSART_Write('$');
  8693  0606  3024               	movlw	36
  8694  0607  318D  2572  3185   	fcall	_EUSART_Write
  8695                           
  8696                           ;CommunicationManager.c: 512: Checksum=0;
  8697  060A  0020               	movlb	0	; select bank0
  8698  060B  01D6               	clrf	_Checksum
  8699                           
  8700                           ;CommunicationManager.c: 514: EUSART_Write('O');
  8701  060C  304F               	movlw	79
  8702  060D  318D  2572  3185   	fcall	_EUSART_Write
  8703                           
  8704                           ;CommunicationManager.c: 515: Checksum+='O';
  8705  0610  304F               	movlw	79
  8706  0611  00F9               	movwf	??_PackageTxResponseACK
  8707  0612  0879               	movf	??_PackageTxResponseACK,w
  8708  0613  0020               	movlb	0	; select bank0
  8709  0614  07D6               	addwf	_Checksum,f
  8710                           
  8711                           ;CommunicationManager.c: 516: txPacketlength=11;
  8712  0615  300B               	movlw	11
  8713  0616  00F9               	movwf	??_PackageTxResponseACK
  8714  0617  0879               	movf	??_PackageTxResponseACK,w
  8715  0618  00D2               	movwf	_txPacketlength
  8716                           
  8717                           ;CommunicationManager.c: 517: highByteChar=valuetocharHighNibble(txPacketlength);
  8718  0619  0852               	movf	_txPacketlength,w
  8719  061A  318D  25FE  3185   	fcall	_valuetocharHighNibble
  8720  061D  00F9               	movwf	??_PackageTxResponseACK
  8721  061E  0879               	movf	??_PackageTxResponseACK,w
  8722  061F  0020               	movlb	0	; select bank0
  8723  0620  00CF               	movwf	_highByteChar
  8724                           
  8725                           ;CommunicationManager.c: 518: Checksum+=highByteChar;
  8726  0621  084F               	movf	_highByteChar,w
  8727  0622  00F9               	movwf	??_PackageTxResponseACK
  8728  0623  0879               	movf	??_PackageTxResponseACK,w
  8729  0624  07D6               	addwf	_Checksum,f
  8730                           
  8731                           ;CommunicationManager.c: 519: lowByteChar=valuetocharLowNibble(txPacketlength);
  8732  0625  0852               	movf	_txPacketlength,w
  8733  0626  318D  25CE  3185   	fcall	_valuetocharLowNibble
  8734  0629  00F9               	movwf	??_PackageTxResponseACK
  8735  062A  0879               	movf	??_PackageTxResponseACK,w
  8736  062B  0020               	movlb	0	; select bank0
  8737  062C  00D1               	movwf	_lowByteChar
  8738                           
  8739                           ;CommunicationManager.c: 520: Checksum+=lowByteChar;
  8740  062D  0851               	movf	_lowByteChar,w
  8741  062E  00F9               	movwf	??_PackageTxResponseACK
  8742  062F  0879               	movf	??_PackageTxResponseACK,w
  8743  0630  07D6               	addwf	_Checksum,f
  8744                           
  8745                           ;CommunicationManager.c: 521: EUSART_Write(highByteChar);
  8746  0631  084F               	movf	_highByteChar,w
  8747  0632  318D  2572  3185   	fcall	_EUSART_Write
  8748                           
  8749                           ;CommunicationManager.c: 522: EUSART_Write(lowByteChar);
  8750  0635  0020               	movlb	0	; select bank0
  8751  0636  0851               	movf	_lowByteChar,w
  8752  0637  318D  2572  3185   	fcall	_EUSART_Write
  8753                           
  8754                           ;CommunicationManager.c: 524: EUSART_Write(frameType);
  8755  063A  0020               	movlb	0	; select bank0
  8756  063B  0858               	movf	PackageTxResponseACK@frameType,w
  8757  063C  318D  2572  3185   	fcall	_EUSART_Write
  8758                           
  8759                           ;CommunicationManager.c: 525: Checksum+=frameType;
  8760  063F  0020               	movlb	0	; select bank0
  8761  0640  0858               	movf	PackageTxResponseACK@frameType,w
  8762  0641  00F9               	movwf	??_PackageTxResponseACK
  8763  0642  0879               	movf	??_PackageTxResponseACK,w
  8764  0643  07D6               	addwf	_Checksum,f
  8765                           
  8766                           ;CommunicationManager.c: 527: Checksum=~Checksum;
  8767  0644  09D6               	comf	_Checksum,f
  8768                           
  8769                           ;CommunicationManager.c: 528: highByteChar=valuetocharHighNibble(Checksum);
  8770  0645  0856               	movf	_Checksum,w
  8771  0646  318D  25FE  3185   	fcall	_valuetocharHighNibble
  8772  0649  00F9               	movwf	??_PackageTxResponseACK
  8773  064A  0879               	movf	??_PackageTxResponseACK,w
  8774  064B  0020               	movlb	0	; select bank0
  8775  064C  00CF               	movwf	_highByteChar
  8776                           
  8777                           ;CommunicationManager.c: 529: lowByteChar=valuetocharLowNibble(Checksum);
  8778  064D  0856               	movf	_Checksum,w
  8779  064E  318D  25CE  3185   	fcall	_valuetocharLowNibble
  8780  0651  00F9               	movwf	??_PackageTxResponseACK
  8781  0652  0879               	movf	??_PackageTxResponseACK,w
  8782  0653  0020               	movlb	0	; select bank0
  8783  0654  00D1               	movwf	_lowByteChar
  8784                           
  8785                           ;CommunicationManager.c: 530: EUSART_Write(highByteChar);
  8786  0655  084F               	movf	_highByteChar,w
  8787  0656  318D  2572  3185   	fcall	_EUSART_Write
  8788                           
  8789                           ;CommunicationManager.c: 531: EUSART_Write(lowByteChar);
  8790  0659  0020               	movlb	0	; select bank0
  8791  065A  0851               	movf	_lowByteChar,w
  8792  065B  318D  2572  3185   	fcall	_EUSART_Write
  8793                           
  8794                           ;CommunicationManager.c: 534: EUSART_Write('#');
  8795  065E  3023               	movlw	35
  8796  065F  318D  2572  3185   	fcall	_EUSART_Write
  8797                           
  8798                           ;CommunicationManager.c: 535: EUSART_Write('\r');
  8799  0662  300D               	movlw	13
  8800  0663  318D  2572  3185   	fcall	_EUSART_Write
  8801                           
  8802                           ;CommunicationManager.c: 536: EUSART_Write('\n');
  8803  0666  300A               	movlw	10
  8804  0667  318D  2572  3185   	fcall	_EUSART_Write
  8805                           
  8806                           ;CommunicationManager.c: 538: EUSART_TX_Completed();
  8807  066A  318D  2559  3185   	fcall	_EUSART_TX_Completed
  8808                           
  8809                           ;CommunicationManager.c: 539: do { LATB6 = 0; } while(0);
  8810  066D  0022               	movlb	2	; select bank2
  8811  066E  130D               	bcf	13,6	;volatile
  8812                           
  8813                           ;CommunicationManager.c: 540: EUSART_RX_Enable();
  8814  066F  318D  2550         	fcall	_EUSART_RX_Enable
  8815  0671  0008               	return
  8816  0672                     __end_of_PackageTxResponseACK:	
  8817                           
  8818                           	psect	text17
  8819  0DCE                     __ptext17:	
  8820 ;; *************** function _valuetocharLowNibble *****************
  8821 ;; Defined at:
  8822 ;;		line 398 in file "/home/kpit/MPLABXProjects/IECTOOLTest1/CommunicationManager.c"
  8823 ;; Parameters:    Size  Location     Type
  8824 ;;  hexvalue        1    wreg     unsigned char 
  8825 ;; Auto vars:     Size  Location     Type
  8826 ;;  hexvalue        1    6[COMMON] unsigned char 
  8827 ;;  hexval          1    7[COMMON] unsigned char 
  8828 ;; Return value:  Size  Location     Type
  8829 ;;                  1    wreg      unsigned char 
  8830 ;; Registers used:
  8831 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8832 ;; Tracked objects:
  8833 ;;		On entry : 0/0
  8834 ;;		On exit  : 0/0
  8835 ;;		Unchanged: 0/0
  8836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8837 ;;      Params:         0       0       0       0       0       0       0       0
  8838 ;;      Locals:         2       0       0       0       0       0       0       0
  8839 ;;      Temps:          1       0       0       0       0       0       0       0
  8840 ;;      Totals:         3       0       0       0       0       0       0       0
  8841 ;;Total ram usage:        3 bytes
  8842 ;; Hardware stack levels used:    1
  8843 ;; Hardware stack levels required when called:    7
  8844 ;; This function calls:
  8845 ;;		_valtoasciichar
  8846 ;; This function is called by:
  8847 ;;		_PackageTxResponseData
  8848 ;;		_PackageTxResponseACK
  8849 ;;		_PackageTxResponseNACK
  8850 ;; This function uses a non-reentrant model
  8851 ;;
  8852                           
  8853                           
  8854                           ;psect for function _valuetocharLowNibble
  8855  0DCE                     _valuetocharLowNibble:	
  8856                           
  8857                           ;incstack = 0
  8858                           ; Regs used in _valuetocharLowNibble: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8859                           ;valuetocharLowNibble@hexvalue stored from wreg
  8860  0DCE  00F6               	movwf	valuetocharLowNibble@hexvalue
  8861                           
  8862                           ;CommunicationManager.c: 400: unsigned char hexval;
  8863                           ;CommunicationManager.c: 401: hexval=(unsigned char)((unsigned char)(hexvalue) & 0x0F);
  8864  0DCF  0876               	movf	valuetocharLowNibble@hexvalue,w
  8865  0DD0  390F               	andlw	15
  8866  0DD1  00F5               	movwf	??_valuetocharLowNibble
  8867  0DD2  0875               	movf	??_valuetocharLowNibble,w
  8868  0DD3  00F7               	movwf	valuetocharLowNibble@hexval
  8869                           
  8870                           ;CommunicationManager.c: 402: hexval=valtoasciichar(hexval);
  8871  0DD4  0877               	movf	valuetocharLowNibble@hexval,w
  8872  0DD5  318F  2708         	fcall	_valtoasciichar
  8873  0DD7  00F5               	movwf	??_valuetocharLowNibble
  8874  0DD8  0875               	movf	??_valuetocharLowNibble,w
  8875  0DD9  00F7               	movwf	valuetocharLowNibble@hexval
  8876                           
  8877                           ;CommunicationManager.c: 403: return hexval;
  8878  0DDA  0877               	movf	valuetocharLowNibble@hexval,w
  8879  0DDB  0008               	return
  8880  0DDC                     __end_of_valuetocharLowNibble:	
  8881                           
  8882                           	psect	text18
  8883  0DFE                     __ptext18:	
  8884 ;; *************** function _valuetocharHighNibble *****************
  8885 ;; Defined at:
  8886 ;;		line 389 in file "/home/kpit/MPLABXProjects/IECTOOLTest1/CommunicationManager.c"
  8887 ;; Parameters:    Size  Location     Type
  8888 ;;  hexvalue        1    wreg     unsigned char 
  8889 ;; Auto vars:     Size  Location     Type
  8890 ;;  hexvalue        1    7[COMMON] unsigned char 
  8891 ;;  hexval          1    8[COMMON] unsigned char 
  8892 ;; Return value:  Size  Location     Type
  8893 ;;                  1    wreg      unsigned char 
  8894 ;; Registers used:
  8895 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8896 ;; Tracked objects:
  8897 ;;		On entry : 0/0
  8898 ;;		On exit  : 0/0
  8899 ;;		Unchanged: 0/0
  8900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8901 ;;      Params:         0       0       0       0       0       0       0       0
  8902 ;;      Locals:         2       0       0       0       0       0       0       0
  8903 ;;      Temps:          2       0       0       0       0       0       0       0
  8904 ;;      Totals:         4       0       0       0       0       0       0       0
  8905 ;;Total ram usage:        4 bytes
  8906 ;; Hardware stack levels used:    1
  8907 ;; Hardware stack levels required when called:    7
  8908 ;; This function calls:
  8909 ;;		_valtoasciichar
  8910 ;; This function is called by:
  8911 ;;		_PackageTxResponseData
  8912 ;;		_PackageTxResponseACK
  8913 ;;		_PackageTxResponseNACK
  8914 ;; This function uses a non-reentrant model
  8915 ;;
  8916                           
  8917                           
  8918                           ;psect for function _valuetocharHighNibble
  8919  0DFE                     _valuetocharHighNibble:	
  8920                           
  8921                           ;incstack = 0
  8922                           ; Regs used in _valuetocharHighNibble: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8923                           ;valuetocharHighNibble@hexvalue stored from wreg
  8924  0DFE  00F7               	movwf	valuetocharHighNibble@hexvalue
  8925                           
  8926                           ;CommunicationManager.c: 391: unsigned char hexval;
  8927                           ;CommunicationManager.c: 392: hexval=(unsigned char)((unsigned char)(hexvalue>>4) & 0x0F
      +                          );
  8928  0DFF  0877               	movf	valuetocharHighNibble@hexvalue,w
  8929  0E00  00F5               	movwf	??_valuetocharHighNibble
  8930  0E01  3004               	movlw	4
  8931  0E02                     u2135:	
  8932  0E02  36F5               	lsrf	??_valuetocharHighNibble,f
  8933  0E03  0B89               	decfsz	9,f
  8934  0E04  2E02               	goto	u2135
  8935  0E05  0875               	movf	??_valuetocharHighNibble,w
  8936  0E06  390F               	andlw	15
  8937  0E07  00F6               	movwf	??_valuetocharHighNibble+1
  8938  0E08  0876               	movf	??_valuetocharHighNibble+1,w
  8939  0E09  00F8               	movwf	valuetocharHighNibble@hexval
  8940                           
  8941                           ;CommunicationManager.c: 393: hexval=valtoasciichar(hexval);
  8942  0E0A  0878               	movf	valuetocharHighNibble@hexval,w
  8943  0E0B  318F  2708         	fcall	_valtoasciichar
  8944  0E0D  00F5               	movwf	??_valuetocharHighNibble
  8945  0E0E  0875               	movf	??_valuetocharHighNibble,w
  8946  0E0F  00F8               	movwf	valuetocharHighNibble@hexval
  8947                           
  8948                           ;CommunicationManager.c: 394: return hexval;
  8949  0E10  0878               	movf	valuetocharHighNibble@hexval,w
  8950  0E11  0008               	return
  8951  0E12                     __end_of_valuetocharHighNibble:	
  8952                           
  8953                           	psect	text19
  8954  0F08                     __ptext19:	
  8955 ;; *************** function _valtoasciichar *****************
  8956 ;; Defined at:
  8957 ;;		line 318 in file "/home/kpit/MPLABXProjects/IECTOOLTest1/CommunicationManager.c"
  8958 ;; Parameters:    Size  Location     Type
  8959 ;;  hexvalue1       1    wreg     unsigned char 
  8960 ;; Auto vars:     Size  Location     Type
  8961 ;;  hexvalue1       1    3[COMMON] unsigned char 
  8962 ;;  hexval          1    4[COMMON] unsigned char 
  8963 ;; Return value:  Size  Location     Type
  8964 ;;                  1    wreg      unsigned char 
  8965 ;; Registers used:
  8966 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8967 ;; Tracked objects:
  8968 ;;		On entry : 0/0
  8969 ;;		On exit  : 0/0
  8970 ;;		Unchanged: 0/0
  8971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8972 ;;      Params:         0       0       0       0       0       0       0       0
  8973 ;;      Locals:         2       0       0       0       0       0       0       0
  8974 ;;      Temps:          1       0       0       0       0       0       0       0
  8975 ;;      Totals:         3       0       0       0       0       0       0       0
  8976 ;;Total ram usage:        3 bytes
  8977 ;; Hardware stack levels used:    1
  8978 ;; Hardware stack levels required when called:    6
  8979 ;; This function calls:
  8980 ;;		Nothing
  8981 ;; This function is called by:
  8982 ;;		_valuetocharHighNibble
  8983 ;;		_valuetocharLowNibble
  8984 ;; This function uses a non-reentrant model
  8985 ;;
  8986                           
  8987                           
  8988                           ;psect for function _valtoasciichar
  8989  0F08                     _valtoasciichar:	
  8990                           
  8991                           ;incstack = 0
  8992                           ; Regs used in _valtoasciichar: [wreg-fsr0h+status,2+status,0]
  8993                           ;valtoasciichar@hexvalue1 stored from wreg
  8994  0F08  00F3               	movwf	valtoasciichar@hexvalue1
  8995                           
  8996                           ;CommunicationManager.c: 320: unsigned char hexval='0';
  8997  0F09  3030               	movlw	48
  8998  0F0A  00F2               	movwf	??_valtoasciichar
  8999  0F0B  0872               	movf	??_valtoasciichar,w
  9000  0F0C  00F4               	movwf	valtoasciichar@hexval
  9001                           
  9002                           ;CommunicationManager.c: 321: switch((unsigned char)hexvalue1)
  9003  0F0D  2F31               	goto	l3628
  9004  0F0E                     l3594:	
  9005                           ;CommunicationManager.c: 322: {
  9006                           ;CommunicationManager.c: 323: case 0x00: hexval= '0'; break;
  9007                           
  9008  0F0E  3030               	movlw	48
  9009  0F0F  2F2D               	goto	L32
  9010  0F10                     l3596:	
  9011                           ;CommunicationManager.c: 324: case 0x01: hexval= '1'; break;
  9012                           
  9013  0F10  3031               	movlw	49
  9014  0F11  2F2D               	goto	L32
  9015  0F12                     l3598:	
  9016                           ;CommunicationManager.c: 325: case 0x02: hexval= '2'; break;
  9017                           
  9018  0F12  3032               	movlw	50
  9019  0F13  2F2D               	goto	L32
  9020  0F14                     l3600:	
  9021                           ;CommunicationManager.c: 326: case 0x03: hexval= '3'; break;
  9022                           
  9023  0F14  3033               	movlw	51
  9024  0F15  2F2D               	goto	L32
  9025  0F16                     l3602:	
  9026                           ;CommunicationManager.c: 327: case 0x04: hexval= '4'; break;
  9027                           
  9028  0F16  3034               	movlw	52
  9029  0F17  2F2D               	goto	L32
  9030  0F18                     l3604:	
  9031                           ;CommunicationManager.c: 328: case 0x05: hexval= '5'; break;
  9032                           
  9033  0F18  3035               	movlw	53
  9034  0F19  2F2D               	goto	L32
  9035  0F1A                     l3606:	
  9036                           ;CommunicationManager.c: 329: case 0x06: hexval= '6'; break;
  9037                           
  9038  0F1A  3036               	movlw	54
  9039  0F1B  2F2D               	goto	L32
  9040  0F1C                     l3608:	
  9041                           ;CommunicationManager.c: 330: case 0x07: hexval= '7'; break;
  9042                           
  9043  0F1C  3037               	movlw	55
  9044  0F1D  2F2D               	goto	L32
  9045  0F1E                     l3610:	
  9046                           ;CommunicationManager.c: 331: case 0x08: hexval= '8'; break;
  9047                           
  9048  0F1E  3038               	movlw	56
  9049  0F1F  2F2D               	goto	L32
  9050  0F20                     l3612:	
  9051                           ;CommunicationManager.c: 332: case 0x09: hexval= '9'; break;
  9052                           
  9053  0F20  3039               	movlw	57
  9054  0F21  2F2D               	goto	L32
  9055  0F22                     l3614:	
  9056                           ;CommunicationManager.c: 333: case 0x0A: hexval= 'A'; break;
  9057                           
  9058  0F22  3041               	movlw	65
  9059  0F23  2F2D               	goto	L32
  9060  0F24                     l3616:	
  9061                           ;CommunicationManager.c: 334: case 0x0B: hexval= 'B'; break;
  9062                           
  9063  0F24  3042               	movlw	66
  9064  0F25  2F2D               	goto	L32
  9065  0F26                     l3618:	
  9066                           ;CommunicationManager.c: 335: case 0x0C: hexval= 'C'; break;
  9067                           
  9068  0F26  3043               	movlw	67
  9069  0F27  2F2D               	goto	L32
  9070  0F28                     l3620:	
  9071                           ;CommunicationManager.c: 336: case 0x0D: hexval= 'D'; break;
  9072                           
  9073  0F28  3044               	movlw	68
  9074  0F29  2F2D               	goto	L32
  9075  0F2A                     l3622:	
  9076                           ;CommunicationManager.c: 337: case 0x0E: hexval= 'E'; break;
  9077                           
  9078  0F2A  3045               	movlw	69
  9079  0F2B  2F2D               	goto	L32
  9080  0F2C                     l3624:	
  9081                           ;CommunicationManager.c: 338: case 0x0F: hexval= 'F'; break;
  9082                           
  9083  0F2C  3046               	movlw	70
  9084  0F2D                     L32:	
  9085  0F2D  00F2               	movwf	??_valtoasciichar
  9086  0F2E  0872               	movf	??_valtoasciichar,w
  9087  0F2F  00F4               	movwf	valtoasciichar@hexval
  9088                           
  9089                           ;CommunicationManager.c: 340: }
  9090                           
  9091                           ;CommunicationManager.c: 339: default : break;
  9092  0F30  2F3B               	goto	l3630
  9093  0F31                     l3628:	
  9094  0F31  0873               	movf	valtoasciichar@hexvalue1,w
  9095                           
  9096                           ; Switch size 1, requested type "space"
  9097                           ; Number of cases is 16, Range of values is 0 to 15
  9098                           ; switch strategies available:
  9099                           ; Name         Instructions Cycles
  9100                           ; direct_byte           38     6 (fixed)
  9101                           ; simple_byte           49    25 (average)
  9102                           ; jumptable            260     6 (fixed)
  9103                           ;	Chosen strategy is direct_byte
  9104  0F32  0084               	movwf	4
  9105  0F33  3010               	movlw	16
  9106  0F34  0204               	subwf	4,w
  9107  0F35  1803               	skipnc
  9108  0F36  2F3B               	goto	l3630
  9109  0F37  3188               	movlp	high S4476
  9110  0F38  3504               	lslf	4,w
  9111  0F39  3E00               	addlw	low S4476
  9112  0F3A  0082               	movwf	2
  9113  0F3B                     l3630:	
  9114                           
  9115                           ;CommunicationManager.c: 341: return hexval;
  9116  0F3B  0874               	movf	valtoasciichar@hexval,w
  9117  0F3C  0008               	return
  9118  0F3D                     __end_of_valtoasciichar:	
  9119                           
  9120                           	psect	swtext2
  9121  0800                     __pswtext2:	
  9122  0800                     S4476:	
  9123  0800  318F  2F0E         	ljmp	l3594
  9124  0802  318F  2F10         	ljmp	l3596
  9125  0804  318F  2F12         	ljmp	l3598
  9126  0806  318F  2F14         	ljmp	l3600
  9127  0808  318F  2F16         	ljmp	l3602
  9128  080A  318F  2F18         	ljmp	l3604
  9129  080C  318F  2F1A         	ljmp	l3606
  9130  080E  318F  2F1C         	ljmp	l3608
  9131  0810  318F  2F1E         	ljmp	l3610
  9132  0812  318F  2F20         	ljmp	l3612
  9133  0814  318F  2F22         	ljmp	l3614
  9134  0816  318F  2F24         	ljmp	l3616
  9135  0818  318F  2F26         	ljmp	l3618
  9136  081A  318F  2F28         	ljmp	l3620
  9137  081C  318F  2F2A         	ljmp	l3622
  9138  081E  318F  2F2C         	ljmp	l3624
  9139                           
  9140                           	psect	text20
  9141  0D72                     __ptext20:	
  9142 ;; *************** function _EUSART_Write *****************
  9143 ;; Defined at:
  9144 ;;		line 96 in file "mcc_generated_files/eusart.c"
  9145 ;; Parameters:    Size  Location     Type
  9146 ;;  txData          1    wreg     unsigned char 
  9147 ;; Auto vars:     Size  Location     Type
  9148 ;;  txData          1    2[COMMON] unsigned char 
  9149 ;; Return value:  Size  Location     Type
  9150 ;;                  1    wreg      void 
  9151 ;; Registers used:
  9152 ;;		wreg
  9153 ;; Tracked objects:
  9154 ;;		On entry : 0/0
  9155 ;;		On exit  : 0/0
  9156 ;;		Unchanged: 0/0
  9157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9158 ;;      Params:         0       0       0       0       0       0       0       0
  9159 ;;      Locals:         1       0       0       0       0       0       0       0
  9160 ;;      Temps:          0       0       0       0       0       0       0       0
  9161 ;;      Totals:         1       0       0       0       0       0       0       0
  9162 ;;Total ram usage:        1 bytes
  9163 ;; Hardware stack levels used:    1
  9164 ;; Hardware stack levels required when called:    6
  9165 ;; This function calls:
  9166 ;;		Nothing
  9167 ;; This function is called by:
  9168 ;;		_PackageTxResponseData
  9169 ;;		_PackageTxResponseACK
  9170 ;;		_PackageTxResponseNACK
  9171 ;; This function uses a non-reentrant model
  9172 ;;
  9173                           
  9174                           
  9175                           ;psect for function _EUSART_Write
  9176  0D72                     _EUSART_Write:	
  9177                           
  9178                           ;incstack = 0
  9179                           ; Regs used in _EUSART_Write: [wreg]
  9180                           ;EUSART_Write@txData stored from wreg
  9181  0D72  00F2               	movwf	EUSART_Write@txData
  9182  0D73                     l296:	
  9183                           ;eusart.c: 99: {
  9184                           
  9185                           ;eusart.c: 98: while(0 == PIR1bits.TXIF)
  9186                           
  9187  0D73  0020               	movlb	0	; select bank0
  9188  0D74  1E11               	btfss	17,4	;volatile
  9189  0D75  2D73               	goto	l296
  9190                           
  9191                           ;eusart.c: 100: }
  9192                           ;eusart.c: 102: TX1REG = txData;
  9193  0D76  0872               	movf	EUSART_Write@txData,w
  9194  0D77  0023               	movlb	3	; select bank3
  9195  0D78  009A               	movwf	26	;volatile
  9196  0D79  0008               	return
  9197  0D7A                     __end_of_EUSART_Write:	
  9198                           
  9199                           	psect	text21
  9200  0D59                     __ptext21:	
  9201 ;; *************** function _EUSART_TX_Completed *****************
  9202 ;; Defined at:
  9203 ;;		line 113 in file "mcc_generated_files/eusart.c"
  9204 ;; Parameters:    Size  Location     Type
  9205 ;;		None
  9206 ;; Auto vars:     Size  Location     Type
  9207 ;;		None
  9208 ;; Return value:  Size  Location     Type
  9209 ;;                  1    wreg      void 
  9210 ;; Registers used:
  9211 ;;		None
  9212 ;; Tracked objects:
  9213 ;;		On entry : 0/0
  9214 ;;		On exit  : 0/0
  9215 ;;		Unchanged: 0/0
  9216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9217 ;;      Params:         0       0       0       0       0       0       0       0
  9218 ;;      Locals:         0       0       0       0       0       0       0       0
  9219 ;;      Temps:          0       0       0       0       0       0       0       0
  9220 ;;      Totals:         0       0       0       0       0       0       0       0
  9221 ;;Total ram usage:        0 bytes
  9222 ;; Hardware stack levels used:    1
  9223 ;; Hardware stack levels required when called:    6
  9224 ;; This function calls:
  9225 ;;		Nothing
  9226 ;; This function is called by:
  9227 ;;		_PackageTxResponseData
  9228 ;;		_PackageTxResponseACK
  9229 ;;		_PackageTxResponseNACK
  9230 ;; This function uses a non-reentrant model
  9231 ;;
  9232                           
  9233                           
  9234                           ;psect for function _EUSART_TX_Completed
  9235  0D59                     _EUSART_TX_Completed:	
  9236  0D59                     l308:	
  9237                           ;eusart.c: 116: {
  9238                           
  9239                           ;eusart.c: 115: while(0 == PIR1bits.TXIF)
  9240                           
  9241                           ;incstack = 0
  9242                           ; Regs used in _EUSART_TX_Completed: []
  9243                           
  9244  0D59  0020               	movlb	0	; select bank0
  9245  0D5A  1A11               	btfsc	17,4	;volatile
  9246  0D5B  0008               	return
  9247  0D5C  2D59               	goto	l308
  9248  0D5D                     __end_of_EUSART_TX_Completed:	
  9249                           
  9250                           	psect	text22
  9251  0D50                     __ptext22:	
  9252 ;; *************** function _EUSART_RX_Enable *****************
  9253 ;; Defined at:
  9254 ;;		line 109 in file "mcc_generated_files/eusart.c"
  9255 ;; Parameters:    Size  Location     Type
  9256 ;;		None
  9257 ;; Auto vars:     Size  Location     Type
  9258 ;;		None
  9259 ;; Return value:  Size  Location     Type
  9260 ;;                  1    wreg      void 
  9261 ;; Registers used:
  9262 ;;		None
  9263 ;; Tracked objects:
  9264 ;;		On entry : 0/0
  9265 ;;		On exit  : 0/0
  9266 ;;		Unchanged: 0/0
  9267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9268 ;;      Params:         0       0       0       0       0       0       0       0
  9269 ;;      Locals:         0       0       0       0       0       0       0       0
  9270 ;;      Temps:          0       0       0       0       0       0       0       0
  9271 ;;      Totals:         0       0       0       0       0       0       0       0
  9272 ;;Total ram usage:        0 bytes
  9273 ;; Hardware stack levels used:    1
  9274 ;; Hardware stack levels required when called:    6
  9275 ;; This function calls:
  9276 ;;		Nothing
  9277 ;; This function is called by:
  9278 ;;		_PackageTxResponseData
  9279 ;;		_PackageTxResponseACK
  9280 ;;		_PackageTxResponseNACK
  9281 ;; This function uses a non-reentrant model
  9282 ;;
  9283                           
  9284                           
  9285                           ;psect for function _EUSART_RX_Enable
  9286  0D50                     _EUSART_RX_Enable:	
  9287                           
  9288                           ;eusart.c: 111: RC1STAbits.CREN = 1;
  9289                           
  9290                           ;incstack = 0
  9291                           ; Regs used in _EUSART_RX_Enable: []
  9292  0D50  0023               	movlb	3	; select bank3
  9293  0D51  161D               	bsf	29,4	;volatile
  9294  0D52  0008               	return
  9295  0D53                     __end_of_EUSART_RX_Enable:	
  9296                           
  9297                           	psect	text23
  9298  0D4D                     __ptext23:	
  9299 ;; *************** function _EUSART_RX_Disable *****************
  9300 ;; Defined at:
  9301 ;;		line 105 in file "mcc_generated_files/eusart.c"
  9302 ;; Parameters:    Size  Location     Type
  9303 ;;		None
  9304 ;; Auto vars:     Size  Location     Type
  9305 ;;		None
  9306 ;; Return value:  Size  Location     Type
  9307 ;;                  1    wreg      void 
  9308 ;; Registers used:
  9309 ;;		None
  9310 ;; Tracked objects:
  9311 ;;		On entry : 0/0
  9312 ;;		On exit  : 0/0
  9313 ;;		Unchanged: 0/0
  9314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9315 ;;      Params:         0       0       0       0       0       0       0       0
  9316 ;;      Locals:         0       0       0       0       0       0       0       0
  9317 ;;      Temps:          0       0       0       0       0       0       0       0
  9318 ;;      Totals:         0       0       0       0       0       0       0       0
  9319 ;;Total ram usage:        0 bytes
  9320 ;; Hardware stack levels used:    1
  9321 ;; Hardware stack levels required when called:    6
  9322 ;; This function calls:
  9323 ;;		Nothing
  9324 ;; This function is called by:
  9325 ;;		_PackageTxResponseData
  9326 ;;		_PackageTxResponseACK
  9327 ;;		_PackageTxResponseNACK
  9328 ;; This function uses a non-reentrant model
  9329 ;;
  9330                           
  9331                           
  9332                           ;psect for function _EUSART_RX_Disable
  9333  0D4D                     _EUSART_RX_Disable:	
  9334                           
  9335                           ;eusart.c: 107: RC1STAbits.CREN = 0;
  9336                           
  9337                           ;incstack = 0
  9338                           ; Regs used in _EUSART_RX_Disable: []
  9339  0D4D  0023               	movlb	3	; select bank3
  9340  0D4E  121D               	bcf	29,4	;volatile
  9341  0D4F  0008               	return
  9342  0D50                     __end_of_EUSART_RX_Disable:	
  9343                           
  9344                           	psect	text24
  9345  06D9                     __ptext24:	
  9346 ;; *************** function _LedONStartConfig *****************
  9347 ;; Defined at:
  9348 ;;		line 15 in file "/home/kpit/MPLABXProjects/IECTOOLTest1/LED_Ctrl.c"
  9349 ;; Parameters:    Size  Location     Type
  9350 ;;  LEDcolor        1    wreg     unsigned char 
  9351 ;;  LedONDuratio    1    0[BANK0 ] unsigned char 
  9352 ;;  LedONNumBlin    1    1[BANK0 ] unsigned char 
  9353 ;; Auto vars:     Size  Location     Type
  9354 ;;  LEDcolor        1    4[BANK0 ] unsigned char 
  9355 ;; Return value:  Size  Location     Type
  9356 ;;                  1    wreg      unsigned char 
  9357 ;; Registers used:
  9358 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9359 ;; Tracked objects:
  9360 ;;		On entry : 0/0
  9361 ;;		On exit  : 0/0
  9362 ;;		Unchanged: 0/0
  9363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9364 ;;      Params:         0       2       0       0       0       0       0       0
  9365 ;;      Locals:         0       1       0       0       0       0       0       0
  9366 ;;      Temps:          0       2       0       0       0       0       0       0
  9367 ;;      Totals:         0       5       0       0       0       0       0       0
  9368 ;;Total ram usage:        5 bytes
  9369 ;; Hardware stack levels used:    1
  9370 ;; Hardware stack levels required when called:    7
  9371 ;; This function calls:
  9372 ;;		___lwdiv
  9373 ;;		___wmul
  9374 ;; This function is called by:
  9375 ;;		_main
  9376 ;;		_ProtocolManager
  9377 ;; This function uses a non-reentrant model
  9378 ;;
  9379                           
  9380                           
  9381                           ;psect for function _LedONStartConfig
  9382  06D9                     _LedONStartConfig:	
  9383                           
  9384                           ;incstack = 0
  9385                           ; Regs used in _LedONStartConfig: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9386                           ;LedONStartConfig@LEDcolor stored from wreg
  9387  06D9  0020               	movlb	0	; select bank0
  9388  06DA  00DC               	movwf	LedONStartConfig@LEDcolor
  9389                           
  9390                           ;LED_Ctrl.c: 17: if(Led_ON!=1 && (LedONDurationSec!=0)&& (LedONDurationSec <= 60))
  9391  06DB  037A               	decf	_Led_ON,w
  9392  06DC  1903               	btfsc	3,2
  9393  06DD  2F3B               	goto	l3868
  9394  06DE  0858               	movf	LedONStartConfig@LedONDurationSec,w
  9395  06DF  1903               	btfsc	3,2
  9396  06E0  2F3B               	goto	l3868
  9397  06E1  303D               	movlw	61
  9398  06E2  0258               	subwf	LedONStartConfig@LedONDurationSec,w
  9399  06E3  1803               	skipnc
  9400  06E4  2F3B               	goto	l3868
  9401                           
  9402                           ;LED_Ctrl.c: 18: {
  9403                           ;LED_Ctrl.c: 19: Led_ON=1;
  9404  06E5  01FA               	clrf	_Led_ON
  9405  06E6  0AFA               	incf	_Led_ON,f
  9406                           
  9407                           ;LED_Ctrl.c: 20: LED_Color=LEDcolor;
  9408  06E7  085C               	movf	LedONStartConfig@LEDcolor,w
  9409  06E8  00DA               	movwf	??_LedONStartConfig
  9410  06E9  085A               	movf	??_LedONStartConfig,w
  9411  06EA  00FB               	movwf	_LED_Color
  9412                           
  9413                           ;LED_Ctrl.c: 22: switch(LED_Color)
  9414  06EB  2EF5               	goto	l3852
  9415  06EC                     l435:	
  9416                           ;LED_Ctrl.c: 23: {
  9417                           ;LED_Ctrl.c: 24: case 0 : do { LATC0 = 1; } while(0);
  9418                           
  9419  06EC  0022               	movlb	2	; select bank2
  9420  06ED  140E               	bsf	14,0	;volatile
  9421                           
  9422                           ;LED_Ctrl.c: 25: break;
  9423  06EE  2F00               	goto	l3854
  9424  06EF                     l439:	
  9425                           ;LED_Ctrl.c: 26: case 1 : do { LATC1 = 1; } while(0);
  9426                           
  9427  06EF  0022               	movlb	2	; select bank2
  9428  06F0  148E               	bsf	14,1	;volatile
  9429                           
  9430                           ;LED_Ctrl.c: 27: break;
  9431  06F1  2F00               	goto	l3854
  9432  06F2                     l442:	
  9433                           ;LED_Ctrl.c: 28: case 2 : do { LATC2 = 1; } while(0);
  9434                           
  9435  06F2  0022               	movlb	2	; select bank2
  9436  06F3  150E               	bsf	14,2	;volatile
  9437                           
  9438                           ;LED_Ctrl.c: 31: }
  9439                           
  9440                           ;LED_Ctrl.c: 30: default : break;
  9441                           
  9442                           ;LED_Ctrl.c: 29: break;
  9443  06F4  2F00               	goto	l3854
  9444  06F5                     l3852:	
  9445  06F5  087B               	movf	_LED_Color,w
  9446                           
  9447                           ; Switch size 1, requested type "space"
  9448                           ; Number of cases is 3, Range of values is 0 to 2
  9449                           ; switch strategies available:
  9450                           ; Name         Instructions Cycles
  9451                           ; simple_byte           10     6 (average)
  9452                           ; direct_byte           12     6 (fixed)
  9453                           ; jumptable            260     6 (fixed)
  9454                           ;	Chosen strategy is simple_byte
  9455  06F6  3A00               	xorlw	0	; case 0
  9456  06F7  1903               	skipnz
  9457  06F8  2EEC               	goto	l435
  9458  06F9  3A01               	xorlw	1	; case 1
  9459  06FA  1903               	skipnz
  9460  06FB  2EEF               	goto	l439
  9461  06FC  3A03               	xorlw	3	; case 2
  9462  06FD  1903               	skipnz
  9463  06FE  2EF2               	goto	l442
  9464  06FF  2F00               	goto	l3854
  9465  0700                     l3854:	
  9466                           
  9467                           ;LED_Ctrl.c: 33: LED_msec_Cnt=0;
  9468  0700  0020               	movlb	0	; select bank0
  9469  0701  01B0               	clrf	_LED_msec_Cnt
  9470  0702  01B1               	clrf	_LED_msec_Cnt+1
  9471                           
  9472                           ;LED_Ctrl.c: 34: LedON_Duration_msec=((unsigned int)LedONDurationSec)*1000;
  9473  0703  0858               	movf	LedONStartConfig@LedONDurationSec,w
  9474  0704  00DA               	movwf	??_LedONStartConfig
  9475  0705  01DB               	clrf	??_LedONStartConfig+1
  9476  0706  085A               	movf	??_LedONStartConfig,w
  9477  0707  00F2               	movwf	___wmul@multiplier
  9478  0708  085B               	movf	??_LedONStartConfig+1,w
  9479  0709  00F3               	movwf	___wmul@multiplier+1
  9480  070A  30E8               	movlw	232
  9481  070B  00F4               	movwf	___wmul@multiplicand
  9482  070C  3003               	movlw	3
  9483  070D  00F5               	movwf	___wmul@multiplicand+1
  9484  070E  318E  2659  3186   	fcall	___wmul
  9485  0711  0873               	movf	?___wmul+1,w
  9486  0712  0020               	movlb	0	; select bank0
  9487  0713  00B3               	movwf	_LedON_Duration_msec+1
  9488  0714  0872               	movf	?___wmul,w
  9489  0715  00B2               	movwf	_LedON_Duration_msec
  9490                           
  9491                           ;LED_Ctrl.c: 35: if(LedONNumBlink > 1)
  9492  0716  3002               	movlw	2
  9493  0717  0259               	subwf	LedONStartConfig@LedONNumBlink,w
  9494  0718  1C03               	skipc
  9495  0719  2F31               	goto	l3862
  9496                           
  9497                           ;LED_Ctrl.c: 36: Blick_tickPointMsec=(LedON_Duration_msec/(((LedONNumBlink-1)*2)+1));
  9498  071A  0859               	movf	LedONStartConfig@LedONNumBlink,w
  9499  071B  00DA               	movwf	??_LedONStartConfig
  9500  071C  01DB               	clrf	??_LedONStartConfig+1
  9501  071D  35DA               	lslf	??_LedONStartConfig,f
  9502  071E  0DDB               	rlf	??_LedONStartConfig+1,f
  9503  071F  085A               	movf	??_LedONStartConfig,w
  9504  0720  3EFF               	addlw	255
  9505  0721  00F2               	movwf	___lwdiv@divisor
  9506  0722  30FF               	movlw	255
  9507  0723  3D5B               	addwfc	??_LedONStartConfig+1,w
  9508  0724  00F3               	movwf	___lwdiv@divisor+1
  9509  0725  0833               	movf	_LedON_Duration_msec+1,w
  9510  0726  00F5               	movwf	___lwdiv@dividend+1
  9511  0727  0832               	movf	_LedON_Duration_msec,w
  9512  0728  00F4               	movwf	___lwdiv@dividend
  9513  0729  318E  26D4  3186   	fcall	___lwdiv
  9514  072C  0873               	movf	?___lwdiv+1,w
  9515  072D  0020               	movlb	0	; select bank0
  9516  072E  00A9               	movwf	_Blick_tickPointMsec+1
  9517  072F  0872               	movf	?___lwdiv,w
  9518  0730  2F34               	goto	L33
  9519  0731                     l3862:	
  9520                           
  9521                           ;LED_Ctrl.c: 37: else
  9522                           ;LED_Ctrl.c: 38: Blick_tickPointMsec=LedON_Duration_msec;
  9523  0731  0833               	movf	_LedON_Duration_msec+1,w
  9524  0732  00A9               	movwf	_Blick_tickPointMsec+1
  9525  0733  0832               	movf	_LedON_Duration_msec,w
  9526  0734                     L33:	
  9527  0734  00A8               	movwf	_Blick_tickPointMsec
  9528                           
  9529                           ;LED_Ctrl.c: 40: Blick_tickPoint=Blick_tickPointMsec;
  9530  0735  0829               	movf	_Blick_tickPointMsec+1,w
  9531  0736  00A7               	movwf	_Blick_tickPoint+1
  9532  0737  0828               	movf	_Blick_tickPointMsec,w
  9533  0738  00A6               	movwf	_Blick_tickPoint
  9534                           
  9535                           ;LED_Ctrl.c: 41: return 1;
  9536  0739  3001               	movlw	1
  9537                           
  9538                           ;LED_Ctrl.c: 42: }
  9539  073A  0008               	return
  9540  073B                     l3868:	
  9541                           
  9542                           ;LED_Ctrl.c: 43: else
  9543                           ;LED_Ctrl.c: 44: {
  9544                           ;LED_Ctrl.c: 45: return 0;
  9545  073B  3000               	movlw	0
  9546  073C  0008               	return
  9547  073D                     __end_of_LedONStartConfig:	
  9548                           
  9549                           	psect	text25
  9550  0E40                     __ptext25:	
  9551 ;; *************** function _FanStartConfig *****************
  9552 ;; Defined at:
  9553 ;;		line 12 in file "/home/kpit/MPLABXProjects/IECTOOLTest1/Fan_Ctrl.c"
  9554 ;; Parameters:    Size  Location     Type
  9555 ;;  FanONDuratio    1    wreg     unsigned char 
  9556 ;; Auto vars:     Size  Location     Type
  9557 ;;  FanONDuratio    1    3[COMMON] unsigned char 
  9558 ;; Return value:  Size  Location     Type
  9559 ;;                  1    wreg      unsigned char 
  9560 ;; Registers used:
  9561 ;;		wreg, status,2, status,0
  9562 ;; Tracked objects:
  9563 ;;		On entry : 0/0
  9564 ;;		On exit  : 0/0
  9565 ;;		Unchanged: 0/0
  9566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9567 ;;      Params:         0       0       0       0       0       0       0       0
  9568 ;;      Locals:         1       0       0       0       0       0       0       0
  9569 ;;      Temps:          1       0       0       0       0       0       0       0
  9570 ;;      Totals:         2       0       0       0       0       0       0       0
  9571 ;;Total ram usage:        2 bytes
  9572 ;; Hardware stack levels used:    1
  9573 ;; Hardware stack levels required when called:    6
  9574 ;; This function calls:
  9575 ;;		Nothing
  9576 ;; This function is called by:
  9577 ;;		_main
  9578 ;;		_ProtocolManager
  9579 ;; This function uses a non-reentrant model
  9580 ;;
  9581                           
  9582                           
  9583                           ;psect for function _FanStartConfig
  9584  0E40                     _FanStartConfig:	
  9585                           
  9586                           ;incstack = 0
  9587                           ; Regs used in _FanStartConfig: [wreg+status,2+status,0]
  9588                           ;FanStartConfig@FanONDurationSec stored from wreg
  9589  0E40  00F3               	movwf	FanStartConfig@FanONDurationSec
  9590                           
  9591                           ;Fan_Ctrl.c: 14: if(Fan_ON!=1 && (FanONDurationSec!=0)&& (FanONDurationSec <= 60))
  9592  0E41  0020               	movlb	0	; select bank0
  9593  0E42  0341               	decf	_Fan_ON,w
  9594  0E43  1903               	btfsc	3,2
  9595  0E44  2E57               	goto	l2976
  9596  0E45  0873               	movf	FanStartConfig@FanONDurationSec,w
  9597  0E46  1903               	btfsc	3,2
  9598  0E47  2E57               	goto	l2976
  9599  0E48  303D               	movlw	61
  9600  0E49  0273               	subwf	FanStartConfig@FanONDurationSec,w
  9601  0E4A  1803               	skipnc
  9602  0E4B  2E57               	goto	l2976
  9603                           
  9604                           ;Fan_Ctrl.c: 15: {
  9605                           ;Fan_Ctrl.c: 16: Fan_ON=1;
  9606  0E4C  01C1               	clrf	_Fan_ON
  9607  0E4D  0AC1               	incf	_Fan_ON,f
  9608                           
  9609                           ;Fan_Ctrl.c: 17: LED_Sec_Cnt=0;
  9610  0E4E  01C2               	clrf	_LED_Sec_Cnt
  9611                           
  9612                           ;Fan_Ctrl.c: 18: LedON_Duration_sec=FanONDurationSec;
  9613  0E4F  0873               	movf	FanStartConfig@FanONDurationSec,w
  9614  0E50  00F2               	movwf	??_FanStartConfig
  9615  0E51  0872               	movf	??_FanStartConfig,w
  9616  0E52  00C3               	movwf	_LedON_Duration_sec
  9617                           
  9618                           ;Fan_Ctrl.c: 19: do { LATC6 = 1; } while(0);
  9619  0E53  0022               	movlb	2	; select bank2
  9620  0E54  170E               	bsf	14,6	;volatile
  9621                           
  9622                           ;Fan_Ctrl.c: 20: return 1;
  9623  0E55  3001               	movlw	1
  9624                           
  9625                           ;Fan_Ctrl.c: 21: }
  9626  0E56  0008               	return
  9627  0E57                     l2976:	
  9628                           
  9629                           ;Fan_Ctrl.c: 22: else
  9630                           ;Fan_Ctrl.c: 23: {
  9631                           ;Fan_Ctrl.c: 24: return 0;
  9632  0E57  3000               	movlw	0
  9633  0E58  0008               	return
  9634  0E59                     __end_of_FanStartConfig:	
  9635                           
  9636                           	psect	text26
  9637  0D8C                     __ptext26:	
  9638 ;; *************** function _EUSART_Read *****************
  9639 ;; Defined at:
  9640 ;;		line 78 in file "mcc_generated_files/eusart.c"
  9641 ;; Parameters:    Size  Location     Type
  9642 ;;		None
  9643 ;; Auto vars:     Size  Location     Type
  9644 ;;		None
  9645 ;; Return value:  Size  Location     Type
  9646 ;;                  1    wreg      unsigned char 
  9647 ;; Registers used:
  9648 ;;		wreg
  9649 ;; Tracked objects:
  9650 ;;		On entry : 0/0
  9651 ;;		On exit  : 0/0
  9652 ;;		Unchanged: 0/0
  9653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9654 ;;      Params:         0       0       0       0       0       0       0       0
  9655 ;;      Locals:         0       0       0       0       0       0       0       0
  9656 ;;      Temps:          0       0       0       0       0       0       0       0
  9657 ;;      Totals:         0       0       0       0       0       0       0       0
  9658 ;;Total ram usage:        0 bytes
  9659 ;; Hardware stack levels used:    1
  9660 ;; Hardware stack levels required when called:    6
  9661 ;; This function calls:
  9662 ;;		Nothing
  9663 ;; This function is called by:
  9664 ;;		_ProtocolManager
  9665 ;; This function uses a non-reentrant model
  9666 ;;
  9667                           
  9668                           
  9669                           ;psect for function _EUSART_Read
  9670  0D8C                     _EUSART_Read:	
  9671  0D8C                     l289:	
  9672                           ;eusart.c: 82: {
  9673                           
  9674                           ;eusart.c: 81: while(!PIR1bits.RCIF)
  9675                           
  9676                           ;incstack = 0
  9677                           ; Regs used in _EUSART_Read: [wreg]
  9678                           
  9679  0D8C  0020               	movlb	0	; select bank0
  9680  0D8D  1E91               	btfss	17,5	;volatile
  9681  0D8E  2D8C               	goto	l289
  9682                           
  9683                           ;eusart.c: 83: }
  9684                           ;eusart.c: 85: if(1 == RC1STAbits.OERR)
  9685  0D8F  0023               	movlb	3	; select bank3
  9686  0D90  1C9D               	btfss	29,1	;volatile
  9687  0D91  2D94               	goto	l2890
  9688                           
  9689                           ;eusart.c: 86: {
  9690                           ;eusart.c: 89: RC1STAbits.CREN = 0;
  9691  0D92  121D               	bcf	29,4	;volatile
  9692                           
  9693                           ;eusart.c: 90: RC1STAbits.CREN = 1;
  9694  0D93  161D               	bsf	29,4	;volatile
  9695  0D94                     l2890:	
  9696                           
  9697                           ;eusart.c: 91: }
  9698                           ;eusart.c: 93: return RC1REG;
  9699  0D94  0819               	movf	25,w	;volatile
  9700  0D95  0008               	return
  9701  0D96                     __end_of_EUSART_Read:	
  9702                           
  9703                           	psect	text27
  9704  0E74                     __ptext27:	
  9705 ;; *************** function _DATAEE_WriteByte *****************
  9706 ;; Defined at:
  9707 ;;		line 180 in file "mcc_generated_files/memory.c"
  9708 ;; Parameters:    Size  Location     Type
  9709 ;;  bAdd            2    2[COMMON] unsigned int 
  9710 ;;  bData           1    4[COMMON] unsigned char 
  9711 ;; Auto vars:     Size  Location     Type
  9712 ;;  GIEBitValue     1    5[COMMON] unsigned char 
  9713 ;; Return value:  Size  Location     Type
  9714 ;;                  1    wreg      void 
  9715 ;; Registers used:
  9716 ;;		wreg, status,2, status,0
  9717 ;; Tracked objects:
  9718 ;;		On entry : 0/0
  9719 ;;		On exit  : 0/0
  9720 ;;		Unchanged: 0/0
  9721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9722 ;;      Params:         3       0       0       0       0       0       0       0
  9723 ;;      Locals:         1       0       0       0       0       0       0       0
  9724 ;;      Temps:          0       0       0       0       0       0       0       0
  9725 ;;      Totals:         4       0       0       0       0       0       0       0
  9726 ;;Total ram usage:        4 bytes
  9727 ;; Hardware stack levels used:    1
  9728 ;; Hardware stack levels required when called:    6
  9729 ;; This function calls:
  9730 ;;		Nothing
  9731 ;; This function is called by:
  9732 ;;		_ProtocolManager
  9733 ;; This function uses a non-reentrant model
  9734 ;;
  9735                           
  9736                           
  9737                           ;psect for function _DATAEE_WriteByte
  9738  0E74                     _DATAEE_WriteByte:	
  9739                           
  9740                           ;memory.c: 182: uint8_t GIEBitValue = INTCONbits.GIE;
  9741                           
  9742                           ;incstack = 0
  9743                           ; Regs used in _DATAEE_WriteByte: [wreg+status,2+status,0]
  9744  0E74  3000               	movlw	0
  9745  0E75  1B8B               	btfsc	11,7	;volatile
  9746  0E76  3001               	movlw	1
  9747  0E77  00F5               	movwf	DATAEE_WriteByte@GIEBitValue
  9748                           
  9749                           ;memory.c: 184: NVMADRH = ((bAdd >> 8) & 0xFF);
  9750  0E78  0873               	movf	DATAEE_WriteByte@bAdd+1,w
  9751  0E79  0031               	movlb	17	; select bank17
  9752  0E7A  0092               	movwf	18	;volatile
  9753                           
  9754                           ;memory.c: 185: NVMADRL = (bAdd & 0xFF);
  9755  0E7B  0872               	movf	DATAEE_WriteByte@bAdd,w
  9756  0E7C  0091               	movwf	17	;volatile
  9757                           
  9758                           ;memory.c: 186: NVMDATL = bData;
  9759  0E7D  0874               	movf	DATAEE_WriteByte@bData,w
  9760  0E7E  0093               	movwf	19	;volatile
  9761                           
  9762                           ;memory.c: 187: NVMCON1bits.NVMREGS = 1;
  9763  0E7F  1715               	bsf	21,6	;volsfr
  9764                           
  9765                           ;memory.c: 188: NVMCON1bits.WREN = 1;
  9766  0E80  1515               	bsf	21,2	;volsfr
  9767                           
  9768                           ;memory.c: 189: INTCONbits.GIE = 0;
  9769  0E81  138B               	bcf	11,7	;volatile
  9770                           
  9771                           ;memory.c: 190: NVMCON2 = 0x55;
  9772  0E82  3055               	movlw	85
  9773  0E83  0096               	movwf	22	;volsfr
  9774                           
  9775                           ;memory.c: 191: NVMCON2 = 0xAA;
  9776  0E84  30AA               	movlw	170
  9777  0E85  0096               	movwf	22	;volsfr
  9778                           
  9779                           ;memory.c: 192: NVMCON1bits.WR = 1;
  9780  0E86  1495               	bsf	21,1	;volsfr
  9781  0E87                     l259:	
  9782                           ;memory.c: 195: {
  9783                           
  9784                           ;memory.c: 194: while (NVMCON1bits.WR)
  9785                           
  9786  0E87  1895               	btfsc	21,1	;volsfr
  9787  0E88  2E87               	goto	l259
  9788                           
  9789                           ;memory.c: 196: }
  9790                           ;memory.c: 198: NVMCON1bits.WREN = 0;
  9791  0E89  1115               	bcf	21,2	;volsfr
  9792                           
  9793                           ;memory.c: 199: INTCONbits.GIE = GIEBitValue;
  9794  0E8A  0C75               	rrf	DATAEE_WriteByte@GIEBitValue,w
  9795  0E8B  1C03               	skipc
  9796  0E8C  138B               	bcf	11,7	;volatile
  9797  0E8D  1803               	skipnc
  9798  0E8E  178B               	bsf	11,7	;volatile
  9799  0E8F  0008               	return
  9800  0E90                     __end_of_DATAEE_WriteByte:	
  9801                           
  9802                           	psect	text28
  9803  0DB5                     __ptext28:	
  9804 ;; *************** function _DATAEE_ReadByte *****************
  9805 ;; Defined at:
  9806 ;;		line 202 in file "mcc_generated_files/memory.c"
  9807 ;; Parameters:    Size  Location     Type
  9808 ;;  bAdd            2    2[COMMON] unsigned int 
  9809 ;; Auto vars:     Size  Location     Type
  9810 ;;		None
  9811 ;; Return value:  Size  Location     Type
  9812 ;;                  1    wreg      unsigned char 
  9813 ;; Registers used:
  9814 ;;		wreg, status,2
  9815 ;; Tracked objects:
  9816 ;;		On entry : 0/0
  9817 ;;		On exit  : 0/0
  9818 ;;		Unchanged: 0/0
  9819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9820 ;;      Params:         2       0       0       0       0       0       0       0
  9821 ;;      Locals:         0       0       0       0       0       0       0       0
  9822 ;;      Temps:          0       0       0       0       0       0       0       0
  9823 ;;      Totals:         2       0       0       0       0       0       0       0
  9824 ;;Total ram usage:        2 bytes
  9825 ;; Hardware stack levels used:    1
  9826 ;; Hardware stack levels required when called:    6
  9827 ;; This function calls:
  9828 ;;		Nothing
  9829 ;; This function is called by:
  9830 ;;		_ProtocolManager
  9831 ;; This function uses a non-reentrant model
  9832 ;;
  9833                           
  9834                           
  9835                           ;psect for function _DATAEE_ReadByte
  9836  0DB5                     _DATAEE_ReadByte:	
  9837                           
  9838                           ;memory.c: 204: NVMADRH = ((bAdd >> 8) & 0xFF);
  9839                           
  9840                           ;incstack = 0
  9841                           ; Regs used in _DATAEE_ReadByte: [wreg+status,2]
  9842  0DB5  0873               	movf	DATAEE_ReadByte@bAdd+1,w
  9843  0DB6  0031               	movlb	17	; select bank17
  9844  0DB7  0092               	movwf	18	;volatile
  9845                           
  9846                           ;memory.c: 205: NVMADRL = (bAdd & 0xFF);
  9847  0DB8  0872               	movf	DATAEE_ReadByte@bAdd,w
  9848  0DB9  0091               	movwf	17	;volatile
  9849                           
  9850                           ;memory.c: 206: NVMCON1bits.NVMREGS = 1;
  9851  0DBA  1715               	bsf	21,6	;volsfr
  9852                           
  9853                           ;memory.c: 207: NVMCON1bits.RD = 1;
  9854  0DBB  1415               	bsf	21,0	;volsfr
  9855                           
  9856                           ;memory.c: 208: __nop();
  9857  0DBC  0000               	nop
  9858                           
  9859                           ;memory.c: 209: __nop();
  9860  0DBD  0000               	nop
  9861                           
  9862                           ;memory.c: 211: return (NVMDATL);
  9863  0DBE  0031               	movlb	17	; select bank17
  9864  0DBF  0813               	movf	19,w	;volatile
  9865  0DC0  0008               	return
  9866  0DC1                     __end_of_DATAEE_ReadByte:	
  9867                           
  9868                           	psect	text29
  9869  0798                     __ptext29:	
  9870 ;; *************** function _BuzzerStartConfig *****************
  9871 ;; Defined at:
  9872 ;;		line 15 in file "/home/kpit/MPLABXProjects/IECTOOLTest1/Buzzer_Ctrl.c"
  9873 ;; Parameters:    Size  Location     Type
  9874 ;;  BuzzDuration    1    wreg     unsigned char 
  9875 ;;  BuzzNumBeep     1    0[BANK0 ] unsigned char 
  9876 ;; Auto vars:     Size  Location     Type
  9877 ;;  BuzzDuration    1    3[BANK0 ] unsigned char 
  9878 ;; Return value:  Size  Location     Type
  9879 ;;                  1    wreg      unsigned char 
  9880 ;; Registers used:
  9881 ;;		wreg, status,2, status,0, pclath, cstack
  9882 ;; Tracked objects:
  9883 ;;		On entry : 0/0
  9884 ;;		On exit  : 0/0
  9885 ;;		Unchanged: 0/0
  9886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9887 ;;      Params:         0       1       0       0       0       0       0       0
  9888 ;;      Locals:         0       1       0       0       0       0       0       0
  9889 ;;      Temps:          0       2       0       0       0       0       0       0
  9890 ;;      Totals:         0       4       0       0       0       0       0       0
  9891 ;;Total ram usage:        4 bytes
  9892 ;; Hardware stack levels used:    1
  9893 ;; Hardware stack levels required when called:    7
  9894 ;; This function calls:
  9895 ;;		_TMR2_StartTimer
  9896 ;;		_TMR2_WriteTimer
  9897 ;;		___lwdiv
  9898 ;;		___wmul
  9899 ;; This function is called by:
  9900 ;;		_main
  9901 ;;		_ProtocolManager
  9902 ;; This function uses a non-reentrant model
  9903 ;;
  9904                           
  9905                           
  9906                           ;psect for function _BuzzerStartConfig
  9907  0798                     _BuzzerStartConfig:	
  9908                           
  9909                           ;incstack = 0
  9910                           ; Regs used in _BuzzerStartConfig: [wreg+status,2+status,0+pclath+cstack]
  9911                           ;BuzzerStartConfig@BuzzDurationSec stored from wreg
  9912  0798  0020               	movlb	0	; select bank0
  9913  0799  00DB               	movwf	BuzzerStartConfig@BuzzDurationSec
  9914                           
  9915                           ;Buzzer_Ctrl.c: 17: if(Buzzer_ON!=1 && (BuzzDurationSec!=0)&& (BuzzDurationSec <= 60))
  9916  079A  033E               	decf	_Buzzer_ON,w
  9917  079B  1903               	btfsc	3,2
  9918  079C  2FE8               	goto	l3836
  9919  079D  085B               	movf	BuzzerStartConfig@BuzzDurationSec,w
  9920  079E  1903               	btfsc	3,2
  9921  079F  2FE8               	goto	l3836
  9922  07A0  303D               	movlw	61
  9923  07A1  025B               	subwf	BuzzerStartConfig@BuzzDurationSec,w
  9924  07A2  1803               	skipnc
  9925  07A3  2FE8               	goto	l3836
  9926                           
  9927                           ;Buzzer_Ctrl.c: 18: {
  9928                           ;Buzzer_Ctrl.c: 19: Buzzer_ON=1;
  9929  07A4  01BE               	clrf	_Buzzer_ON
  9930  07A5  0ABE               	incf	_Buzzer_ON,f
  9931                           
  9932                           ;Buzzer_Ctrl.c: 20: TMR2_WriteTimer(0);
  9933  07A6  3000               	movlw	0
  9934  07A7  318D  2567  3187   	fcall	_TMR2_WriteTimer
  9935                           
  9936                           ;Buzzer_Ctrl.c: 21: TMR2_StartTimer();
  9937  07AA  318D  254A  3187   	fcall	_TMR2_StartTimer
  9938                           
  9939                           ;Buzzer_Ctrl.c: 24: Buzzer_1msec_Cnt=0;
  9940  07AD  0020               	movlb	0	; select bank0
  9941  07AE  01AA               	clrf	_Buzzer_1msec_Cnt
  9942  07AF  01AB               	clrf	_Buzzer_1msec_Cnt+1
  9943                           
  9944                           ;Buzzer_Ctrl.c: 25: Buzzer_Duration_1msec=((unsigned int)BuzzDurationSec)*1000;
  9945  07B0  085B               	movf	BuzzerStartConfig@BuzzDurationSec,w
  9946  07B1  00D9               	movwf	??_BuzzerStartConfig
  9947  07B2  01DA               	clrf	??_BuzzerStartConfig+1
  9948  07B3  0859               	movf	??_BuzzerStartConfig,w
  9949  07B4  00F2               	movwf	___wmul@multiplier
  9950  07B5  085A               	movf	??_BuzzerStartConfig+1,w
  9951  07B6  00F3               	movwf	___wmul@multiplier+1
  9952  07B7  30E8               	movlw	232
  9953  07B8  00F4               	movwf	___wmul@multiplicand
  9954  07B9  3003               	movlw	3
  9955  07BA  00F5               	movwf	___wmul@multiplicand+1
  9956  07BB  318E  2659  3187   	fcall	___wmul
  9957  07BE  0873               	movf	?___wmul+1,w
  9958  07BF  0020               	movlb	0	; select bank0
  9959  07C0  00AD               	movwf	_Buzzer_Duration_1msec+1
  9960  07C1  0872               	movf	?___wmul,w
  9961  07C2  00AC               	movwf	_Buzzer_Duration_1msec
  9962                           
  9963                           ;Buzzer_Ctrl.c: 26: if(BuzzNumBeep > 1)
  9964  07C3  3002               	movlw	2
  9965  07C4  0258               	subwf	BuzzerStartConfig@BuzzNumBeep,w
  9966  07C5  1C03               	skipc
  9967  07C6  2FDE               	goto	l3830
  9968                           
  9969                           ;Buzzer_Ctrl.c: 27: Bbeep_tickPointMsec=(Buzzer_Duration_1msec/(((BuzzNumBeep-1)*2)+1));
  9970  07C7  0858               	movf	BuzzerStartConfig@BuzzNumBeep,w
  9971  07C8  00D9               	movwf	??_BuzzerStartConfig
  9972  07C9  01DA               	clrf	??_BuzzerStartConfig+1
  9973  07CA  35D9               	lslf	??_BuzzerStartConfig,f
  9974  07CB  0DDA               	rlf	??_BuzzerStartConfig+1,f
  9975  07CC  0859               	movf	??_BuzzerStartConfig,w
  9976  07CD  3EFF               	addlw	255
  9977  07CE  00F2               	movwf	___lwdiv@divisor
  9978  07CF  30FF               	movlw	255
  9979  07D0  3D5A               	addwfc	??_BuzzerStartConfig+1,w
  9980  07D1  00F3               	movwf	___lwdiv@divisor+1
  9981  07D2  082D               	movf	_Buzzer_Duration_1msec+1,w
  9982  07D3  00F5               	movwf	___lwdiv@dividend+1
  9983  07D4  082C               	movf	_Buzzer_Duration_1msec,w
  9984  07D5  00F4               	movwf	___lwdiv@dividend
  9985  07D6  318E  26D4  3187   	fcall	___lwdiv
  9986  07D9  0873               	movf	?___lwdiv+1,w
  9987  07DA  0020               	movlb	0	; select bank0
  9988  07DB  00A5               	movwf	_Bbeep_tickPointMsec+1
  9989  07DC  0872               	movf	?___lwdiv,w
  9990  07DD  2FE1               	goto	L34
  9991  07DE                     l3830:	
  9992                           
  9993                           ;Buzzer_Ctrl.c: 28: else
  9994                           ;Buzzer_Ctrl.c: 29: Bbeep_tickPointMsec=Buzzer_Duration_1msec;
  9995  07DE  082D               	movf	_Buzzer_Duration_1msec+1,w
  9996  07DF  00A5               	movwf	_Bbeep_tickPointMsec+1
  9997  07E0  082C               	movf	_Buzzer_Duration_1msec,w
  9998  07E1                     L34:	
  9999  07E1  00A4               	movwf	_Bbeep_tickPointMsec
 10000                           
 10001                           ;Buzzer_Ctrl.c: 31: Bbeep_tickPoint=Bbeep_tickPointMsec;
 10002  07E2  0825               	movf	_Bbeep_tickPointMsec+1,w
 10003  07E3  00A3               	movwf	_Bbeep_tickPoint+1
 10004  07E4  0824               	movf	_Bbeep_tickPointMsec,w
 10005  07E5  00A2               	movwf	_Bbeep_tickPoint
 10006                           
 10007                           ;Buzzer_Ctrl.c: 32: return 1;
 10008  07E6  3001               	movlw	1
 10009                           
 10010                           ;Buzzer_Ctrl.c: 33: }
 10011  07E7  0008               	return
 10012  07E8                     l3836:	
 10013                           
 10014                           ;Buzzer_Ctrl.c: 34: else
 10015                           ;Buzzer_Ctrl.c: 35: {
 10016                           ;Buzzer_Ctrl.c: 36: return 0;
 10017  07E8  3000               	movlw	0
 10018  07E9  0008               	return
 10019  07EA                     __end_of_BuzzerStartConfig:	
 10020                           
 10021                           	psect	text30
 10022  0E59                     __ptext30:	
 10023 ;; *************** function ___wmul *****************
 10024 ;; Defined at:
 10025 ;;		line 15 in file "/opt/microchip/xc8/v1.37/sources/common/Umul16.c"
 10026 ;; Parameters:    Size  Location     Type
 10027 ;;  multiplier      2    2[COMMON] unsigned int 
 10028 ;;  multiplicand    2    4[COMMON] unsigned int 
 10029 ;; Auto vars:     Size  Location     Type
 10030 ;;  product         2    6[COMMON] unsigned int 
 10031 ;; Return value:  Size  Location     Type
 10032 ;;                  2    2[COMMON] unsigned int 
 10033 ;; Registers used:
 10034 ;;		wreg, status,2, status,0
 10035 ;; Tracked objects:
 10036 ;;		On entry : 0/0
 10037 ;;		On exit  : 0/0
 10038 ;;		Unchanged: 0/0
 10039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10040 ;;      Params:         4       0       0       0       0       0       0       0
 10041 ;;      Locals:         2       0       0       0       0       0       0       0
 10042 ;;      Temps:          0       0       0       0       0       0       0       0
 10043 ;;      Totals:         6       0       0       0       0       0       0       0
 10044 ;;Total ram usage:        6 bytes
 10045 ;; Hardware stack levels used:    1
 10046 ;; Hardware stack levels required when called:    6
 10047 ;; This function calls:
 10048 ;;		Nothing
 10049 ;; This function is called by:
 10050 ;;		_BuzzerStartConfig
 10051 ;;		_LedONStartConfig
 10052 ;; This function uses a non-reentrant model
 10053 ;;
 10054                           
 10055                           
 10056                           ;psect for function ___wmul
 10057  0E59                     ___wmul:	
 10058                           
 10059                           ;incstack = 0
 10060                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 10061  0E59  01F6               	clrf	___wmul@product
 10062  0E5A  01F7               	clrf	___wmul@product+1
 10063  0E5B                     l3764:	
 10064  0E5B  1C72               	btfss	___wmul@multiplier,0
 10065  0E5C  2E61               	goto	l862
 10066  0E5D  0874               	movf	___wmul@multiplicand,w
 10067  0E5E  07F6               	addwf	___wmul@product,f
 10068  0E5F  0875               	movf	___wmul@multiplicand+1,w
 10069  0E60  3DF7               	addwfc	___wmul@product+1,f
 10070  0E61                     l862:	
 10071  0E61  3001               	movlw	1
 10072  0E62                     u2155:	
 10073  0E62  35F4               	lslf	___wmul@multiplicand,f
 10074  0E63  0DF5               	rlf	___wmul@multiplicand+1,f
 10075  0E64  0B89               	decfsz	9,f
 10076  0E65  2E62               	goto	u2155
 10077  0E66  3001               	movlw	1
 10078  0E67                     u2165:	
 10079  0E67  36F3               	lsrf	___wmul@multiplier+1,f
 10080  0E68  0CF2               	rrf	___wmul@multiplier,f
 10081  0E69  0B89               	decfsz	9,f
 10082  0E6A  2E67               	goto	u2165
 10083  0E6B  0872               	movf	___wmul@multiplier,w
 10084  0E6C  0473               	iorwf	___wmul@multiplier+1,w
 10085  0E6D  1D03               	btfss	3,2
 10086  0E6E  2E5B               	goto	l3764
 10087  0E6F  0877               	movf	___wmul@product+1,w
 10088  0E70  00F3               	movwf	?___wmul+1
 10089  0E71  0876               	movf	___wmul@product,w
 10090  0E72  00F2               	movwf	?___wmul
 10091  0E73  0008               	return
 10092  0E74                     __end_of___wmul:	
 10093                           
 10094                           	psect	text31
 10095  0ED4                     __ptext31:	
 10096 ;; *************** function ___lwdiv *****************
 10097 ;; Defined at:
 10098 ;;		line 6 in file "/opt/microchip/xc8/v1.37/sources/common/lwdiv.c"
 10099 ;; Parameters:    Size  Location     Type
 10100 ;;  divisor         2    2[COMMON] unsigned int 
 10101 ;;  dividend        2    4[COMMON] unsigned int 
 10102 ;; Auto vars:     Size  Location     Type
 10103 ;;  quotient        2    8[COMMON] unsigned int 
 10104 ;;  counter         1    7[COMMON] unsigned char 
 10105 ;; Return value:  Size  Location     Type
 10106 ;;                  2    2[COMMON] unsigned int 
 10107 ;; Registers used:
 10108 ;;		wreg, status,2, status,0
 10109 ;; Tracked objects:
 10110 ;;		On entry : 0/0
 10111 ;;		On exit  : 0/0
 10112 ;;		Unchanged: 0/0
 10113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10114 ;;      Params:         4       0       0       0       0       0       0       0
 10115 ;;      Locals:         3       0       0       0       0       0       0       0
 10116 ;;      Temps:          1       0       0       0       0       0       0       0
 10117 ;;      Totals:         8       0       0       0       0       0       0       0
 10118 ;;Total ram usage:        8 bytes
 10119 ;; Hardware stack levels used:    1
 10120 ;; Hardware stack levels required when called:    6
 10121 ;; This function calls:
 10122 ;;		Nothing
 10123 ;; This function is called by:
 10124 ;;		_BuzzerStartConfig
 10125 ;;		_LedONStartConfig
 10126 ;; This function uses a non-reentrant model
 10127 ;;
 10128                           
 10129                           
 10130                           ;psect for function ___lwdiv
 10131  0ED4                     ___lwdiv:	
 10132                           
 10133                           ;incstack = 0
 10134                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 10135  0ED4  01F8               	clrf	___lwdiv@quotient
 10136  0ED5  01F9               	clrf	___lwdiv@quotient+1
 10137  0ED6  0872               	movf	___lwdiv@divisor,w
 10138  0ED7  0473               	iorwf	___lwdiv@divisor+1,w
 10139  0ED8  1903               	btfsc	3,2
 10140  0ED9  2F03               	goto	l3798
 10141  0EDA  01F7               	clrf	___lwdiv@counter
 10142  0EDB  0AF7               	incf	___lwdiv@counter,f
 10143  0EDC                     l3786:	
 10144  0EDC  1BF3               	btfsc	___lwdiv@divisor+1,7
 10145  0EDD  2EE8               	goto	l3788
 10146  0EDE  3001               	movlw	1
 10147  0EDF                     u2195:	
 10148  0EDF  35F2               	lslf	___lwdiv@divisor,f
 10149  0EE0  0DF3               	rlf	___lwdiv@divisor+1,f
 10150  0EE1  0B89               	decfsz	9,f
 10151  0EE2  2EDF               	goto	u2195
 10152  0EE3  3001               	movlw	1
 10153  0EE4  00F6               	movwf	??___lwdiv
 10154  0EE5  0876               	movf	??___lwdiv,w
 10155  0EE6  07F7               	addwf	___lwdiv@counter,f
 10156  0EE7  2EDC               	goto	l3786
 10157  0EE8                     l3788:	
 10158  0EE8  3001               	movlw	1
 10159  0EE9                     u2215:	
 10160  0EE9  35F8               	lslf	___lwdiv@quotient,f
 10161  0EEA  0DF9               	rlf	___lwdiv@quotient+1,f
 10162  0EEB  0B89               	decfsz	9,f
 10163  0EEC  2EE9               	goto	u2215
 10164  0EED  0873               	movf	___lwdiv@divisor+1,w
 10165  0EEE  0275               	subwf	___lwdiv@dividend+1,w
 10166  0EEF  1D03               	skipz
 10167  0EF0  2EF3               	goto	u2225
 10168  0EF1  0872               	movf	___lwdiv@divisor,w
 10169  0EF2  0274               	subwf	___lwdiv@dividend,w
 10170  0EF3                     u2225:	
 10171  0EF3  1C03               	skipc
 10172  0EF4  2EFA               	goto	l3794
 10173  0EF5  0872               	movf	___lwdiv@divisor,w
 10174  0EF6  02F4               	subwf	___lwdiv@dividend,f
 10175  0EF7  0873               	movf	___lwdiv@divisor+1,w
 10176  0EF8  3BF5               	subwfb	___lwdiv@dividend+1,f
 10177  0EF9  1478               	bsf	___lwdiv@quotient,0
 10178  0EFA                     l3794:	
 10179  0EFA  3001               	movlw	1
 10180  0EFB                     u2235:	
 10181  0EFB  36F3               	lsrf	___lwdiv@divisor+1,f
 10182  0EFC  0CF2               	rrf	___lwdiv@divisor,f
 10183  0EFD  0B89               	decfsz	9,f
 10184  0EFE  2EFB               	goto	u2235
 10185  0EFF  3001               	movlw	1
 10186  0F00  02F7               	subwf	___lwdiv@counter,f
 10187  0F01  1D03               	btfss	3,2
 10188  0F02  2EE8               	goto	l3788
 10189  0F03                     l3798:	
 10190  0F03  0879               	movf	___lwdiv@quotient+1,w
 10191  0F04  00F3               	movwf	?___lwdiv+1
 10192  0F05  0878               	movf	___lwdiv@quotient,w
 10193  0F06  00F2               	movwf	?___lwdiv
 10194  0F07  0008               	return
 10195  0F08                     __end_of___lwdiv:	
 10196                           
 10197                           	psect	text32
 10198  0D67                     __ptext32:	
 10199 ;; *************** function _TMR2_WriteTimer *****************
 10200 ;; Defined at:
 10201 ;;		line 105 in file "mcc_generated_files/tmr2.c"
 10202 ;; Parameters:    Size  Location     Type
 10203 ;;  timerVal        1    wreg     unsigned char 
 10204 ;; Auto vars:     Size  Location     Type
 10205 ;;  timerVal        1    2[COMMON] unsigned char 
 10206 ;; Return value:  Size  Location     Type
 10207 ;;                  1    wreg      void 
 10208 ;; Registers used:
 10209 ;;		wreg
 10210 ;; Tracked objects:
 10211 ;;		On entry : 0/0
 10212 ;;		On exit  : 0/0
 10213 ;;		Unchanged: 0/0
 10214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10215 ;;      Params:         0       0       0       0       0       0       0       0
 10216 ;;      Locals:         1       0       0       0       0       0       0       0
 10217 ;;      Temps:          0       0       0       0       0       0       0       0
 10218 ;;      Totals:         1       0       0       0       0       0       0       0
 10219 ;;Total ram usage:        1 bytes
 10220 ;; Hardware stack levels used:    1
 10221 ;; Hardware stack levels required when called:    6
 10222 ;; This function calls:
 10223 ;;		Nothing
 10224 ;; This function is called by:
 10225 ;;		_BuzzerStartConfig
 10226 ;; This function uses a non-reentrant model
 10227 ;;
 10228                           
 10229                           
 10230                           ;psect for function _TMR2_WriteTimer
 10231  0D67                     _TMR2_WriteTimer:	
 10232                           
 10233                           ;incstack = 0
 10234                           ; Regs used in _TMR2_WriteTimer: [wreg]
 10235                           ;TMR2_WriteTimer@timerVal stored from wreg
 10236  0D67  00F2               	movwf	TMR2_WriteTimer@timerVal
 10237                           
 10238                           ;tmr2.c: 108: TMR2 = timerVal;
 10239  0D68  0872               	movf	TMR2_WriteTimer@timerVal,w
 10240  0D69  0020               	movlb	0	; select bank0
 10241  0D6A  009D               	movwf	29	;volatile
 10242  0D6B  0008               	return
 10243  0D6C                     __end_of_TMR2_WriteTimer:	
 10244                           
 10245                           	psect	text33
 10246  0D4A                     __ptext33:	
 10247 ;; *************** function _TMR2_StartTimer *****************
 10248 ;; Defined at:
 10249 ;;		line 78 in file "mcc_generated_files/tmr2.c"
 10250 ;; Parameters:    Size  Location     Type
 10251 ;;		None
 10252 ;; Auto vars:     Size  Location     Type
 10253 ;;		None
 10254 ;; Return value:  Size  Location     Type
 10255 ;;                  1    wreg      void 
 10256 ;; Registers used:
 10257 ;;		None
 10258 ;; Tracked objects:
 10259 ;;		On entry : 0/0
 10260 ;;		On exit  : 0/0
 10261 ;;		Unchanged: 0/0
 10262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10263 ;;      Params:         0       0       0       0       0       0       0       0
 10264 ;;      Locals:         0       0       0       0       0       0       0       0
 10265 ;;      Temps:          0       0       0       0       0       0       0       0
 10266 ;;      Totals:         0       0       0       0       0       0       0       0
 10267 ;;Total ram usage:        0 bytes
 10268 ;; Hardware stack levels used:    1
 10269 ;; Hardware stack levels required when called:    6
 10270 ;; This function calls:
 10271 ;;		Nothing
 10272 ;; This function is called by:
 10273 ;;		_TMR2_Initialize
 10274 ;;		_BuzzerStartConfig
 10275 ;; This function uses a non-reentrant model
 10276 ;;
 10277                           
 10278                           
 10279                           ;psect for function _TMR2_StartTimer
 10280  0D4A                     _TMR2_StartTimer:	
 10281                           
 10282                           ;tmr2.c: 81: T2CONbits.TMR2ON = 1;
 10283                           
 10284                           ;incstack = 0
 10285                           ; Regs used in _TMR2_StartTimer: []
 10286  0D4A  0020               	movlb	0	; select bank0
 10287  0D4B  151F               	bsf	31,2	;volatile
 10288  0D4C  0008               	return
 10289  0D4D                     __end_of_TMR2_StartTimer:	
 10290                           
 10291                           	psect	text34
 10292  0E27                     __ptext34:	
 10293 ;; *************** function _ADC_GetConversion *****************
 10294 ;; Defined at:
 10295 ;;		line 113 in file "mcc_generated_files/adc.c"
 10296 ;; Parameters:    Size  Location     Type
 10297 ;;  channel         1    wreg     enum E7466
 10298 ;; Auto vars:     Size  Location     Type
 10299 ;;  channel         1    5[COMMON] enum E7466
 10300 ;; Return value:  Size  Location     Type
 10301 ;;                  2    2[COMMON] unsigned int 
 10302 ;; Registers used:
 10303 ;;		wreg, status,2, status,0
 10304 ;; Tracked objects:
 10305 ;;		On entry : 0/0
 10306 ;;		On exit  : 0/0
 10307 ;;		Unchanged: 0/0
 10308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10309 ;;      Params:         2       0       0       0       0       0       0       0
 10310 ;;      Locals:         1       0       0       0       0       0       0       0
 10311 ;;      Temps:          1       0       0       0       0       0       0       0
 10312 ;;      Totals:         4       0       0       0       0       0       0       0
 10313 ;;Total ram usage:        4 bytes
 10314 ;; Hardware stack levels used:    1
 10315 ;; Hardware stack levels required when called:    6
 10316 ;; This function calls:
 10317 ;;		Nothing
 10318 ;; This function is called by:
 10319 ;;		_ProtocolManager
 10320 ;; This function uses a non-reentrant model
 10321 ;;
 10322                           
 10323                           
 10324                           ;psect for function _ADC_GetConversion
 10325  0E27                     _ADC_GetConversion:	
 10326                           
 10327                           ;incstack = 0
 10328                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
 10329                           ;ADC_GetConversion@channel stored from wreg
 10330  0E27  00F5               	movwf	ADC_GetConversion@channel
 10331                           
 10332                           ;adc.c: 116: ADCON0bits.CHS = channel;
 10333  0E28  0875               	movf	ADC_GetConversion@channel,w
 10334  0E29  00F4               	movwf	??_ADC_GetConversion
 10335  0E2A  0DF4               	rlf	??_ADC_GetConversion,f
 10336  0E2B  0DF4               	rlf	??_ADC_GetConversion,f
 10337  0E2C  0021               	movlb	1	; select bank1
 10338  0E2D  081D               	movf	29,w	;volatile
 10339  0E2E  0674               	xorwf	??_ADC_GetConversion,w
 10340  0E2F  3903               	andlw	-253
 10341  0E30  0674               	xorwf	??_ADC_GetConversion,w
 10342  0E31  009D               	movwf	29	;volatile
 10343                           
 10344                           ;adc.c: 119: ADCON0bits.ADON = 1;
 10345  0E32  141D               	bsf	29,0	;volatile
 10346                           
 10347                           ;adc.c: 122: _delay((unsigned long)((5)*(8000000/4000000.0)));
 10348  0E33  3003               	movlw	3
 10349  0E34  00F4               	movwf	??_ADC_GetConversion
 10350  0E35                     u2937:	
 10351  0E35  0BF4               	decfsz	??_ADC_GetConversion,f
 10352  0E36  2E35               	goto	u2937
 10353                           
 10354                           ;adc.c: 125: ADCON0bits.ADGO = 1;
 10355  0E37  0021               	movlb	1	; select bank1
 10356  0E38  149D               	bsf	29,1	;volatile
 10357  0E39                     l80:	
 10358                           ;adc.c: 129: {
 10359                           
 10360                           ;adc.c: 128: while (ADCON0bits.ADGO)
 10361                           
 10362  0E39  189D               	btfsc	29,1	;volatile
 10363  0E3A  2E39               	goto	l80
 10364                           
 10365                           ;adc.c: 130: }
 10366                           ;adc.c: 133: return ((ADRESH << 8) + ADRESL);
 10367  0E3B  081C               	movf	28,w	;volatile
 10368  0E3C  00F3               	movwf	?_ADC_GetConversion+1
 10369  0E3D  081B               	movf	27,w	;volatile
 10370  0E3E  00F2               	movwf	?_ADC_GetConversion
 10371  0E3F  0008               	return
 10372  0E40                     __end_of_ADC_GetConversion:	
 10373                           
 10374                           	psect	text35
 10375  0002                     __ptext35:	
 10376 ;; *************** function _LedONStatusBusy *****************
 10377 ;; Defined at:
 10378 ;;		line 9 in file "/home/kpit/MPLABXProjects/IECTOOLTest1/LED_Ctrl.c"
 10379 ;; Parameters:    Size  Location     Type
 10380 ;;		None
 10381 ;; Auto vars:     Size  Location     Type
 10382 ;;		None
 10383 ;; Return value:  Size  Location     Type
 10384 ;;                  1    wreg      unsigned char 
 10385 ;; Registers used:
 10386 ;;		wreg
 10387 ;; Tracked objects:
 10388 ;;		On entry : 0/0
 10389 ;;		On exit  : 0/0
 10390 ;;		Unchanged: 0/0
 10391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10392 ;;      Params:         0       0       0       0       0       0       0       0
 10393 ;;      Locals:         0       0       0       0       0       0       0       0
 10394 ;;      Temps:          0       0       0       0       0       0       0       0
 10395 ;;      Totals:         0       0       0       0       0       0       0       0
 10396 ;;Total ram usage:        0 bytes
 10397 ;; Hardware stack levels used:    1
 10398 ;; Hardware stack levels required when called:    6
 10399 ;; This function calls:
 10400 ;;		Nothing
 10401 ;; This function is called by:
 10402 ;;		_main
 10403 ;; This function uses a non-reentrant model
 10404 ;;
 10405                           
 10406                           
 10407                           ;psect for function _LedONStatusBusy
 10408  0002                     _LedONStatusBusy:	
 10409                           
 10410                           ;LED_Ctrl.c: 11: return Led_ON;
 10411                           
 10412                           ;incstack = 0
 10413                           ; Regs used in _LedONStatusBusy: [wreg]
 10414  0002  087A               	movf	_Led_ON,w
 10415  0003  0008               	return
 10416  0004                     __end_of_LedONStatusBusy:	
 10417                           
 10418                           	psect	intentry
 10419  0004                     __pintentry:	
 10420 ;; *************** function _INTERRUPT_InterruptManager *****************
 10421 ;; Defined at:
 10422 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 10423 ;; Parameters:    Size  Location     Type
 10424 ;;		None
 10425 ;; Auto vars:     Size  Location     Type
 10426 ;;		None
 10427 ;; Return value:  Size  Location     Type
 10428 ;;                  1    wreg      void 
 10429 ;; Registers used:
 10430 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10431 ;; Tracked objects:
 10432 ;;		On entry : 0/0
 10433 ;;		On exit  : 0/0
 10434 ;;		Unchanged: 0/0
 10435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10436 ;;      Params:         0       0       0       0       0       0       0       0
 10437 ;;      Locals:         0       0       0       0       0       0       0       0
 10438 ;;      Temps:          1       0       0       0       0       0       0       0
 10439 ;;      Totals:         1       0       0       0       0       0       0       0
 10440 ;;Total ram usage:        1 bytes
 10441 ;; Hardware stack levels used:    1
 10442 ;; Hardware stack levels required when called:    5
 10443 ;; This function calls:
 10444 ;;		_TMR0_ISR
 10445 ;; This function is called by:
 10446 ;;		Interrupt level 1
 10447 ;; This function uses a non-reentrant model
 10448 ;;
 10449                           
 10450  0004                     _INTERRUPT_InterruptManager:	
 10451                           
 10452                           ;incstack = 0
 10453                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10454  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 10455  0005  3180               	pagesel	$
 10456  0006  0020               	movlb	0	; select bank0
 10457  0007  087F               	movf	127,w
 10458  0008  00F1               	movwf	??_INTERRUPT_InterruptManager
 10459                           
 10460                           ;interrupt_manager.c: 55: if(PIE0bits.TMR0IE == 1 && PIR0bits.TMR0IF == 1)
 10461  0009  0021               	movlb	1	; select bank1
 10462  000A  1E90               	btfss	16,5	;volatile
 10463  000B  2811               	goto	i1l218
 10464  000C  0020               	movlb	0	; select bank0
 10465  000D  1E90               	btfss	16,5	;volatile
 10466  000E  2811               	goto	i1l218
 10467                           
 10468                           ;interrupt_manager.c: 56: {
 10469                           ;interrupt_manager.c: 57: TMR0_ISR();
 10470  000F  318D  2562         	fcall	_TMR0_ISR
 10471  0011                     i1l218:	
 10472                           ;interrupt_manager.c: 59: else
 10473                           ;interrupt_manager.c: 60: {
 10474                           
 10475                           ;interrupt_manager.c: 58: }
 10476                           
 10477  0011  0871               	movf	??_INTERRUPT_InterruptManager,w
 10478  0012  0020               	movlb	0	; select bank0
 10479  0013  00FF               	movwf	127
 10480  0014  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 10481  0015  0009               	retfie
 10482  0016                     __end_of_INTERRUPT_InterruptManager:	
 10483                           
 10484                           	psect	text37
 10485  0D62                     __ptext37:	
 10486 ;; *************** function _TMR0_ISR *****************
 10487 ;; Defined at:
 10488 ;;		line 121 in file "mcc_generated_files/tmr0.c"
 10489 ;; Parameters:    Size  Location     Type
 10490 ;;		None
 10491 ;; Auto vars:     Size  Location     Type
 10492 ;;		None
 10493 ;; Return value:  Size  Location     Type
 10494 ;;                  1    wreg      void 
 10495 ;; Registers used:
 10496 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10497 ;; Tracked objects:
 10498 ;;		On entry : 0/0
 10499 ;;		On exit  : 0/0
 10500 ;;		Unchanged: 0/0
 10501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10502 ;;      Params:         0       0       0       0       0       0       0       0
 10503 ;;      Locals:         0       0       0       0       0       0       0       0
 10504 ;;      Temps:          0       0       0       0       0       0       0       0
 10505 ;;      Totals:         0       0       0       0       0       0       0       0
 10506 ;;Total ram usage:        0 bytes
 10507 ;; Hardware stack levels used:    1
 10508 ;; Hardware stack levels required when called:    4
 10509 ;; This function calls:
 10510 ;;		_TMR0_CallBack
 10511 ;; This function is called by:
 10512 ;;		_INTERRUPT_InterruptManager
 10513 ;; This function uses a non-reentrant model
 10514 ;;
 10515                           
 10516                           
 10517                           ;psect for function _TMR0_ISR
 10518  0D62                     _TMR0_ISR:	
 10519                           
 10520                           ;tmr0.c: 124: PIR0bits.TMR0IF = 0;
 10521                           
 10522                           ;incstack = 0
 10523                           ; Regs used in _TMR0_ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10524  0D62  0020               	movlb	0	; select bank0
 10525  0D63  1290               	bcf	16,5	;volatile
 10526                           
 10527                           ;tmr0.c: 128: TMR0_CallBack();
 10528  0D64  318D  2547         	fcall	_TMR0_CallBack
 10529  0D66  0008               	return
 10530  0D67                     __end_of_TMR0_ISR:	
 10531                           
 10532                           	psect	text38
 10533  0D47                     __ptext38:	
 10534 ;; *************** function _TMR0_CallBack *****************
 10535 ;; Defined at:
 10536 ;;		line 133 in file "mcc_generated_files/tmr0.c"
 10537 ;; Parameters:    Size  Location     Type
 10538 ;;		None
 10539 ;; Auto vars:     Size  Location     Type
 10540 ;;		None
 10541 ;; Return value:  Size  Location     Type
 10542 ;;                  1    wreg      void 
 10543 ;; Registers used:
 10544 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10545 ;; Tracked objects:
 10546 ;;		On entry : 0/0
 10547 ;;		On exit  : 0/0
 10548 ;;		Unchanged: 0/0
 10549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10550 ;;      Params:         0       0       0       0       0       0       0       0
 10551 ;;      Locals:         0       0       0       0       0       0       0       0
 10552 ;;      Temps:          0       0       0       0       0       0       0       0
 10553 ;;      Totals:         0       0       0       0       0       0       0       0
 10554 ;;Total ram usage:        0 bytes
 10555 ;; Hardware stack levels used:    1
 10556 ;; Hardware stack levels required when called:    3
 10557 ;; This function calls:
 10558 ;;		_One_msec_task
 10559 ;; This function is called by:
 10560 ;;		_TMR0_ISR
 10561 ;; This function uses a non-reentrant model
 10562 ;;
 10563                           
 10564                           
 10565                           ;psect for function _TMR0_CallBack
 10566  0D47                     _TMR0_CallBack:	
 10567                           
 10568                           ;tmr0.c: 137: One_msec_task();
 10569                           
 10570                           ;incstack = 0
 10571                           ; Regs used in _TMR0_CallBack: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10572  0D47  318E  2690         	fcall	_One_msec_task
 10573  0D49  0008               	return
 10574  0D4A                     __end_of_TMR0_CallBack:	
 10575                           
 10576                           	psect	text39
 10577  0E90                     __ptext39:	
 10578 ;; *************** function _One_msec_task *****************
 10579 ;; Defined at:
 10580 ;;		line 137 in file "main.c"
 10581 ;; Parameters:    Size  Location     Type
 10582 ;;		None
 10583 ;; Auto vars:     Size  Location     Type
 10584 ;;		None
 10585 ;; Return value:  Size  Location     Type
 10586 ;;                  1    wreg      void 
 10587 ;; Registers used:
 10588 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10589 ;; Tracked objects:
 10590 ;;		On entry : 0/0
 10591 ;;		On exit  : 0/0
 10592 ;;		Unchanged: 0/0
 10593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10594 ;;      Params:         0       0       0       0       0       0       0       0
 10595 ;;      Locals:         0       0       0       0       0       0       0       0
 10596 ;;      Temps:          0       0       0       0       0       0       0       0
 10597 ;;      Totals:         0       0       0       0       0       0       0       0
 10598 ;;Total ram usage:        0 bytes
 10599 ;; Hardware stack levels used:    1
 10600 ;; Hardware stack levels required when called:    2
 10601 ;; This function calls:
 10602 ;;		_Buzzer_Control_msec
 10603 ;;		_LedON_Control_msec
 10604 ;;		_One_sec_task
 10605 ;; This function is called by:
 10606 ;;		_TMR0_CallBack
 10607 ;; This function uses a non-reentrant model
 10608 ;;
 10609                           
 10610                           
 10611                           ;psect for function _One_msec_task
 10612  0E90                     _One_msec_task:	
 10613                           
 10614                           ;main.c: 139: Buzzer_Control_msec();
 10615                           
 10616                           ;incstack = 0
 10617                           ; Regs used in _One_msec_task: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10618  0E90  318F  273D  318E   	fcall	_Buzzer_Control_msec
 10619                           
 10620                           ;main.c: 140: LedON_Control_msec();
 10621  0E93  318F  27B3  318E   	fcall	_LedON_Control_msec
 10622                           
 10623                           ;main.c: 141: DelayMsecCount++;
 10624  0E96  3001               	movlw	1
 10625  0E97  0020               	movlb	0	; select bank0
 10626  0E98  07AE               	addwf	_DelayMsecCount,f
 10627  0E99  3000               	movlw	0
 10628  0E9A  3DAF               	addwfc	_DelayMsecCount+1,f
 10629                           
 10630                           ;main.c: 142: Msec10_cnt++;
 10631  0E9B  3001               	movlw	1
 10632  0E9C  07B4               	addwf	_Msec10_cnt,f
 10633  0E9D  3000               	movlw	0
 10634  0E9E  3DB5               	addwfc	_Msec10_cnt+1,f
 10635                           
 10636                           ;main.c: 143: if(Msec_cnt++ == 1000)
 10637  0E9F  3001               	movlw	1
 10638  0EA0  07B6               	addwf	_Msec_cnt,f
 10639  0EA1  3000               	movlw	0
 10640  0EA2  3DB7               	addwfc	_Msec_cnt+1,f
 10641  0EA3  30E9               	movlw	233
 10642  0EA4  0636               	xorwf	_Msec_cnt,w
 10643  0EA5  3003               	movlw	3
 10644  0EA6  1903               	skipnz
 10645  0EA7  0637               	xorwf	_Msec_cnt+1,w
 10646  0EA8  1D03               	btfss	3,2
 10647  0EA9  0008               	return
 10648                           
 10649                           ;main.c: 144: {
 10650                           ;main.c: 145: Msec_cnt=0;
 10651  0EAA  01B6               	clrf	_Msec_cnt
 10652  0EAB  01B7               	clrf	_Msec_cnt+1
 10653                           
 10654                           ;main.c: 146: One_sec_task();
 10655  0EAC  318D  2544         	fcall	_One_sec_task
 10656  0EAE  0008               	return
 10657  0EAF                     __end_of_One_msec_task:	
 10658                           
 10659                           	psect	text40
 10660  0D44                     __ptext40:	
 10661 ;; *************** function _One_sec_task *****************
 10662 ;; Defined at:
 10663 ;;		line 152 in file "main.c"
 10664 ;; Parameters:    Size  Location     Type
 10665 ;;		None
 10666 ;; Auto vars:     Size  Location     Type
 10667 ;;		None
 10668 ;; Return value:  Size  Location     Type
 10669 ;;                  1    wreg      void 
 10670 ;; Registers used:
 10671 ;;		wreg, status,2, status,0, pclath, cstack
 10672 ;; Tracked objects:
 10673 ;;		On entry : 0/0
 10674 ;;		On exit  : 0/0
 10675 ;;		Unchanged: 0/0
 10676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10677 ;;      Params:         0       0       0       0       0       0       0       0
 10678 ;;      Locals:         0       0       0       0       0       0       0       0
 10679 ;;      Temps:          0       0       0       0       0       0       0       0
 10680 ;;      Totals:         0       0       0       0       0       0       0       0
 10681 ;;Total ram usage:        0 bytes
 10682 ;; Hardware stack levels used:    1
 10683 ;; Hardware stack levels required when called:    1
 10684 ;; This function calls:
 10685 ;;		_Fan_Control_Sec
 10686 ;; This function is called by:
 10687 ;;		_One_msec_task
 10688 ;; This function uses a non-reentrant model
 10689 ;;
 10690                           
 10691                           
 10692                           ;psect for function _One_sec_task
 10693  0D44                     _One_sec_task:	
 10694                           
 10695                           ;main.c: 154: Fan_Control_Sec();
 10696                           
 10697                           ;incstack = 0
 10698                           ; Regs used in _One_sec_task: [wreg+status,2+status,0+pclath+cstack]
 10699  0D44  318D  25EC         	fcall	_Fan_Control_Sec
 10700  0D46  0008               	return
 10701  0D47                     __end_of_One_sec_task:	
 10702                           
 10703                           	psect	text41
 10704  0DEC                     __ptext41:	
 10705 ;; *************** function _Fan_Control_Sec *****************
 10706 ;; Defined at:
 10707 ;;		line 30 in file "/home/kpit/MPLABXProjects/IECTOOLTest1/Fan_Ctrl.c"
 10708 ;; Parameters:    Size  Location     Type
 10709 ;;		None
 10710 ;; Auto vars:     Size  Location     Type
 10711 ;;		None
 10712 ;; Return value:  Size  Location     Type
 10713 ;;                  1    wreg      void 
 10714 ;; Registers used:
 10715 ;;		wreg, status,2, status,0
 10716 ;; Tracked objects:
 10717 ;;		On entry : 0/0
 10718 ;;		On exit  : 0/0
 10719 ;;		Unchanged: 0/0
 10720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10721 ;;      Params:         0       0       0       0       0       0       0       0
 10722 ;;      Locals:         0       0       0       0       0       0       0       0
 10723 ;;      Temps:          1       0       0       0       0       0       0       0
 10724 ;;      Totals:         1       0       0       0       0       0       0       0
 10725 ;;Total ram usage:        1 bytes
 10726 ;; Hardware stack levels used:    1
 10727 ;; This function calls:
 10728 ;;		Nothing
 10729 ;; This function is called by:
 10730 ;;		_One_sec_task
 10731 ;; This function uses a non-reentrant model
 10732 ;;
 10733                           
 10734                           
 10735                           ;psect for function _Fan_Control_Sec
 10736  0DEC                     _Fan_Control_Sec:	
 10737                           
 10738                           ;Fan_Ctrl.c: 32: if(1==Fan_ON)
 10739                           
 10740                           ;incstack = 0
 10741                           ; Regs used in _Fan_Control_Sec: [wreg+status,2+status,0]
 10742  0DEC  0020               	movlb	0	; select bank0
 10743  0DED  0341               	decf	_Fan_ON,w
 10744  0DEE  1D03               	btfss	3,2
 10745  0DEF  0008               	return
 10746                           
 10747                           ;Fan_Ctrl.c: 33: {
 10748                           ;Fan_Ctrl.c: 34: if(LED_Sec_Cnt++ == LedON_Duration_sec)
 10749  0DF0  3001               	movlw	1
 10750  0DF1  00F0               	movwf	??_Fan_Control_Sec
 10751  0DF2  0870               	movf	??_Fan_Control_Sec,w
 10752  0DF3  07C2               	addwf	_LED_Sec_Cnt,f
 10753  0DF4  0A43               	incf	_LedON_Duration_sec,w
 10754  0DF5  0642               	xorwf	_LED_Sec_Cnt,w
 10755  0DF6  1D03               	skipz
 10756  0DF7  0008               	return
 10757                           
 10758                           ;Fan_Ctrl.c: 35: {
 10759                           ;Fan_Ctrl.c: 36: do { LATC6 = 0; } while(0);
 10760  0DF8  0022               	movlb	2	; select bank2
 10761  0DF9  130E               	bcf	14,6	;volatile
 10762                           
 10763                           ;Fan_Ctrl.c: 37: Fan_ON=0;
 10764  0DFA  0020               	movlb	0	; select bank0
 10765  0DFB  01C1               	clrf	_Fan_ON
 10766                           
 10767                           ;Fan_Ctrl.c: 38: LED_Sec_Cnt=0;
 10768  0DFC  01C2               	clrf	_LED_Sec_Cnt
 10769  0DFD  0008               	return
 10770  0DFE                     __end_of_Fan_Control_Sec:	
 10771                           
 10772                           	psect	text42
 10773  0FB3                     __ptext42:	
 10774 ;; *************** function _LedON_Control_msec *****************
 10775 ;; Defined at:
 10776 ;;		line 51 in file "/home/kpit/MPLABXProjects/IECTOOLTest1/LED_Ctrl.c"
 10777 ;; Parameters:    Size  Location     Type
 10778 ;;		None
 10779 ;; Auto vars:     Size  Location     Type
 10780 ;;		None
 10781 ;; Return value:  Size  Location     Type
 10782 ;;                  1    wreg      void 
 10783 ;; Registers used:
 10784 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 10785 ;; Tracked objects:
 10786 ;;		On entry : 0/0
 10787 ;;		On exit  : 0/0
 10788 ;;		Unchanged: 0/0
 10789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10790 ;;      Params:         0       0       0       0       0       0       0       0
 10791 ;;      Locals:         0       0       0       0       0       0       0       0
 10792 ;;      Temps:          0       0       0       0       0       0       0       0
 10793 ;;      Totals:         0       0       0       0       0       0       0       0
 10794 ;;Total ram usage:        0 bytes
 10795 ;; Hardware stack levels used:    1
 10796 ;; This function calls:
 10797 ;;		Nothing
 10798 ;; This function is called by:
 10799 ;;		_One_msec_task
 10800 ;; This function uses a non-reentrant model
 10801 ;;
 10802                           
 10803                           
 10804                           ;psect for function _LedON_Control_msec
 10805  0FB3                     _LedON_Control_msec:	
 10806                           
 10807                           ;LED_Ctrl.c: 53: if(1==Led_ON)
 10808                           
 10809                           ;incstack = 0
 10810                           ; Regs used in _LedON_Control_msec: [wreg-fsr0h+status,2+status,0]
 10811  0FB3  037A               	decf	_Led_ON,w
 10812  0FB4  1D03               	btfss	3,2
 10813  0FB5  0008               	return
 10814                           
 10815                           ;LED_Ctrl.c: 54: {
 10816                           ;LED_Ctrl.c: 56: if(LED_msec_Cnt == Blick_tickPoint)
 10817  0FB6  0020               	movlb	0	; select bank0
 10818  0FB7  0827               	movf	_Blick_tickPoint+1,w
 10819  0FB8  0631               	xorwf	_LED_msec_Cnt+1,w
 10820  0FB9  1D03               	skipz
 10821  0FBA  2FBD               	goto	u119_25
 10822  0FBB  0826               	movf	_Blick_tickPoint,w
 10823  0FBC  0630               	xorwf	_LED_msec_Cnt,w
 10824  0FBD                     u119_25:	
 10825  0FBD  1903               	btfsc	3,2
 10826  0FBE  2FC8               	goto	i1l2642
 10827  0FBF  2FDA               	goto	i1l2646
 10828  0FC0                     i1l2634:	
 10829                           ;LED_Ctrl.c: 59: {
 10830                           ;LED_Ctrl.c: 60: case 0 : do { LATC0 = ~LATC0; } while(0);
 10831                           
 10832                           ;LED_Ctrl.c: 57: {
 10833                           ;LED_Ctrl.c: 58: switch(LED_Color)
 10834                           
 10835  0FC0  3001               	movlw	1
 10836  0FC1  2FC5               	goto	L36
 10837  0FC2                     i1l2636:	
 10838                           ;LED_Ctrl.c: 62: case 1 : do { LATC1 = ~LATC1; } while(0);
 10839                           
 10840                           ;LED_Ctrl.c: 61: break;
 10841                           
 10842  0FC2  3002               	movlw	2
 10843  0FC3  2FC5               	goto	L36
 10844  0FC4                     i1l2638:	
 10845                           ;LED_Ctrl.c: 64: case 2 : do { LATC2 = ~LATC2; } while(0);
 10846                           
 10847                           ;LED_Ctrl.c: 63: break;
 10848                           
 10849  0FC4  3004               	movlw	4
 10850  0FC5                     L36:	
 10851  0FC5  0022               	movlb	2	; select bank2
 10852  0FC6  068E               	xorwf	14,f
 10853                           
 10854                           ;LED_Ctrl.c: 67: }
 10855                           
 10856                           ;LED_Ctrl.c: 66: default : break;
 10857                           
 10858                           ;LED_Ctrl.c: 65: break;
 10859  0FC7  2FD3               	goto	i1l2644
 10860  0FC8                     i1l2642:	
 10861  0FC8  087B               	movf	_LED_Color,w
 10862                           
 10863                           ; Switch size 1, requested type "space"
 10864                           ; Number of cases is 3, Range of values is 0 to 2
 10865                           ; switch strategies available:
 10866                           ; Name         Instructions Cycles
 10867                           ; simple_byte           10     6 (average)
 10868                           ; direct_byte           12     6 (fixed)
 10869                           ; jumptable            260     6 (fixed)
 10870                           ;	Chosen strategy is simple_byte
 10871  0FC9  3A00               	xorlw	0	; case 0
 10872  0FCA  1903               	skipnz
 10873  0FCB  2FC0               	goto	i1l2634
 10874  0FCC  3A01               	xorlw	1	; case 1
 10875  0FCD  1903               	skipnz
 10876  0FCE  2FC2               	goto	i1l2636
 10877  0FCF  3A03               	xorlw	3	; case 2
 10878  0FD0  1903               	skipnz
 10879  0FD1  2FC4               	goto	i1l2638
 10880  0FD2  2FD3               	goto	i1l2644
 10881  0FD3                     i1l2644:	
 10882                           
 10883                           ;LED_Ctrl.c: 70: Blick_tickPoint=Blick_tickPoint+Blick_tickPointMsec;
 10884  0FD3  0020               	movlb	0	; select bank0
 10885  0FD4  0828               	movf	_Blick_tickPointMsec,w
 10886  0FD5  0726               	addwf	_Blick_tickPoint,w
 10887  0FD6  00A6               	movwf	_Blick_tickPoint
 10888  0FD7  0829               	movf	_Blick_tickPointMsec+1,w
 10889  0FD8  3D27               	addwfc	_Blick_tickPoint+1,w
 10890  0FD9  00A7               	movwf	_Blick_tickPoint+1
 10891  0FDA                     i1l2646:	
 10892                           
 10893                           ;LED_Ctrl.c: 72: }
 10894                           ;LED_Ctrl.c: 74: if(LED_msec_Cnt > LedON_Duration_msec)
 10895  0FDA  0831               	movf	_LED_msec_Cnt+1,w
 10896  0FDB  0233               	subwf	_LedON_Duration_msec+1,w
 10897  0FDC  1D03               	skipz
 10898  0FDD  2FE0               	goto	u120_25
 10899  0FDE  0830               	movf	_LED_msec_Cnt,w
 10900  0FDF  0232               	subwf	_LedON_Duration_msec,w
 10901  0FE0                     u120_25:	
 10902  0FE0  1C03               	btfss	3,0
 10903  0FE1  2FEC               	goto	i1l2652
 10904  0FE2  2FFB               	goto	i1l2656
 10905  0FE3                     i1l468:	
 10906                           ;LED_Ctrl.c: 77: {
 10907                           ;LED_Ctrl.c: 78: case 0 : do { LATC0 = 0; } while(0);
 10908                           
 10909                           ;LED_Ctrl.c: 75: {
 10910                           ;LED_Ctrl.c: 76: switch(LED_Color)
 10911                           
 10912  0FE3  0022               	movlb	2	; select bank2
 10913  0FE4  100E               	bcf	14,0	;volatile
 10914                           
 10915                           ;LED_Ctrl.c: 79: break;
 10916  0FE5  2FF7               	goto	i1l2654
 10917  0FE6                     i1l472:	
 10918                           ;LED_Ctrl.c: 80: case 1 : do { LATC1 = 0; } while(0);
 10919                           
 10920  0FE6  0022               	movlb	2	; select bank2
 10921  0FE7  108E               	bcf	14,1	;volatile
 10922                           
 10923                           ;LED_Ctrl.c: 81: break;
 10924  0FE8  2FF7               	goto	i1l2654
 10925  0FE9                     i1l475:	
 10926                           ;LED_Ctrl.c: 82: case 2 : do { LATC2 = 0; } while(0);
 10927                           
 10928  0FE9  0022               	movlb	2	; select bank2
 10929  0FEA  110E               	bcf	14,2	;volatile
 10930                           
 10931                           ;LED_Ctrl.c: 85: }
 10932                           
 10933                           ;LED_Ctrl.c: 84: default : break;
 10934                           
 10935                           ;LED_Ctrl.c: 83: break;
 10936  0FEB  2FF7               	goto	i1l2654
 10937  0FEC                     i1l2652:	
 10938  0FEC  087B               	movf	_LED_Color,w
 10939                           
 10940                           ; Switch size 1, requested type "space"
 10941                           ; Number of cases is 3, Range of values is 0 to 2
 10942                           ; switch strategies available:
 10943                           ; Name         Instructions Cycles
 10944                           ; simple_byte           10     6 (average)
 10945                           ; direct_byte           12     6 (fixed)
 10946                           ; jumptable            260     6 (fixed)
 10947                           ;	Chosen strategy is simple_byte
 10948  0FED  3A00               	xorlw	0	; case 0
 10949  0FEE  1903               	skipnz
 10950  0FEF  2FE3               	goto	i1l468
 10951  0FF0  3A01               	xorlw	1	; case 1
 10952  0FF1  1903               	skipnz
 10953  0FF2  2FE6               	goto	i1l472
 10954  0FF3  3A03               	xorlw	3	; case 2
 10955  0FF4  1903               	skipnz
 10956  0FF5  2FE9               	goto	i1l475
 10957  0FF6  2FF7               	goto	i1l2654
 10958  0FF7                     i1l2654:	
 10959                           
 10960                           ;LED_Ctrl.c: 87: Led_ON=0;
 10961  0FF7  01FA               	clrf	_Led_ON
 10962                           
 10963                           ;LED_Ctrl.c: 88: LED_msec_Cnt=0;
 10964  0FF8  0020               	movlb	0	; select bank0
 10965  0FF9  01B0               	clrf	_LED_msec_Cnt
 10966  0FFA  01B1               	clrf	_LED_msec_Cnt+1
 10967  0FFB                     i1l2656:	
 10968                           
 10969                           ;LED_Ctrl.c: 89: }
 10970                           ;LED_Ctrl.c: 91: LED_msec_Cnt++;
 10971  0FFB  3001               	movlw	1
 10972  0FFC  07B0               	addwf	_LED_msec_Cnt,f
 10973  0FFD  3000               	movlw	0
 10974  0FFE  3DB1               	addwfc	_LED_msec_Cnt+1,f
 10975  0FFF  0008               	return
 10976  1000                     __end_of_LedON_Control_msec:	
 10977                           
 10978                           	psect	text43
 10979  0F3D                     __ptext43:	
 10980 ;; *************** function _Buzzer_Control_msec *****************
 10981 ;; Defined at:
 10982 ;;		line 42 in file "/home/kpit/MPLABXProjects/IECTOOLTest1/Buzzer_Ctrl.c"
 10983 ;; Parameters:    Size  Location     Type
 10984 ;;		None
 10985 ;; Auto vars:     Size  Location     Type
 10986 ;;		None
 10987 ;; Return value:  Size  Location     Type
 10988 ;;                  1    wreg      void 
 10989 ;; Registers used:
 10990 ;;		wreg, status,2, status,0, pclath, cstack
 10991 ;; Tracked objects:
 10992 ;;		On entry : 0/0
 10993 ;;		On exit  : 0/0
 10994 ;;		Unchanged: 0/0
 10995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10996 ;;      Params:         0       0       0       0       0       0       0       0
 10997 ;;      Locals:         0       0       0       0       0       0       0       0
 10998 ;;      Temps:          0       0       0       0       0       0       0       0
 10999 ;;      Totals:         0       0       0       0       0       0       0       0
 11000 ;;Total ram usage:        0 bytes
 11001 ;; Hardware stack levels used:    1
 11002 ;; Hardware stack levels required when called:    1
 11003 ;; This function calls:
 11004 ;;		_TMR2_StopTimer
 11005 ;;		_TMR2_ToggleTimer
 11006 ;;		i1_TMR2_WriteTimer
 11007 ;; This function is called by:
 11008 ;;		_One_msec_task
 11009 ;; This function uses a non-reentrant model
 11010 ;;
 11011                           
 11012                           
 11013                           ;psect for function _Buzzer_Control_msec
 11014  0F3D                     _Buzzer_Control_msec:	
 11015                           
 11016                           ;Buzzer_Ctrl.c: 44: if(1==Buzzer_ON)
 11017                           
 11018                           ;incstack = 0
 11019                           ; Regs used in _Buzzer_Control_msec: [wreg+status,2+status,0+pclath+cstack]
 11020  0F3D  0020               	movlb	0	; select bank0
 11021  0F3E  033E               	decf	_Buzzer_ON,w
 11022  0F3F  1D03               	btfss	3,2
 11023  0F40  2F73               	goto	i1l2626
 11024                           
 11025                           ;Buzzer_Ctrl.c: 45: {
 11026                           ;Buzzer_Ctrl.c: 47: if(Buzzer_1msec_Cnt == Bbeep_tickPoint)
 11027  0F41  0823               	movf	_Bbeep_tickPoint+1,w
 11028  0F42  062B               	xorwf	_Buzzer_1msec_Cnt+1,w
 11029  0F43  1D03               	skipz
 11030  0F44  2F47               	goto	u116_25
 11031  0F45  0822               	movf	_Bbeep_tickPoint,w
 11032  0F46  062A               	xorwf	_Buzzer_1msec_Cnt,w
 11033  0F47                     u116_25:	
 11034  0F47  1D03               	skipz
 11035  0F48  2F5B               	goto	i1l2616
 11036                           
 11037                           ;Buzzer_Ctrl.c: 48: {
 11038                           ;Buzzer_Ctrl.c: 49: TMR2_WriteTimer(0);
 11039  0F49  3000               	movlw	0
 11040  0F4A  318D  255D  318F   	fcall	i1_TMR2_WriteTimer
 11041                           
 11042                           ;Buzzer_Ctrl.c: 50: TMR2_ToggleTimer();
 11043  0F4D  318D  25DC  318F   	fcall	_TMR2_ToggleTimer
 11044                           
 11045                           ;Buzzer_Ctrl.c: 53: Bbeep_tickPoint=Bbeep_tickPoint+Bbeep_tickPointMsec;
 11046  0F50  0020               	movlb	0	; select bank0
 11047  0F51  0824               	movf	_Bbeep_tickPointMsec,w
 11048  0F52  0722               	addwf	_Bbeep_tickPoint,w
 11049  0F53  00A2               	movwf	_Bbeep_tickPoint
 11050  0F54  0825               	movf	_Bbeep_tickPointMsec+1,w
 11051  0F55  3D23               	addwfc	_Bbeep_tickPoint+1,w
 11052  0F56  00A3               	movwf	_Bbeep_tickPoint+1
 11053                           
 11054                           ;Buzzer_Ctrl.c: 54: TMR2_WriteTimer(0);
 11055  0F57  3000               	movlw	0
 11056  0F58  318D  255D  318F   	fcall	i1_TMR2_WriteTimer
 11057  0F5B                     i1l2616:	
 11058                           
 11059                           ;Buzzer_Ctrl.c: 55: }
 11060                           ;Buzzer_Ctrl.c: 57: if(Buzzer_1msec_Cnt > Buzzer_Duration_1msec)
 11061  0F5B  0020               	movlb	0	; select bank0
 11062  0F5C  082B               	movf	_Buzzer_1msec_Cnt+1,w
 11063  0F5D  022D               	subwf	_Buzzer_Duration_1msec+1,w
 11064  0F5E  1D03               	skipz
 11065  0F5F  2F62               	goto	u117_25
 11066  0F60  082A               	movf	_Buzzer_1msec_Cnt,w
 11067  0F61  022C               	subwf	_Buzzer_Duration_1msec,w
 11068  0F62                     u117_25:	
 11069  0F62  1803               	skipnc
 11070  0F63  2F6E               	goto	i1l406
 11071                           
 11072                           ;Buzzer_Ctrl.c: 58: {
 11073                           ;Buzzer_Ctrl.c: 59: TMR2_WriteTimer(0);
 11074  0F64  3000               	movlw	0
 11075  0F65  318D  255D  318F   	fcall	i1_TMR2_WriteTimer
 11076                           
 11077                           ;Buzzer_Ctrl.c: 60: TMR2_StopTimer();
 11078  0F68  318D  2541         	fcall	_TMR2_StopTimer
 11079                           
 11080                           ;Buzzer_Ctrl.c: 62: Buzzer_ON=0;
 11081  0F6A  0020               	movlb	0	; select bank0
 11082  0F6B  01BE               	clrf	_Buzzer_ON
 11083                           
 11084                           ;Buzzer_Ctrl.c: 63: Buzzer_1msec_Cnt=0;
 11085  0F6C  01AA               	clrf	_Buzzer_1msec_Cnt
 11086  0F6D  01AB               	clrf	_Buzzer_1msec_Cnt+1
 11087  0F6E                     i1l406:	
 11088                           
 11089                           ;Buzzer_Ctrl.c: 64: }
 11090                           ;Buzzer_Ctrl.c: 66: Buzzer_1msec_Cnt++;
 11091  0F6E  3001               	movlw	1
 11092  0F6F  07AA               	addwf	_Buzzer_1msec_Cnt,f
 11093  0F70  3000               	movlw	0
 11094  0F71  3DAB               	addwfc	_Buzzer_1msec_Cnt+1,f
 11095                           
 11096                           ;Buzzer_Ctrl.c: 67: }
 11097  0F72  0008               	return
 11098  0F73                     i1l2626:	
 11099                           
 11100                           ;Buzzer_Ctrl.c: 68: else
 11101                           ;Buzzer_Ctrl.c: 69: {
 11102                           ;Buzzer_Ctrl.c: 70: TMR2_StopTimer();
 11103  0F73  318D  2541         	fcall	_TMR2_StopTimer
 11104  0F75  0008               	return
 11105  0F76                     __end_of_Buzzer_Control_msec:	
 11106                           
 11107                           	psect	text44
 11108  0D5D                     __ptext44:	
 11109 ;; *************** function i1_TMR2_WriteTimer *****************
 11110 ;; Defined at:
 11111 ;;		line 105 in file "mcc_generated_files/tmr2.c"
 11112 ;; Parameters:    Size  Location     Type
 11113 ;;  timerVal        1    wreg     unsigned char 
 11114 ;; Auto vars:     Size  Location     Type
 11115 ;;  timerVal        1    0[COMMON] unsigned char 
 11116 ;; Return value:  Size  Location     Type
 11117 ;;                  1    wreg      void 
 11118 ;; Registers used:
 11119 ;;		wreg
 11120 ;; Tracked objects:
 11121 ;;		On entry : 0/0
 11122 ;;		On exit  : 0/0
 11123 ;;		Unchanged: 0/0
 11124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11125 ;;      Params:         0       0       0       0       0       0       0       0
 11126 ;;      Locals:         1       0       0       0       0       0       0       0
 11127 ;;      Temps:          0       0       0       0       0       0       0       0
 11128 ;;      Totals:         1       0       0       0       0       0       0       0
 11129 ;;Total ram usage:        1 bytes
 11130 ;; Hardware stack levels used:    1
 11131 ;; This function calls:
 11132 ;;		Nothing
 11133 ;; This function is called by:
 11134 ;;		_Buzzer_Control_msec
 11135 ;; This function uses a non-reentrant model
 11136 ;;
 11137                           
 11138                           
 11139                           ;psect for function i1_TMR2_WriteTimer
 11140  0D5D                     i1_TMR2_WriteTimer:	
 11141                           
 11142                           ;incstack = 0
 11143                           ; Regs used in i1_TMR2_WriteTimer: [wreg]
 11144                           ;i1TMR2_WriteTimer@timerVal stored from wreg
 11145  0D5D  00F0               	movwf	i1TMR2_WriteTimer@timerVal
 11146                           
 11147                           ;tmr2.c: 108: TMR2 = timerVal;
 11148  0D5E  0870               	movf	i1TMR2_WriteTimer@timerVal,w
 11149  0D5F  0020               	movlb	0	; select bank0
 11150  0D60  009D               	movwf	29	;volatile
 11151  0D61  0008               	return
 11152  0D62                     __end_ofi1_TMR2_WriteTimer:	
 11153                           
 11154                           	psect	text45
 11155  0DDC                     __ptext45:	
 11156 ;; *************** function _TMR2_ToggleTimer *****************
 11157 ;; Defined at:
 11158 ;;		line 84 in file "mcc_generated_files/tmr2.c"
 11159 ;; Parameters:    Size  Location     Type
 11160 ;;		None
 11161 ;; Auto vars:     Size  Location     Type
 11162 ;;		None
 11163 ;; Return value:  Size  Location     Type
 11164 ;;                  1    wreg      void 
 11165 ;; Registers used:
 11166 ;;		wreg, status,2, status,0
 11167 ;; Tracked objects:
 11168 ;;		On entry : 0/0
 11169 ;;		On exit  : 0/0
 11170 ;;		Unchanged: 0/0
 11171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11172 ;;      Params:         0       0       0       0       0       0       0       0
 11173 ;;      Locals:         0       0       0       0       0       0       0       0
 11174 ;;      Temps:          1       0       0       0       0       0       0       0
 11175 ;;      Totals:         1       0       0       0       0       0       0       0
 11176 ;;Total ram usage:        1 bytes
 11177 ;; Hardware stack levels used:    1
 11178 ;; This function calls:
 11179 ;;		Nothing
 11180 ;; This function is called by:
 11181 ;;		_Buzzer_Control_msec
 11182 ;; This function uses a non-reentrant model
 11183 ;;
 11184                           
 11185                           
 11186                           ;psect for function _TMR2_ToggleTimer
 11187  0DDC                     _TMR2_ToggleTimer:	
 11188                           
 11189                           ;tmr2.c: 87: T2CONbits.TMR2ON ^= 1;
 11190                           
 11191                           ;incstack = 0
 11192                           ; Regs used in _TMR2_ToggleTimer: [wreg+status,2+status,0]
 11193  0DDC  0020               	movlb	0	; select bank0
 11194  0DDD  0C1F               	rrf	31,w	;volatile
 11195  0DDE  00F0               	movwf	??_TMR2_ToggleTimer
 11196  0DDF  0C70               	rrf	??_TMR2_ToggleTimer,w
 11197  0DE0  3901               	andlw	1
 11198  0DE1  00F0               	movwf	??_TMR2_ToggleTimer
 11199  0DE2  3001               	movlw	1
 11200  0DE3  06F0               	xorwf	??_TMR2_ToggleTimer,f
 11201  0DE4  0DF0               	rlf	??_TMR2_ToggleTimer,f
 11202  0DE5  0DF0               	rlf	??_TMR2_ToggleTimer,f
 11203  0DE6  081F               	movf	31,w	;volatile
 11204  0DE7  0670               	xorwf	??_TMR2_ToggleTimer,w
 11205  0DE8  39FB               	andlw	-5
 11206  0DE9  0670               	xorwf	??_TMR2_ToggleTimer,w
 11207  0DEA  009F               	movwf	31	;volatile
 11208  0DEB  0008               	return
 11209  0DEC                     __end_of_TMR2_ToggleTimer:	
 11210                           
 11211                           	psect	text46
 11212  0D41                     __ptext46:	
 11213 ;; *************** function _TMR2_StopTimer *****************
 11214 ;; Defined at:
 11215 ;;		line 90 in file "mcc_generated_files/tmr2.c"
 11216 ;; Parameters:    Size  Location     Type
 11217 ;;		None
 11218 ;; Auto vars:     Size  Location     Type
 11219 ;;		None
 11220 ;; Return value:  Size  Location     Type
 11221 ;;                  1    wreg      void 
 11222 ;; Registers used:
 11223 ;;		None
 11224 ;; Tracked objects:
 11225 ;;		On entry : 0/0
 11226 ;;		On exit  : 0/0
 11227 ;;		Unchanged: 0/0
 11228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11229 ;;      Params:         0       0       0       0       0       0       0       0
 11230 ;;      Locals:         0       0       0       0       0       0       0       0
 11231 ;;      Temps:          0       0       0       0       0       0       0       0
 11232 ;;      Totals:         0       0       0       0       0       0       0       0
 11233 ;;Total ram usage:        0 bytes
 11234 ;; Hardware stack levels used:    1
 11235 ;; This function calls:
 11236 ;;		Nothing
 11237 ;; This function is called by:
 11238 ;;		_Buzzer_Control_msec
 11239 ;; This function uses a non-reentrant model
 11240 ;;
 11241                           
 11242                           
 11243                           ;psect for function _TMR2_StopTimer
 11244  0D41                     _TMR2_StopTimer:	
 11245                           
 11246                           ;tmr2.c: 93: T2CONbits.TMR2ON = 0;
 11247                           
 11248                           ;incstack = 0
 11249                           ; Regs used in _TMR2_StopTimer: []
 11250  0D41  0020               	movlb	0	; select bank0
 11251  0D42  111F               	bcf	31,2	;volatile
 11252  0D43  0008               	return
 11253  0D44                     __end_of_TMR2_StopTimer:	
 11254  007E                     btemp	set	126	;btemp
 11255  007E                     int$flags	set	126
 11256  007E                     wtemp	set	126
 11257  007E                     wtemp0	set	126
 11258  0080                     wtemp1	set	128
 11259  0082                     wtemp2	set	130
 11260  0084                     wtemp3	set	132
 11261  0086                     wtemp4	set	134
 11262  0088                     wtemp5	set	136
 11263  007F                     wtemp6	set	127
 11264  007E                     ttemp	set	126
 11265  007E                     ttemp0	set	126
 11266  0081                     ttemp1	set	129
 11267  0084                     ttemp2	set	132
 11268  0087                     ttemp3	set	135
 11269  007F                     ttemp4	set	127
 11270  007E                     ltemp	set	126
 11271  007E                     ltemp0	set	126
 11272  0082                     ltemp1	set	130
 11273  0086                     ltemp2	set	134
 11274  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        4
    BSS         99
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     14      73
    BANK1            80      0      42
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    PackageTxResponseData@data	PTR unsigned char  size(1) Largest target is 16
		 -> DigitalIN(BANK0[1]), AnalogSenseRawByte(BANK0[2]), eepromReadData(BANK1[16]), 

    char1bytetovalue@cksum	PTR unsigned char  size(1) Largest target is 1
		 -> Checksum(BANK0[1]), 

    char2bytetovalue@cksum	PTR unsigned char  size(1) Largest target is 1
		 -> Checksum(BANK0[1]), ProtocolManager@k(BANK0[1]), 


Critical Paths under _main in COMMON

    _SYSTEM_Initialize->_PIN_MANAGER_Initialize
    _ProtocolManager->_PackageTxResponseACK
    _ProtocolManager->_PackageTxResponseNACK
    _ProtocolManager->_char2bytetovalue
    _char2bytetovalue->_chartovalue
    _char1bytetovalue->_chartovalue
    _PackageTxResponseData->_PackageTxResponseNACK
    _PackageTxResponseNACK->_valuetocharHighNibble
    _PackageTxResponseACK->_valuetocharHighNibble
    _valuetocharLowNibble->_valtoasciichar
    _valuetocharHighNibble->_valtoasciichar
    _LedONStartConfig->___lwdiv
    _BuzzerStartConfig->___lwdiv

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _One_sec_task->_Fan_Control_Sec
    _Buzzer_Control_msec->_TMR2_ToggleTimer
    _Buzzer_Control_msec->i1_TMR2_WriteTimer

Critical Paths under _main in BANK0

    _main->_ProtocolManager
    _ProtocolManager->_PackageTxResponseData
    _PackageTxResponseData->_PackageTxResponseNACK

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   13375
                                             12 BANK0      2     2      0
                  _BuzzerStartConfig
                     _FanStartConfig
                   _LedONStartConfig
                    _LedONStatusBusy
                    _ProtocolManager
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      15
                     _ADC_Initialize
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM5_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
                    _TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      15
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ProtocolManager                                      5     5      0   10012
                                              7 BANK0      5     5      0
                  _ADC_GetConversion
                  _BuzzerStartConfig
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
                        _EUSART_Read
                     _FanStartConfig
                   _LedONStartConfig
               _PackageTxResponseACK
              _PackageTxResponseData
              _PackageTxResponseNACK
                   _char1bytetovalue
                   _char2bytetovalue
 ---------------------------------------------------------------------------------
 (2) _char2bytetovalue                                     7     5      2    2181
                                              5 COMMON     5     3      2
                                              0 BANK0      2     2      0
                        _chartovalue
 ---------------------------------------------------------------------------------
 (2) _char1bytetovalue                                     4     3      1     425
                                              5 COMMON     4     3      1
                        _chartovalue
 ---------------------------------------------------------------------------------
 (3) _chartovalue                                          3     3      0     113
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _PackageTxResponseData                                6     4      2    2368
                                              1 BANK0      6     4      2
                  _EUSART_RX_Disable
                   _EUSART_RX_Enable
                _EUSART_TX_Completed
                       _EUSART_Write
              _PackageTxResponseNACK
              _valuetocharHighNibble
               _valuetocharLowNibble
 ---------------------------------------------------------------------------------
 (2) _PackageTxResponseNACK                                2     2      0     517
                                              9 COMMON     1     1      0
                                              0 BANK0      1     1      0
                  _EUSART_RX_Disable
                   _EUSART_RX_Enable
                _EUSART_TX_Completed
                       _EUSART_Write
              _valuetocharHighNibble
               _valuetocharLowNibble
 ---------------------------------------------------------------------------------
 (2) _PackageTxResponseACK                                 2     2      0     517
                                              9 COMMON     1     1      0
                                              0 BANK0      1     1      0
                  _EUSART_RX_Disable
                   _EUSART_RX_Enable
                _EUSART_TX_Completed
                       _EUSART_Write
              _valuetocharHighNibble
               _valuetocharLowNibble
 ---------------------------------------------------------------------------------
 (3) _valuetocharLowNibble                                 3     3      0     212
                                              5 COMMON     3     3      0
                     _valtoasciichar
 ---------------------------------------------------------------------------------
 (3) _valuetocharHighNibble                                4     4      0     212
                                              5 COMMON     4     4      0
                     _valtoasciichar
 ---------------------------------------------------------------------------------
 (4) _valtoasciichar                                       3     3      0     113
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write                                         1     1      0      31
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _EUSART_TX_Completed                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART_RX_Enable                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART_RX_Disable                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LedONStartConfig                                     5     3      2    1795
                                              0 BANK0      5     3      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _FanStartConfig                                       2     2      0      66
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Read                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DATAEE_WriteByte                                     4     1      3     217
                                              2 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (2) _DATAEE_ReadByte                                      2     0      2     108
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _BuzzerStartConfig                                    4     3      1    1487
                                              0 BANK0      4     3      1
                    _TMR2_StartTimer
                    _TMR2_WriteTimer
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     444
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     549
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (3) _TMR2_WriteTimer                                      1     1      0      31
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_GetConversion                                    4     2      2      22
                                              2 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _LedONStatusBusy                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                           1     1      0      22
                                              1 COMMON     1     1      0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (7) _TMR0_ISR                                             0     0      0      22
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (8) _TMR0_CallBack                                        0     0      0      22
                      _One_msec_task
 ---------------------------------------------------------------------------------
 (9) _One_msec_task                                        0     0      0      22
                _Buzzer_Control_msec
                 _LedON_Control_msec
                       _One_sec_task
 ---------------------------------------------------------------------------------
 (10) _One_sec_task                                        0     0      0       0
                    _Fan_Control_Sec
 ---------------------------------------------------------------------------------
 (11) _Fan_Control_Sec                                     1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _LedON_Control_msec                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _Buzzer_Control_msec                                 0     0      0      22
                     _TMR2_StopTimer
                   _TMR2_ToggleTimer
                  i1_TMR2_WriteTimer
 ---------------------------------------------------------------------------------
 (11) i1_TMR2_WriteTimer                                   1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (11) _TMR2_ToggleTimer                                    1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (11) _TMR2_StopTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BuzzerStartConfig
     _TMR2_StartTimer
     _TMR2_WriteTimer
     ___lwdiv
     ___wmul
   _FanStartConfig
   _LedONStartConfig
     ___lwdiv
     ___wmul
   _LedONStatusBusy
   _ProtocolManager
     _ADC_GetConversion
     _BuzzerStartConfig
       _TMR2_StartTimer
       _TMR2_WriteTimer
       ___lwdiv
       ___wmul
     _DATAEE_ReadByte
     _DATAEE_WriteByte
     _EUSART_Read
     _FanStartConfig
     _LedONStartConfig
       ___lwdiv
       ___wmul
     _PackageTxResponseACK
       _EUSART_RX_Disable
       _EUSART_RX_Enable
       _EUSART_TX_Completed
       _EUSART_Write
       _valuetocharHighNibble
         _valtoasciichar
       _valuetocharLowNibble
         _valtoasciichar
     _PackageTxResponseData
       _EUSART_RX_Disable
       _EUSART_RX_Enable
       _EUSART_TX_Completed
       _EUSART_Write
       _PackageTxResponseNACK
         _EUSART_RX_Disable
         _EUSART_RX_Enable
         _EUSART_TX_Completed
         _EUSART_Write
         _valuetocharHighNibble
           _valtoasciichar
         _valuetocharLowNibble
           _valtoasciichar
       _valuetocharHighNibble
         _valtoasciichar
       _valuetocharLowNibble
         _valtoasciichar
     _PackageTxResponseNACK
       _EUSART_RX_Disable
       _EUSART_RX_Enable
       _EUSART_TX_Completed
       _EUSART_Write
       _valuetocharHighNibble
         _valtoasciichar
       _valuetocharLowNibble
         _valtoasciichar
     _char1bytetovalue
       _chartovalue
     _char2bytetovalue
       _chartovalue
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM5_Initialize
     _TMR0_Initialize
       _TMR0_StartTimer
     _TMR2_Initialize
       _TMR2_StartTimer

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     _TMR0_CallBack
       _One_msec_task
         _Buzzer_Control_msec
           _TMR2_StopTimer
           _TMR2_ToggleTimer
           i1_TMR2_WriteTimer
         _LedON_Control_msec
         _One_sec_task
           _Fan_Control_Sec

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      7F       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      E      49       6       91.2%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      2A       8       52.5%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      7F      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Sun Sep 18 15:24:36 2016

              char2bytetovalue@cksum 0076                                    _i 0050  
                                  pc 0002                          __CFG_CP$OFF 0000  
                                 l80 0E39                  ___wmul@multiplicand 0074  
          __size_of_TMR2_ToggleTimer 0010                          __CFG_LVP$ON 0000  
                                l308 0D59                                  l442 06F2  
                                l259 0E87                                  l435 06EC  
                                l439 06EF                                  l296 0D73  
                                l289 0D8C                                  l715 0742  
                                l674 0418                                  l763 0550  
                                l862 0E61                                  _GIE 005F  
                                u250 0FB1                                  _PR2 001E  
                       __CFG_CPD$OFF 0000        LedONStartConfig@LedONNumBlink 0059  
                    _TMR2_Initialize 0DA0            __size_of_LedONStartConfig 0064  
                                wreg 0009                           _RXChecksum 0044  
                               S4474 0820                                 S4476 0800  
                       ?_EUSART_Read 0070             char2bytetovalue@valuehex 0058  
                               l4200 0209                                 l4120 010C  
                               l4122 011A                                 l4044 003F  
                               l4302 035A                                 l4222 025D  
                               l4126 0121                                 l4054 0054  
                               l3600 0F14                                 l4312 038E  
                               l4304 037C                                 l4240 02A6  
                               l4160 0189                                 l4080 008B  
                               l4400 0473                                 l3610 0F1E  
                               l3602 0F16                                 l4322 03AC  
                               l4306 0381                                 l4074 007F  
                               l3620 0F28                                 l3612 0F20  
                               l3604 0F18                                 l4252 02D1  
                               l4164 0190                                 l4420 06AD  
                               l3622 0F2A                                 l3614 0F22  
                               l3606 0F1A                                 l3630 0F3B  
                               l4350 03FB                                 l4254 02D4  
                               l4174 0191                                 l4158 017B  
                               l4078 0089                                 l4414 068D  
                               l3624 0F2C                                 l3616 0F24  
                               l3608 0F1C                                 l4344 03E6  
                               l4176 01C1                                 l4088 00B2  
                               l4432 06D5                                 l3618 0F26  
                               l3730 0749                                 l4370 042B  
                               l4362 0416                                 l4290 0347  
                               l4274 0319                                 l4426 06C9  
                               l3628 0F31                                 l3740 0753  
                               l3732 074B                                 l3724 0740  
                               l4364 041B                                 l4292 0354  
                               l4276 031D                                 l4188 01E5  
                               l3830 07DE                                 l3910 04AA  
                               l3750 075D                                 l3742 0755  
                               l3734 074D                                 l3726 0745  
                               l4390 0468                                 l4358 0410  
                               l3912 04AD                                 l3752 075F  
                               l3744 0757                                 l3736 074F  
                               l3728 0747                                 l4384 0456  
                               l4368 0420                                 l4376 0440  
                               l4288 0326                                 l4392 046C  
                               l2890 0D94                                 l3594 0F0E  
                               l3746 0759                                 l3738 0751  
                               l3764 0E5B                                 l3836 07E8  
                               l3852 06F5                                 l3596 0F10  
                               l3916 04B4                                 l3748 075B  
                               l3756 0764                                 l4396 0470  
                               l3862 0731                                 l3854 0700  
                               l3598 0F12                                 l3942 04F1  
                               l3758 0796                                 l2976 0E57  
                               l3794 0EFA                                 l3786 0EDC  
                               l3954 0517                                 l3938 04EB  
                               l3788 0EE8                                 l3868 073B  
                               l3892 0487                                 l3798 0F03  
                               l3966 0519                                 _LATA 010C  
                               _LATB 010D                                 u2215 0EE9  
                               u2135 0E02                                 _LATC 010E  
                               u2225 0EF3                                 u2235 0EFB  
                               u2155 0E62                                 u2165 0E67  
                               u2335 0EC3                                 u2195 0EDF  
                               u2937 0E35                                 _TMR2 001D  
                               _WPUA 020C                                 _WPUB 020D  
                               _WPUC 020E                         __CFG_WRT$OFF 0000  
                      __CFG_FCMEN$ON 0000                                 _main 0672  
                    _TMR0_StartTimer 0D53                                 fsr0h 0005  
                               fsr1h 0007                                 fsr0l 0004  
                               indf0 0000                                 indf1 0001  
                               fsr1l 0006                                 btemp 007E  
                      __CFG_BOREN$ON 0000                                 ltemp 007E  
                      __CFG_BORV$LOW 0000                chartovalue@charNibble 0073  
                               start 0016                                 ttemp 007E  
                               wtemp 007E                      _PWM5_Initialize 0D96  
                      __CFG_CSWEN$ON 0000                        __CFG_MCLRE$ON 0000  
         __end_of_LedON_Control_msec 1000            __size_of_DATAEE_WriteByte 001C  
            __end_of_TMR0_Initialize 0DCE                        ?_EUSART_Write 0070  
     __size_of_OSCILLATOR_Initialize 0009        __end_of_OSCILLATOR_Initialize 0D8C  
                   ??_valtoasciichar 0072                                _ADACT 009F  
                              ?_main 0070                        __CFG_WDTE$OFF 0000  
           __end_of_char1bytetovalue 0E27                                _T2CON 001F  
                              _LATC0 0870                                _LATC1 0871  
                              _LATC2 0872                                _LATB6 086E  
                              _LATC6 0876                       __CFG_DEBUG$OFF 0000  
                    __end_of___lwdiv 0F08                                i1l218 0011  
                              i1l406 0F6E                                i1l472 0FE6  
                              i1l475 0FE9                                i1l468 0FE3  
                              _OSCEN 091D                                _TMR0H 0016  
                              _TMR0L 0015                                _TRISA 008C  
                              _TRISB 008D                                _TRISC 008E  
             ??_PackageTxResponseACK 0079                     __end_of_TMR0_ISR 0D67  
                    _DATAEE_ReadByte 0DB5                                ltemp0 007E  
                              ltemp1 0082         __end_of_valuetocharLowNibble 0DDC  
                              ltemp2 0086                                ltemp3 0080  
                              ttemp0 007E                                ttemp1 0081  
                              ttemp2 0084                                ttemp3 0087  
                              ttemp4 007F                                status 0003  
                              wtemp0 007E                                wtemp1 0080  
                              wtemp2 0082                                wtemp3 0084  
                              wtemp4 0086                                wtemp5 0088  
                              wtemp6 007F                      _TMR2_StartTimer 0D4A  
           __end_of_char2bytetovalue 0ED4                      _LedONStatusBusy 0002  
                         _Msec10_cnt 0034                     ??_FanStartConfig 0072  
                    __initialization 0018                         __end_of_main 06D9  
               __size_of_chartovalue 005B                       ??_EUSART_Write 0072  
            __end_of_TMR2_Initialize 0DAA          ?_INTERRUPT_InterruptManager 0070  
     __size_of_valuetocharHighNibble 0014        __end_of_valuetocharHighNibble 0E12  
                             ??_main 0064                      _TMR2_WriteTimer 0D67  
       __size_of_Buzzer_Control_msec 0039              __end_of_TMR0_StartTimer 0D56  
                             _ADCON0 009D                               _ADCON1 009E  
                             _ADRESH 009C                               _ADRESL 009B  
      valuetocharHighNibble@hexvalue 0077                               _ANSELA 018C  
                             _ANSELB 018D                               _ANSELC 018E  
                             _T0CON0 0017                               _T0CON1 0018  
                             _RC1REG 0199                               _RC1STA 019D  
                             u120_25 0FE0                               i1l2616 0F5B  
                             i1l2626 0F73                               i1l2634 0FC0  
                             i1l2642 0FC8                               i1l2652 0FEC  
                             i1l2636 0FC2                               i1l2644 0FD3  
            __end_of_PWM5_Initialize 0DA0                               i1l2654 0FF7  
                             i1l2638 0FC4                               i1l2646 0FDA  
                             i1l2656 0FFB                               u116_25 0F47  
                             u117_25 0F62                               u119_25 0FBD  
                             _OSCFRQ 091F                               _TX1REG 019A  
                             _TX1STA 019E                               _Fan_ON 0041  
                  ?_EUSART_RX_Enable 0070              ??_PackageTxResponseNACK 0079  
                             _Led_ON 007A              ??_PackageTxResponseData 005B  
                     __CFG_PWRTE$OFF 0000                   ??_EUSART_RX_Enable 0072  
                             ___wmul 0E59                       __CFG_STVREN$ON 0000  
                          ??___lwdiv 0076                               _byteIN 00B0  
                   ?_TMR0_Initialize 0070                        ?_One_sec_task 0070  
                   _TMR2_ToggleTimer 0DDC             __size_of_ProtocolManager 0442  
                  _ChannelNumberChar 0066              __end_of_DATAEE_ReadByte 0DC1  
                       __pdataCOMMON 007B                     _LedONStartConfig 06D9  
                  _BuzzerStartConfig 0798             ADC_GetConversion@channel 0075  
                    _Fan_Control_Sec 0DEC                __end_of_TMR0_CallBack 0D4A  
            __end_of_TMR2_StartTimer 0D4D              __end_of_LedONStatusBusy 0004  
                 ?_BuzzerStartConfig 0058                 __size_of_EUSART_Read 000A  
                  _SYSTEM_Initialize 07EA              __end_of__initialization 0038  
                 ?_SYSTEM_Initialize 0070                  ??_BuzzerStartConfig 0059  
                  chartovalue@hexval 0074                       __pcstackCOMMON 0070  
             __size_of_One_msec_task 001F                         __pidataBANK0 0D56  
                ??_SYSTEM_Initialize 0073                            ?_TMR0_ISR 0070  
            __end_of_TMR2_WriteTimer 0D6C                     _DATAEE_WriteByte 0E74  
                     ??_One_sec_task 0071                     ?_TMR2_Initialize 0070  
               _valuetocharLowNibble 0DCE                          _SetLEDcolor 0068  
          __end_of_BuzzerStartConfig 07EA                     ?_TMR0_StartTimer 0070  
          __end_of_SYSTEM_Initialize 07FF                           __pbssBANK0 0020  
                         __pbssBANK1 00A0                 __end_of_EUSART_Write 0D7A  
                   ?_PWM5_Initialize 0070                           __pmaintext 0672  
       __size_of_EUSART_TX_Completed 0004                              ?___wmul 0072  
                         ??_TMR0_ISR 0071                      __CFG_PPS1WAY$ON 0000  
                         __pintentry 0004                ?_valuetocharLowNibble 0070  
                __CFG_RSTOSC$HFINT32 0000              __end_of_Fan_Control_Sec 0DFE  
            __size_of_ADC_Initialize 0009       FanStartConfig@FanONDurationSec 0073  
                   ?_DATAEE_ReadByte 0072                    ?_char1bytetovalue 0075  
                            _SP1BRGH 019C                              _SP1BRGL 019B  
                            _OSCCON1 0919                              _OSCCON3 091B  
                 ??_char1bytetovalue 0076                    ??_ProtocolManager 005F  
                            _NVMADRH 0892                              _NVMADRL 0891  
                            _NVMDATH 0894                              _OSCTUNE 091E  
                            _NVMDATL 0893                              _NVMCON2 0896  
                            _PWM5DCH 0618                              _PWM5DCL 0617  
                 _LedON_Control_msec 0FB3                              _PWM5CON 0619  
                      _One_msec_task 0E90                              _PPSLOCK 0E0F  
                        _RxFrameType 0067              __size_of_TMR2_StopTimer 0003  
                  _EUSART_RX_Disable 0D4D                     ?_TMR2_StartTimer 0070  
                   ?_LedONStatusBusy 0070                   ?_EUSART_RX_Disable 0070  
               DATAEE_WriteByte@bAdd 0072                  ?_LedON_Control_msec 0070  
                _Blick_tickPointMsec 0028                         _CommandError 0040  
                      _ChannelNumber 003F                    ?_char2bytetovalue 0075  
                _Buzzer_Control_msec 0F3D                  ??_EUSART_RX_Disable 0072  
                 ??_char2bytetovalue 0077                      __size_of___wmul 001B  
                            ___lwdiv 0ED4                     ?_TMR2_WriteTimer 0070  
               ??_LedON_Control_msec 0070                              __ptext1 07EA  
                            __ptext2 0DA0                              __ptext3 0DC1  
                            __ptext4 0D53                              __ptext5 0D96  
                            __ptext6 0F76                              __ptext7 0D83  
                            __ptext8 0DAA                              __ptext9 0D7A  
                       _highByteChar 004F                 ?_Buzzer_Control_msec 0070  
              _OSCILLATOR_Initialize 0D83                            _T2CONbits 001F  
         __size_of_BuzzerStartConfig 0052            __end_of_EUSART_RX_Disable 0D50  
           ??_PIN_MANAGER_Initialize 0072                       ?_One_msec_task 0070  
      __size_of_PackageTxResponseACK 007A           __size_of_SYSTEM_Initialize 0015  
                          _LED_Color 007B                              clrloop0 0D6D  
               end_of_initialization 0038                 __end_of_One_sec_task 0D47  
           __end_of_TMR2_ToggleTimer 0DEC                    _EUSART_Initialize 0DAA  
                 _LedON_Duration_sec 0043                        ??_chartovalue 0072  
           __end_of_LedONStartConfig 073D       __size_of_PackageTxResponseNACK 007A  
      __end_of_PackageTxResponseNACK 05F8       __size_of_PackageTxResponseData 0100  
                 ?_EUSART_Initialize 0070        __end_of_PackageTxResponseData 057E  
                  _RxFrameDataLenCnt 0046               ??_valuetocharLowNibble 0075  
   LedONStartConfig@LedONDurationSec 0058                  ??_EUSART_Initialize 0072  
          __size_of_EUSART_RX_Enable 0003                     ?_Fan_Control_Sec 0070  
              ??_Buzzer_Control_msec 0071                      _Bbeep_tickPoint 0022  
              _valuetocharHighNibble 0DFE                __size_of_EUSART_Write 0008  
            __size_of_valtoasciichar 0035                     __CFG_FEXTOSC$OFF 0000  
           __end_of_DATAEE_WriteByte 0E90              TMR2_WriteTimer@timerVal 0072  
                          _RXPPSbits 0E24            __end_of_EUSART_Initialize 0DB5  
             PackageTxResponseData@i 005D                            _DigitalIN 0057  
          i1TMR2_WriteTimer@timerVal 0070                  __end_of_chartovalue 0798  
                     __end_of___wmul 0E74                        __pidataCOMMON 07FF  
                       _EUSART_Write 0D72                    __size_of_TMR0_ISR 0005  
                     _ADC_Initialize 0D7A               ?_OSCILLATOR_Initialize 0070  
            __size_of_FanStartConfig 0019                      ??_One_msec_task 0071  
                start_initialization 0018           __size_of_EUSART_RX_Disable 0003  
           __size_of_TMR0_Initialize 000D      __size_of_PIN_MANAGER_Initialize 003D  
                    _eepromWriteAddr 003C                      _eepromWriteData 00A0  
                     _TMR2_StopTimer 0D41                        ??_EUSART_Read 0072  
                _EUSART_TX_Completed 0D59                            _Buzzer_ON 003E  
                DATAEE_ReadByte@bAdd 0072                     _SetLedONNumBlink 004C  
                   __CFG_LPBOREN$OFF 0000          valuetocharHighNibble@hexval 0078  
               ?_EUSART_TX_Completed 0070            char2bytetovalue@highBchar 0059  
                           ??___wmul 0076                     ProtocolManager@k 0063  
                       _LED_msec_Cnt 0030               __size_of_TMR0_CallBack 0003  
             __end_of_ADC_Initialize 0D83                          __pdataBANK0 0066  
                    _ProtocolManager 003C             char1bytetovalue@LowBChar 0078  
             ?_valuetocharHighNibble 0070               __end_of_TMR2_StopTimer 0D44  
                        __pbssCOMMON 007A                            ___latbits 0001  
     PackageTxResponseData@frameType 005E                        __pcstackBANK0 0058  
              __size_of_One_sec_task 0003             __size_of_TMR2_Initialize 000A  
         __size_of_EUSART_Initialize 000B                       _txPacketlength 0052  
                __end_of_EUSART_Read 0D96            __size_of_char1bytetovalue 0015  
           __size_of_TMR0_StartTimer 0003                  _SetLedONDurationSec 004B  
                        _chartovalue 073D                     ___lwdiv@dividend 0074  
             _PIN_MANAGER_Initialize 0F76                ??_EUSART_TX_Completed 0072  
           __size_of_PWM5_Initialize 000A                             ?___lwdiv 0072  
                    ?_ADC_Initialize 0070                         _One_sec_task 0D44  
       ??_INTERRUPT_InterruptManager 0071                            __pswtext1 0820  
                          __pswtext2 0800                     _EUSART_RX_Enable 0D50  
          __size_of_char2bytetovalue 0025                             _BAUD1CON 019F  
                    ?_TMR2_StopTimer 0070                     ___lwdiv@quotient 0078  
                     _valtoasciichar 0F08             char1bytetovalue@valuehex 0077  
                      _TMR0_CallBack 0D47             __size_of_DATAEE_ReadByte 000C  
                  ??_TMR0_Initialize 0072                    ?_TMR2_ToggleTimer 0070  
                     ___wmul@product 0076                            clear_ram0 0D6C  
                           _PIE0bits 0090              valtoasciichar@hexvalue1 0073  
           __size_of_TMR2_StartTimer 0003                   ??_TMR2_ToggleTimer 0070  
            __end_of_ProtocolManager 047E             __size_of_LedONStatusBusy 0002  
__size_of_INTERRUPT_InterruptManager 0012                             _PIR0bits 0010  
                           _PIR1bits 0011         __end_of_PackageTxResponseACK 0672  
                  ?_LedONStartConfig 0058                             _TMR0_ISR 0D62  
                 ??_LedONStartConfig 005A                       _eepromReadAddr 003A  
                     _eepromReadData 00BA                    i1_TMR2_WriteTimer 0D5D  
        __size_of_LedON_Control_msec 004D                           _ADCON0bits 009D  
                  ___wmul@multiplier 0072                       _FanStartConfig 0E40  
                 ?i1_TMR2_WriteTimer 0070                             _Checksum 0056  
           __size_of_TMR2_WriteTimer 0005               __end_of_valtoasciichar 0F3D  
          PackageTxResponseData@data 0059                  _SetFANOnDurationSec 004A  
                        _LED_Sec_Cnt 0042                DATAEE_WriteByte@bData 0074  
                     ?_TMR0_CallBack 0070                          _EUSART_Read 0D8C  
                ??i1_TMR2_WriteTimer 0070                    ?_DATAEE_WriteByte 0072  
                     _eepromWriteLen 004E                    ??_TMR2_Initialize 0072  
     PackageTxResponseNACK@frameType 0058                   ??_DATAEE_WriteByte 0075  
                           _Msec_cnt 0036        PackageTxResponseACK@frameType 0058  
                  _ADC_GetConversion 0E27           valuetocharLowNibble@hexval 0077  
        __end_of_Buzzer_Control_msec 0F76                _PackageTxResponseNACK 057E  
          __end_ofi1_TMR2_WriteTimer 0D62              ??_OSCILLATOR_Initialize 0072  
       valuetocharLowNibble@hexvalue 0076                   ?_ADC_GetConversion 0072  
                  ??_TMR0_StartTimer 0072                _PackageTxResponseData 047E  
                     _SetBuzzNumBeep 0049               __end_of_FanStartConfig 0E59  
                   __size_of___lwdiv 0034        __size_of_valuetocharLowNibble 000E  
                  ??_PWM5_Initialize 0072                  _Bbeep_tickPointMsec 0024  
                ??_ADC_GetConversion 0074                           _T0CON0bits 0017  
                 _AnalogSenseRawByte 0054                      ?_valtoasciichar 0070  
                    ___lwdiv@divisor 0072                char1bytetovalue@cksum 0075  
                    ___lwdiv@counter 0077                             __ptext10 003C  
                           __ptext11 0EAF                             __ptext20 0D72  
                           __ptext12 0E12                             __ptext21 0D59  
                           __ptext13 073D                             __ptext30 0E59  
                           __ptext22 0D50                             __ptext14 047E  
                           __ptext31 0ED4                             __ptext23 0D4D  
                           __ptext15 057E                             __ptext40 0D44  
                           __ptext32 0D67                             __ptext24 06D9  
                           __ptext16 05F8                             __ptext41 0DEC  
                           __ptext33 0D4A                             __ptext25 0E40  
                           __ptext17 0DCE                             __ptext42 0FB3  
                           __ptext34 0E27                             __ptext26 0D8C  
                           __ptext18 0DFE                             __ptext43 0F3D  
                           __ptext35 0002                             __ptext27 0E74  
                           __ptext19 0F08                             __ptext44 0D5D  
                           __ptext28 0DB5                             __ptext45 0DDC  
                           __ptext37 0D62                             __ptext29 0798  
                           __ptext46 0D41                             __ptext38 0D47  
                           __ptext39 0E90                 valtoasciichar@hexval 0074  
           __size_of_Fan_Control_Sec 0012                          _txRS485flag 0053  
        DATAEE_WriteByte@GIEBitValue 0075                        __size_of_main 0067  
                   _char1bytetovalue 0E12     BuzzerStartConfig@BuzzDurationSec 005B  
                  ??_DATAEE_ReadByte 0074            __end_of_ADC_GetConversion 0E40  
                   ?_ProtocolManager 0070                       _AnalogSenseRaw 0020  
                        _lowByteChar 0051                           _RC1STAbits 019D  
                         _RC3PPSbits 0EA3                           _RB5PPSbits 0E9D  
                           int$flags 007E                        _eepromReadLen 004D  
                     _DelayMsecCount 002E              ??_valuetocharHighNibble 0075  
                  ??_TMR2_StartTimer 0072   __end_of_INTERRUPT_InterruptManager 0016  
         _INTERRUPT_InterruptManager 0004                    ??_LedONStatusBusy 0072  
                    ?_FanStartConfig 0070          PIN_MANAGER_Initialize@state 0072  
           LedONStartConfig@LEDcolor 005C                     _char2bytetovalue 0EAF  
                         _INTCONbits 000B                      ??_TMR0_CallBack 0071  
                        _NVMCON1bits 0895         PackageTxResponseData@dataLen 005A  
              __end_of_One_msec_task 0EAF                 _PackageTxResponseACK 05F8  
                           intlevel1 0000                    ??_TMR2_WriteTimer 0072  
                _LedON_Duration_msec 0032                _Buzzer_Duration_1msec 002C  
            ?_PIN_MANAGER_Initialize 0070             __end_of_EUSART_RX_Enable 0D53  
                  __CFG_CLKOUTEN$OFF 0000                          _PPSLOCKbits 0E0F  
                   ??_ADC_Initialize 0072                         ?_chartovalue 0070  
                     _RxFrameDataLen 0045               ?_PackageTxResponseNACK 0070  
             ?_PackageTxResponseData 0059           __size_ofi1_TMR2_WriteTimer 0005  
                 _SetBuzzDurationSec 0048                     ??_TMR2_StopTimer 0070  
                       _ToolTemp_adc 0038                   _RxFrameDecodeState 0047  
           char2bytetovalue@LowBchar 0075                     _Buzzer_1msec_Cnt 002A  
                    _TMR0_Initialize 0DC1                      _Blick_tickPoint 0026  
              ?_PackageTxResponseACK 0070                   EUSART_Write@txData 0072  
     __end_of_PIN_MANAGER_Initialize 0FB3                          _PWMTMRSbits 061F  
        __end_of_EUSART_TX_Completed 0D5D         BuzzerStartConfig@BuzzNumBeep 0058  
                  ??_Fan_Control_Sec 0070           __size_of_ADC_GetConversion 0019  
